(* dans la couche 0 *)
Lemma LP1 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1M : rk(P1 ::  nil) <= 1) by (solve_hyps_max HP1eq HP1M1).
assert(HP1m : rk(P1 ::  nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2M : rk(P2 ::  nil) <= 1) by (solve_hyps_max HP2eq HP2M1).
assert(HP2m : rk(P2 ::  nil) >= 1) by (solve_hyps_min HP2eq HP2m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P2M : rk(P1 :: P2 ::  nil) <= 2) by (solve_hyps_max HP1P2eq HP1P2M2).
assert(HP1P2m : rk(P1 :: P2 ::  nil) >= 1) by (solve_hyps_min HP1P2eq HP1P2m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP3 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P3 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP3M : rk(P3 ::  nil) <= 1) by (solve_hyps_max HP3eq HP3M1).
assert(HP3m : rk(P3 ::  nil) >= 1) by (solve_hyps_min HP3eq HP3m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P3 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P3M : rk(P1 :: P3 ::  nil) <= 2) by (solve_hyps_max HP1P3eq HP1P3M2).
assert(HP1P3m : rk(P1 :: P3 ::  nil) >= 1) by (solve_hyps_min HP1P3eq HP1P3m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P3 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P3M : rk(P2 :: P3 ::  nil) <= 2) by (solve_hyps_max HP2P3eq HP2P3M2).
assert(HP2P3m : rk(P2 :: P3 ::  nil) >= 1) by (solve_hyps_min HP2P3eq HP2P3m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P2P3 *)
(* dans la couche 0 *)
Lemma LP1P2P3P4 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P2P3P4M : rk(P1 :: P2 :: P3 :: P4 ::  nil) <= 4) by (solve_hyps_max HP1P2P3P4eq HP1P2P3P4M4).
assert(HP1P2P3P4m : rk(P1 :: P2 :: P3 :: P4 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P4eq HP1P2P3P4m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P2P3 *)
(* dans la couche 0 *)
Lemma LP4 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P4 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP4M : rk(P4 ::  nil) <= 1) by (solve_hyps_max HP4eq HP4M1).
assert(HP4m : rk(P4 ::  nil) >= 1) by (solve_hyps_min HP4eq HP4m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P3 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P3 requis par la preuve de (?)P1P2P3 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P3 requis par la preuve de (?)P1P2P3 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3m2 : rk(P1 :: P2 :: P3 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 -1 et 4*)
assert(HP1P2P3m3 : rk(P1 :: P2 :: P3 :: nil) >= 3).
{
	try assert(HP4eq : rk(P4 :: nil) = 1) by (apply LP4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP4Mtmp : rk(P4 :: nil) <= 1) by (solve_hyps_max HP4eq HP4M1).
	try assert(HP1P2P3P4eq : rk(P1 :: P2 :: P3 :: P4 :: nil) = 4) by (apply LP1P2P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P4mtmp : rk(P1 :: P2 :: P3 :: P4 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4eq HP1P2P3P4m4).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: P2 :: P3 :: nil) (P4 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P4 :: nil) (P1 :: P2 :: P3 :: P4 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P3 :: P4 :: nil) ((P1 :: P2 :: P3 :: nil) ++ (P4 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P4mtmp;try rewrite HT2 in HP1P2P3P4mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P3 :: nil) (P4 :: nil) (nil) 4 0 1 HP1P2P3P4mtmp Hmtmp HP4Mtmp Hincl);apply HT.
}


assert(HP1P2P3M : rk(P1 :: P2 :: P3 ::  nil) <= 3) by (solve_hyps_max HP1P2P3eq HP1P2P3M3).
assert(HP1P2P3m : rk(P1 :: P2 :: P3 ::  nil) >= 1) by (solve_hyps_min HP1P2P3eq HP1P2P3m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P4 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P4 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P4M : rk(P1 :: P4 ::  nil) <= 2) by (solve_hyps_max HP1P4eq HP1P4M2).
assert(HP1P4m : rk(P1 :: P4 ::  nil) >= 1) by (solve_hyps_min HP1P4eq HP1P4m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P4 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P4M : rk(P2 :: P4 ::  nil) <= 2) by (solve_hyps_max HP2P4eq HP2P4M2).
assert(HP2P4m : rk(P2 :: P4 ::  nil) >= 1) by (solve_hyps_min HP2P4eq HP2P4m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P4 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P4 requis par la preuve de (?)P1P2P4 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P4 requis par la preuve de (?)P1P2P4 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4m2 : rk(P1 :: P2 :: P4 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 -1 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P3 :: P4 ::  AiB :  A : P3 ::  *)
assert(HP1P2P4m3 : rk(P1 :: P2 :: P4 :: nil) >= 3).
{
	try assert(HP3eq : rk(P3 :: nil) = 1) by (apply LP3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3Mtmp : rk(P3 :: nil) <= 1) by (solve_hyps_max HP3eq HP3M1).
	try assert(HP1P2P3P4eq : rk(P1 :: P2 :: P3 :: P4 :: nil) = 4) by (apply LP1P2P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P4mtmp : rk(P1 :: P2 :: P3 :: P4 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4eq HP1P2P3P4m4).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P3 :: nil) (P1 :: P2 :: P4 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P4 :: nil) (P3 :: P1 :: P2 :: P4 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P3 :: P1 :: P2 :: P4 :: nil) ((P3 :: nil) ++ (P1 :: P2 :: P4 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P4mtmp;try rewrite HT2 in HP1P2P3P4mtmp.
	assert(HT := rule_4 (P3 :: nil) (P1 :: P2 :: P4 :: nil) (nil) 4 0 1 HP1P2P3P4mtmp Hmtmp HP3Mtmp Hincl); apply HT.
}


assert(HP1P2P4M : rk(P1 :: P2 :: P4 ::  nil) <= 3) by (solve_hyps_max HP1P2P4eq HP1P2P4M3).
assert(HP1P2P4m : rk(P1 :: P2 :: P4 ::  nil) >= 1) by (solve_hyps_min HP1P2P4eq HP1P2P4m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP3P4 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP3P4M : rk(P3 :: P4 ::  nil) <= 2) by (solve_hyps_max HP3P4eq HP3P4M2).
assert(HP3P4m : rk(P3 :: P4 ::  nil) >= 1) by (solve_hyps_min HP3P4eq HP3P4m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P3P4 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P3 :: P4 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P3P4 requis par la preuve de (?)P1P3P4 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P3 :: P4 ::  AiB : P1 ::  A : P1 :: P2 ::  *)
assert(HP1P3P4m3 : rk(P1 :: P3 :: P4 :: nil) >= 3).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2Mtmp : rk(P1 :: P2 :: nil) <= 2) by (solve_hyps_max HP1P2eq HP1P2M2).
	try assert(HP1P2P3P4eq : rk(P1 :: P2 :: P3 :: P4 :: nil) = 4) by (apply LP1P2P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P4mtmp : rk(P1 :: P2 :: P3 :: P4 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4eq HP1P2P3P4m4).
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1mtmp : rk(P1 :: nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
	assert(Hincl : incl (P1 :: nil) (list_inter (P1 :: P2 :: nil) (P1 :: P3 :: P4 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P4 :: nil) (P1 :: P2 :: P1 :: P3 :: P4 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P1 :: P3 :: P4 :: nil) ((P1 :: P2 :: nil) ++ (P1 :: P3 :: P4 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P4mtmp;try rewrite HT2 in HP1P2P3P4mtmp.
	assert(HT := rule_4 (P1 :: P2 :: nil) (P1 :: P3 :: P4 :: nil) (P1 :: nil) 4 1 2 HP1P2P3P4mtmp HP1mtmp HP1P2Mtmp Hincl); apply HT.
}


assert(HP1P3P4M : rk(P1 :: P3 :: P4 ::  nil) <= 3) by (solve_hyps_max HP1P3P4eq HP1P3P4M3).
assert(HP1P3P4m : rk(P1 :: P3 :: P4 ::  nil) >= 1) by (solve_hyps_min HP1P3P4eq HP1P3P4m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P3P4 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 :: P4 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P3P4M : rk(P2 :: P3 :: P4 ::  nil) <= 3) by (solve_hyps_max HP2P3P4eq HP2P3P4M3).
assert(HP2P3P4m : rk(P2 :: P3 :: P4 ::  nil) >= 1) by (solve_hyps_min HP2P3P4eq HP2P3P4m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P5 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP5M : rk(P5 ::  nil) <= 1) by (solve_hyps_max HP5eq HP5M1).
assert(HP5m : rk(P5 ::  nil) >= 1) by (solve_hyps_min HP5eq HP5m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P5 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P5M : rk(P1 :: P5 ::  nil) <= 2) by (solve_hyps_max HP1P5eq HP1P5M2).
assert(HP1P5m : rk(P1 :: P5 ::  nil) >= 1) by (solve_hyps_min HP1P5eq HP1P5m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P5 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P5M : rk(P2 :: P5 ::  nil) <= 2) by (solve_hyps_max HP2P5eq HP2P5M2).
assert(HP2P5m : rk(P2 :: P5 ::  nil) >= 1) by (solve_hyps_min HP2P5eq HP2P5m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P2P5 *)
(* dans la couche 0 *)
Lemma LP1P2P3P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P2P3P5M : rk(P1 :: P2 :: P3 :: P5 ::  nil) <= 4) by (solve_hyps_max HP1P2P3P5eq HP1P2P3P5M4).
assert(HP1P2P3P5m : rk(P1 :: P2 :: P3 :: P5 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P5eq HP1P2P3P5m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P5 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P5 requis par la preuve de (?)P1P2P5 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P5 requis par la preuve de (?)P1P2P5 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5m2 : rk(P1 :: P2 :: P5 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 -1 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P3 :: P5 ::  AiB :  A : P3 ::  *)
assert(HP1P2P5m3 : rk(P1 :: P2 :: P5 :: nil) >= 3).
{
	try assert(HP3eq : rk(P3 :: nil) = 1) by (apply LP3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3Mtmp : rk(P3 :: nil) <= 1) by (solve_hyps_max HP3eq HP3M1).
	try assert(HP1P2P3P5eq : rk(P1 :: P2 :: P3 :: P5 :: nil) = 4) by (apply LP1P2P3P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5mtmp : rk(P1 :: P2 :: P3 :: P5 :: nil) >= 4) by (solve_hyps_min HP1P2P3P5eq HP1P2P3P5m4).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P3 :: nil) (P1 :: P2 :: P5 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P5 :: nil) (P3 :: P1 :: P2 :: P5 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P3 :: P1 :: P2 :: P5 :: nil) ((P3 :: nil) ++ (P1 :: P2 :: P5 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P5mtmp;try rewrite HT2 in HP1P2P3P5mtmp.
	assert(HT := rule_4 (P3 :: nil) (P1 :: P2 :: P5 :: nil) (nil) 4 0 1 HP1P2P3P5mtmp Hmtmp HP3Mtmp Hincl); apply HT.
}


assert(HP1P2P5M : rk(P1 :: P2 :: P5 ::  nil) <= 3) by (solve_hyps_max HP1P2P5eq HP1P2P5M3).
assert(HP1P2P5m : rk(P1 :: P2 :: P5 ::  nil) >= 1) by (solve_hyps_min HP1P2P5eq HP1P2P5m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP3P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP3P5M : rk(P3 :: P5 ::  nil) <= 2) by (solve_hyps_max HP3P5eq HP3P5M2).
assert(HP3P5m : rk(P3 :: P5 ::  nil) >= 1) by (solve_hyps_min HP3P5eq HP3P5m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P3P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P3 :: P5 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P3P5 requis par la preuve de (?)P1P3P5 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P3 :: P5 ::  AiB : P1 ::  A : P1 :: P2 ::  *)
assert(HP1P3P5m3 : rk(P1 :: P3 :: P5 :: nil) >= 3).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2Mtmp : rk(P1 :: P2 :: nil) <= 2) by (solve_hyps_max HP1P2eq HP1P2M2).
	try assert(HP1P2P3P5eq : rk(P1 :: P2 :: P3 :: P5 :: nil) = 4) by (apply LP1P2P3P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5mtmp : rk(P1 :: P2 :: P3 :: P5 :: nil) >= 4) by (solve_hyps_min HP1P2P3P5eq HP1P2P3P5m4).
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1mtmp : rk(P1 :: nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
	assert(Hincl : incl (P1 :: nil) (list_inter (P1 :: P2 :: nil) (P1 :: P3 :: P5 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P5 :: nil) (P1 :: P2 :: P1 :: P3 :: P5 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P1 :: P3 :: P5 :: nil) ((P1 :: P2 :: nil) ++ (P1 :: P3 :: P5 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P5mtmp;try rewrite HT2 in HP1P2P3P5mtmp.
	assert(HT := rule_4 (P1 :: P2 :: nil) (P1 :: P3 :: P5 :: nil) (P1 :: nil) 4 1 2 HP1P2P3P5mtmp HP1mtmp HP1P2Mtmp Hincl); apply HT.
}


assert(HP1P3P5M : rk(P1 :: P3 :: P5 ::  nil) <= 3) by (solve_hyps_max HP1P3P5eq HP1P3P5M3).
assert(HP1P3P5m : rk(P1 :: P3 :: P5 ::  nil) >= 1) by (solve_hyps_min HP1P3P5eq HP1P3P5m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P3P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P3P5M : rk(P2 :: P3 :: P5 ::  nil) <= 3) by (solve_hyps_max HP2P3P5eq HP2P3P5M3).
assert(HP2P3P5m : rk(P2 :: P3 :: P5 ::  nil) >= 1) by (solve_hyps_min HP2P3P5eq HP2P3P5m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP4P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P4 :: P5 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP4P5M : rk(P4 :: P5 ::  nil) <= 2) by (solve_hyps_max HP4P5eq HP4P5M2).
assert(HP4P5m : rk(P4 :: P5 ::  nil) >= 1) by (solve_hyps_min HP4P5eq HP4P5m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P4P5 *)
(* dans la couche 0 *)
Lemma LP1P2P4P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P2P4P5M : rk(P1 :: P2 :: P4 :: P5 ::  nil) <= 4) by (solve_hyps_max HP1P2P4P5eq HP1P2P4P5M4).
assert(HP1P2P4P5m : rk(P1 :: P2 :: P4 :: P5 ::  nil) >= 1) by (solve_hyps_min HP1P2P4P5eq HP1P2P4P5m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P4P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P4 :: P5 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P4P5 requis par la preuve de (?)P1P4P5 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P4 :: P5 ::  AiB : P1 ::  A : P1 :: P2 ::  *)
assert(HP1P4P5m3 : rk(P1 :: P4 :: P5 :: nil) >= 3).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2Mtmp : rk(P1 :: P2 :: nil) <= 2) by (solve_hyps_max HP1P2eq HP1P2M2).
	try assert(HP1P2P4P5eq : rk(P1 :: P2 :: P4 :: P5 :: nil) = 4) by (apply LP1P2P4P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P5mtmp : rk(P1 :: P2 :: P4 :: P5 :: nil) >= 4) by (solve_hyps_min HP1P2P4P5eq HP1P2P4P5m4).
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1mtmp : rk(P1 :: nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
	assert(Hincl : incl (P1 :: nil) (list_inter (P1 :: P2 :: nil) (P1 :: P4 :: P5 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P5 :: nil) (P1 :: P2 :: P1 :: P4 :: P5 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P1 :: P4 :: P5 :: nil) ((P1 :: P2 :: nil) ++ (P1 :: P4 :: P5 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P4P5mtmp;try rewrite HT2 in HP1P2P4P5mtmp.
	assert(HT := rule_4 (P1 :: P2 :: nil) (P1 :: P4 :: P5 :: nil) (P1 :: nil) 4 1 2 HP1P2P4P5mtmp HP1mtmp HP1P2Mtmp Hincl); apply HT.
}


assert(HP1P4P5M : rk(P1 :: P4 :: P5 ::  nil) <= 3) by (solve_hyps_max HP1P4P5eq HP1P4P5M3).
assert(HP1P4P5m : rk(P1 :: P4 :: P5 ::  nil) >= 1) by (solve_hyps_min HP1P4P5eq HP1P4P5m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P4P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P4P5M : rk(P2 :: P4 :: P5 ::  nil) <= 3) by (solve_hyps_max HP2P4P5eq HP2P4P5M3).
assert(HP2P4P5m : rk(P2 :: P4 :: P5 ::  nil) >= 1) by (solve_hyps_min HP2P4P5eq HP2P4P5m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P3P4P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P3P4P5M : rk(P2 :: P3 :: P4 :: P5 ::  nil) <= 4) by (solve_hyps_max HP2P3P4P5eq HP2P3P4P5M4).
assert(HP2P3P4P5m : rk(P2 :: P3 :: P4 :: P5 ::  nil) >= 1) by (solve_hyps_min HP2P3P4P5eq HP2P3P4P5m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P3P4P5 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P2P3P4P5M : rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) <= 5) by (solve_hyps_max HP1P2P3P4P5eq HP1P2P3P4P5M5).
assert(HP1P2P3P4P5m : rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P4P5eq HP1P2P3P4P5m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P6 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP6M : rk(P6 ::  nil) <= 1) by (solve_hyps_max HP6eq HP6M1).
assert(HP6m : rk(P6 ::  nil) >= 1) by (solve_hyps_min HP6eq HP6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P6 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P6M : rk(P1 :: P6 ::  nil) <= 2) by (solve_hyps_max HP1P6eq HP1P6M2).
assert(HP1P6m : rk(P1 :: P6 ::  nil) >= 1) by (solve_hyps_min HP1P6eq HP1P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P6 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P6M : rk(P2 :: P6 ::  nil) <= 2) by (solve_hyps_max HP2P6eq HP2P6M2).
assert(HP2P6m : rk(P2 :: P6 ::  nil) >= 1) by (solve_hyps_min HP2P6eq HP2P6m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P2P6 *)
(* dans la couche 0 *)
Lemma LP1P2P3P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P2P3P6M : rk(P1 :: P2 :: P3 :: P6 ::  nil) <= 4) by (solve_hyps_max HP1P2P3P6eq HP1P2P3P6M4).
assert(HP1P2P3P6m : rk(P1 :: P2 :: P3 :: P6 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P6eq HP1P2P3P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P6 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P6 requis par la preuve de (?)P1P2P6 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P6 requis par la preuve de (?)P1P2P6 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P6m2 : rk(P1 :: P2 :: P6 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P6 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P6 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 -1 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P3 :: P6 ::  AiB :  A : P3 ::  *)
assert(HP1P2P6m3 : rk(P1 :: P2 :: P6 :: nil) >= 3).
{
	try assert(HP3eq : rk(P3 :: nil) = 1) by (apply LP3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3Mtmp : rk(P3 :: nil) <= 1) by (solve_hyps_max HP3eq HP3M1).
	try assert(HP1P2P3P6eq : rk(P1 :: P2 :: P3 :: P6 :: nil) = 4) by (apply LP1P2P3P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P6mtmp : rk(P1 :: P2 :: P3 :: P6 :: nil) >= 4) by (solve_hyps_min HP1P2P3P6eq HP1P2P3P6m4).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P3 :: nil) (P1 :: P2 :: P6 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P6 :: nil) (P3 :: P1 :: P2 :: P6 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P3 :: P1 :: P2 :: P6 :: nil) ((P3 :: nil) ++ (P1 :: P2 :: P6 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P6mtmp;try rewrite HT2 in HP1P2P3P6mtmp.
	assert(HT := rule_4 (P3 :: nil) (P1 :: P2 :: P6 :: nil) (nil) 4 0 1 HP1P2P3P6mtmp Hmtmp HP3Mtmp Hincl); apply HT.
}


assert(HP1P2P6M : rk(P1 :: P2 :: P6 ::  nil) <= 3) by (solve_hyps_max HP1P2P6eq HP1P2P6M3).
assert(HP1P2P6m : rk(P1 :: P2 :: P6 ::  nil) >= 1) by (solve_hyps_min HP1P2P6eq HP1P2P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP3P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP3P6M : rk(P3 :: P6 ::  nil) <= 2) by (solve_hyps_max HP3P6eq HP3P6M2).
assert(HP3P6m : rk(P3 :: P6 ::  nil) >= 1) by (solve_hyps_min HP3P6eq HP3P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P3P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P3 :: P6 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P3P6 requis par la preuve de (?)P1P3P6 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P3 :: P6 ::  AiB : P1 ::  A : P1 :: P2 ::  *)
assert(HP1P3P6m3 : rk(P1 :: P3 :: P6 :: nil) >= 3).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2Mtmp : rk(P1 :: P2 :: nil) <= 2) by (solve_hyps_max HP1P2eq HP1P2M2).
	try assert(HP1P2P3P6eq : rk(P1 :: P2 :: P3 :: P6 :: nil) = 4) by (apply LP1P2P3P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P6mtmp : rk(P1 :: P2 :: P3 :: P6 :: nil) >= 4) by (solve_hyps_min HP1P2P3P6eq HP1P2P3P6m4).
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1mtmp : rk(P1 :: nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
	assert(Hincl : incl (P1 :: nil) (list_inter (P1 :: P2 :: nil) (P1 :: P3 :: P6 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P6 :: nil) (P1 :: P2 :: P1 :: P3 :: P6 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P1 :: P3 :: P6 :: nil) ((P1 :: P2 :: nil) ++ (P1 :: P3 :: P6 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P6mtmp;try rewrite HT2 in HP1P2P3P6mtmp.
	assert(HT := rule_4 (P1 :: P2 :: nil) (P1 :: P3 :: P6 :: nil) (P1 :: nil) 4 1 2 HP1P2P3P6mtmp HP1mtmp HP1P2Mtmp Hincl); apply HT.
}


assert(HP1P3P6M : rk(P1 :: P3 :: P6 ::  nil) <= 3) by (solve_hyps_max HP1P3P6eq HP1P3P6M3).
assert(HP1P3P6m : rk(P1 :: P3 :: P6 ::  nil) >= 1) by (solve_hyps_min HP1P3P6eq HP1P3P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P3P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P3P6M : rk(P2 :: P3 :: P6 ::  nil) <= 3) by (solve_hyps_max HP2P3P6eq HP2P3P6M3).
assert(HP2P3P6m : rk(P2 :: P3 :: P6 ::  nil) >= 1) by (solve_hyps_min HP2P3P6eq HP2P3P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP4P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P4 :: P6 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP4P6M : rk(P4 :: P6 ::  nil) <= 2) by (solve_hyps_max HP4P6eq HP4P6M2).
assert(HP4P6m : rk(P4 :: P6 ::  nil) >= 1) by (solve_hyps_min HP4P6eq HP4P6m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P4P6 *)
(* dans la couche 0 *)
Lemma LP1P2P4P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P2P4P6M : rk(P1 :: P2 :: P4 :: P6 ::  nil) <= 4) by (solve_hyps_max HP1P2P4P6eq HP1P2P4P6M4).
assert(HP1P2P4P6m : rk(P1 :: P2 :: P4 :: P6 ::  nil) >= 1) by (solve_hyps_min HP1P2P4P6eq HP1P2P4P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P4P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P4 :: P6 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P4P6 requis par la preuve de (?)P1P4P6 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P4 :: P6 ::  AiB : P1 ::  A : P1 :: P2 ::  *)
assert(HP1P4P6m3 : rk(P1 :: P4 :: P6 :: nil) >= 3).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2Mtmp : rk(P1 :: P2 :: nil) <= 2) by (solve_hyps_max HP1P2eq HP1P2M2).
	try assert(HP1P2P4P6eq : rk(P1 :: P2 :: P4 :: P6 :: nil) = 4) by (apply LP1P2P4P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P6mtmp : rk(P1 :: P2 :: P4 :: P6 :: nil) >= 4) by (solve_hyps_min HP1P2P4P6eq HP1P2P4P6m4).
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1mtmp : rk(P1 :: nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
	assert(Hincl : incl (P1 :: nil) (list_inter (P1 :: P2 :: nil) (P1 :: P4 :: P6 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P6 :: nil) (P1 :: P2 :: P1 :: P4 :: P6 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P1 :: P4 :: P6 :: nil) ((P1 :: P2 :: nil) ++ (P1 :: P4 :: P6 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P4P6mtmp;try rewrite HT2 in HP1P2P4P6mtmp.
	assert(HT := rule_4 (P1 :: P2 :: nil) (P1 :: P4 :: P6 :: nil) (P1 :: nil) 4 1 2 HP1P2P4P6mtmp HP1mtmp HP1P2Mtmp Hincl); apply HT.
}


assert(HP1P4P6M : rk(P1 :: P4 :: P6 ::  nil) <= 3) by (solve_hyps_max HP1P4P6eq HP1P4P6M3).
assert(HP1P4P6m : rk(P1 :: P4 :: P6 ::  nil) >= 1) by (solve_hyps_min HP1P4P6eq HP1P4P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P4P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P4P6M : rk(P2 :: P4 :: P6 ::  nil) <= 3) by (solve_hyps_max HP2P4P6eq HP2P4P6M3).
assert(HP2P4P6m : rk(P2 :: P4 :: P6 ::  nil) >= 1) by (solve_hyps_min HP2P4P6eq HP2P4P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P3P4P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P3P4P6M : rk(P2 :: P3 :: P4 :: P6 ::  nil) <= 4) by (solve_hyps_max HP2P3P4P6eq HP2P3P4P6M4).
assert(HP2P3P4P6m : rk(P2 :: P3 :: P4 :: P6 ::  nil) >= 1) by (solve_hyps_min HP2P3P4P6eq HP2P3P4P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP5P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P5 :: P6 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP5P6M : rk(P5 :: P6 ::  nil) <= 2) by (solve_hyps_max HP5P6eq HP5P6M2).
assert(HP5P6m : rk(P5 :: P6 ::  nil) >= 1) by (solve_hyps_min HP5P6eq HP5P6m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P5P6 *)
(* dans la couche 0 *)
Lemma LP1P2P5P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P2P5P6M : rk(P1 :: P2 :: P5 :: P6 ::  nil) <= 4) by (solve_hyps_max HP1P2P5P6eq HP1P2P5P6M4).
assert(HP1P2P5P6m : rk(P1 :: P2 :: P5 :: P6 ::  nil) >= 1) by (solve_hyps_min HP1P2P5P6eq HP1P2P5P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P5P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P5 :: P6 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P5P6 requis par la preuve de (?)P1P5P6 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P5 :: P6 ::  AiB : P1 ::  A : P1 :: P2 ::  *)
assert(HP1P5P6m3 : rk(P1 :: P5 :: P6 :: nil) >= 3).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2Mtmp : rk(P1 :: P2 :: nil) <= 2) by (solve_hyps_max HP1P2eq HP1P2M2).
	try assert(HP1P2P5P6eq : rk(P1 :: P2 :: P5 :: P6 :: nil) = 4) by (apply LP1P2P5P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5P6mtmp : rk(P1 :: P2 :: P5 :: P6 :: nil) >= 4) by (solve_hyps_min HP1P2P5P6eq HP1P2P5P6m4).
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1mtmp : rk(P1 :: nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
	assert(Hincl : incl (P1 :: nil) (list_inter (P1 :: P2 :: nil) (P1 :: P5 :: P6 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P6 :: nil) (P1 :: P2 :: P1 :: P5 :: P6 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P1 :: P5 :: P6 :: nil) ((P1 :: P2 :: nil) ++ (P1 :: P5 :: P6 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P5P6mtmp;try rewrite HT2 in HP1P2P5P6mtmp.
	assert(HT := rule_4 (P1 :: P2 :: nil) (P1 :: P5 :: P6 :: nil) (P1 :: nil) 4 1 2 HP1P2P5P6mtmp HP1mtmp HP1P2Mtmp Hincl); apply HT.
}


assert(HP1P5P6M : rk(P1 :: P5 :: P6 ::  nil) <= 3) by (solve_hyps_max HP1P5P6eq HP1P5P6M3).
assert(HP1P5P6m : rk(P1 :: P5 :: P6 ::  nil) >= 1) by (solve_hyps_min HP1P5P6eq HP1P5P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P5P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P5 :: P6 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P5P6M : rk(P2 :: P5 :: P6 ::  nil) <= 3) by (solve_hyps_max HP2P5P6eq HP2P5P6M3).
assert(HP2P5P6m : rk(P2 :: P5 :: P6 ::  nil) >= 1) by (solve_hyps_min HP2P5P6eq HP2P5P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P3P5P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P3P5P6M : rk(P2 :: P3 :: P5 :: P6 ::  nil) <= 4) by (solve_hyps_max HP2P3P5P6eq HP2P3P5P6M4).
assert(HP2P3P5P6m : rk(P2 :: P3 :: P5 :: P6 ::  nil) >= 1) by (solve_hyps_min HP2P3P5P6eq HP2P3P5P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P3P5P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P2P3P5P6M : rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) <= 5) by (solve_hyps_max HP1P2P3P5P6eq HP1P2P3P5P6M5).
assert(HP1P2P3P5P6m : rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P5P6eq HP1P2P3P5P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P4P5P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P4P5P6M : rk(P2 :: P4 :: P5 :: P6 ::  nil) <= 4) by (solve_hyps_max HP2P4P5P6eq HP2P4P5P6M4).
assert(HP2P4P5P6m : rk(P2 :: P4 :: P5 :: P6 ::  nil) >= 1) by (solve_hyps_min HP2P4P5P6eq HP2P4P5P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P4P5P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P2P4P5P6M : rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) <= 5) by (solve_hyps_max HP1P2P4P5P6eq HP1P2P4P5P6M5).
assert(HP1P2P4P5P6m : rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) >= 1) by (solve_hyps_min HP1P2P4P5P6eq HP1P2P4P5P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P3P4P5P6 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P3P4P5P6M : rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) <= 5) by (solve_hyps_max HP2P3P4P5P6eq HP2P3P4P5P6M5).
assert(HP2P3P4P5P6m : rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) >= 1) by (solve_hyps_min HP2P3P4P5P6eq HP2P3P4P5P6m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP7 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P7 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP7M : rk(P7 ::  nil) <= 1) by (solve_hyps_max HP7eq HP7M1).
assert(HP7m : rk(P7 ::  nil) >= 1) by (solve_hyps_min HP7eq HP7m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P7 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P7 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P7M : rk(P1 :: P7 ::  nil) <= 2) by (solve_hyps_max HP1P7eq HP1P7M2).
assert(HP1P7m : rk(P1 :: P7 ::  nil) >= 1) by (solve_hyps_min HP1P7eq HP1P7m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P7 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P7M : rk(P2 :: P7 ::  nil) <= 2) by (solve_hyps_max HP2P7eq HP2P7M2).
assert(HP2P7m : rk(P2 :: P7 ::  nil) >= 1) by (solve_hyps_min HP2P7eq HP2P7m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P7 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P7 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P2P7M : rk(P1 :: P2 :: P7 ::  nil) <= 3) by (solve_hyps_max HP1P2P7eq HP1P2P7M3).
assert(HP1P2P7m : rk(P1 :: P2 :: P7 ::  nil) >= 1) by (solve_hyps_min HP1P2P7eq HP1P2P7m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP8 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P8 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP8M : rk(P8 ::  nil) <= 1) by (solve_hyps_max HP8eq HP8M1).
assert(HP8m : rk(P8 ::  nil) >= 1) by (solve_hyps_min HP8eq HP8m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P8 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P8M : rk(P1 :: P8 ::  nil) <= 2) by (solve_hyps_max HP1P8eq HP1P8M2).
assert(HP1P8m : rk(P1 :: P8 ::  nil) >= 1) by (solve_hyps_min HP1P8eq HP1P8m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P2P8 *)
(* dans la couche 0 *)
Lemma LP1P2P3P8 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P8 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P3P8 requis par la preuve de (?)P1P2P3P8 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P3P8 requis par la preuve de (?)P1P2P3P8 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 2 : pour P1P3P8 requis par la preuve de (?)P1P2P3P8 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P3P8 requis par la preuve de (?)P1P2P3P8 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P3P8M3 : rk(P1 :: P2 :: P3 :: P8 :: nil) <= 3).
{
	try assert(HP2eq : rk(P2 :: nil) = 1) by (apply LP2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2Mtmp : rk(P2 :: nil) <= 1) by (solve_hyps_max HP2eq HP2M1).
	assert(HP1P3P8Mtmp : rk(P1 :: P3 :: P8 :: nil) <= 2) by (solve_hyps_max HP1P3P8eq HP1P3P8M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P2 :: nil) (P1 :: P3 :: P8 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P8 :: nil) (P2 :: P1 :: P3 :: P8 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P1 :: P3 :: P8 :: nil) ((P2 :: nil) ++ (P1 :: P3 :: P8 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P2 :: nil) (P1 :: P3 :: P8 :: nil) (nil) 1 2 0 HP2Mtmp HP1P3P8Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P8m2 : rk(P1 :: P2 :: P3 :: P8 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P8 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P8 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P8m3 : rk(P1 :: P2 :: P3 :: P8 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P8 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P8 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


assert(HP1P2P3P8M : rk(P1 :: P2 :: P3 :: P8 ::  nil) <= 4) by (solve_hyps_max HP1P2P3P8eq HP1P2P3P8M4).
assert(HP1P2P3P8m : rk(P1 :: P2 :: P3 :: P8 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P8eq HP1P2P3P8m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P8 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P8 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P8 requis par la preuve de (?)P1P2P8 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P8 requis par la preuve de (?)P1P2P8 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P8m2 : rk(P1 :: P2 :: P8 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P8 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P8 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 5*)
assert(HP1P2P8m3 : rk(P1 :: P2 :: P8 :: nil) >= 3).
{
	assert(HP1P3P8Mtmp : rk(P1 :: P3 :: P8 :: nil) <= 2) by (solve_hyps_max HP1P3P8eq HP1P3P8M2).
	try assert(HP1P2P3P8eq : rk(P1 :: P2 :: P3 :: P8 :: nil) = 3) by (apply LP1P2P3P8 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P8mtmp : rk(P1 :: P2 :: P3 :: P8 :: nil) >= 3) by (solve_hyps_min HP1P2P3P8eq HP1P2P3P8m3).
	try assert(HP1P8eq : rk(P1 :: P8 :: nil) = 2) by (apply LP1P8 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P8mtmp : rk(P1 :: P8 :: nil) >= 2) by (solve_hyps_min HP1P8eq HP1P8m2).
	assert(Hincl : incl (P1 :: P8 :: nil) (list_inter (P1 :: P2 :: P8 :: nil) (P1 :: P3 :: P8 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P8 :: nil) (P1 :: P2 :: P8 :: P1 :: P3 :: P8 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P8 :: P1 :: P3 :: P8 :: nil) ((P1 :: P2 :: P8 :: nil) ++ (P1 :: P3 :: P8 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P8mtmp;try rewrite HT2 in HP1P2P3P8mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P8 :: nil) (P1 :: P3 :: P8 :: nil) (P1 :: P8 :: nil) 3 2 2 HP1P2P3P8mtmp HP1P8mtmp HP1P3P8Mtmp Hincl);apply HT.
}
try clear HP1P2P3P8M1. try clear HP1P2P3P8M2. try clear HP1P2P3P8M3. try clear HP1P2P3P8M4. try clear HP1P2P3P8M5. try clear HP1P2P3P8M6. try clear HP1P2P3P8M7. try clear HP1P2P3P8m7. try clear HP1P2P3P8m6. try clear HP1P2P3P8m5. try clear HP1P2P3P8m4. try clear HP1P2P3P8m3. try clear HP1P2P3P8m2. try clear HP1P2P3P8m1. 

assert(HP1P2P8M : rk(P1 :: P2 :: P8 ::  nil) <= 3) by (solve_hyps_max HP1P2P8eq HP1P2P8M3).
assert(HP1P2P8m : rk(P1 :: P2 :: P8 ::  nil) >= 1) by (solve_hyps_min HP1P2P8eq HP1P2P8m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP2P7P8 *)
(* dans constructLemma(), requis par LP1P2P4P7P8P9 *)
(* dans constructLemma(), requis par LP1P2P3P4P7P8P9 *)
(* dans constructLemma(), requis par LP1P2P4P7P9 *)
(* dans la couche 0 *)
Lemma LP1P4P9 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P4P9M : rk(P1 :: P4 :: P9 ::  nil) <= 3) by (solve_hyps_max HP1P4P9eq HP1P4P9M3).
assert(HP1P4P9m : rk(P1 :: P4 :: P9 ::  nil) >= 1) by (solve_hyps_min HP1P4P9eq HP1P4P9m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P4P7P9 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 :: P7 :: P9 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P4P7P9 requis par la preuve de (?)P1P2P4P7P9 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 3 : pour P1P2P4P9 requis par la preuve de (?)P1P2P4P7P9 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P4P9 requis par la preuve de (?)P1P2P4P9 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P4P9 requis par la preuve de (?)P1P2P4P9 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P4P9 requis par la preuve de (?)P1P2P4P9 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P2P4P9M3 : rk(P1 :: P2 :: P4 :: P9 :: nil) <= 3).
{
	try assert(HP2eq : rk(P2 :: nil) = 1) by (apply LP2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2Mtmp : rk(P2 :: nil) <= 1) by (solve_hyps_max HP2eq HP2M1).
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P2 :: nil) (P1 :: P4 :: P9 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P9 :: nil) (P2 :: P1 :: P4 :: P9 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P1 :: P4 :: P9 :: nil) ((P2 :: nil) ++ (P1 :: P4 :: P9 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P2 :: nil) (P1 :: P4 :: P9 :: nil) (nil) 1 2 0 HP2Mtmp HP1P4P9Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P9m2 : rk(P1 :: P2 :: P4 :: P9 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P9 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P9m3 : rk(P1 :: P2 :: P4 :: P9 :: nil) >= 3).
{
	try assert(HP1P2P4eq : rk(P1 :: P2 :: P4 :: nil) = 3) by (apply LP1P2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4mtmp : rk(P1 :: P2 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P2P4eq HP1P2P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P9 :: nil) 3 3 HP1P2P4mtmp Hcomp Hincl);apply HT.
}


(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P4P7P9 requis par la preuve de (?)P1P2P4P7P9 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P4P7P9 requis par la preuve de (?)P1P2P4P7P9 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P4P7P9 requis par la preuve de (?)P1P2P4P7P9 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P7P9m2 : rk(P1 :: P2 :: P4 :: P7 :: P9 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P7P9m3 : rk(P1 :: P2 :: P4 :: P7 :: P9 :: nil) >= 3).
{
	try assert(HP1P2P4eq : rk(P1 :: P2 :: P4 :: nil) = 3) by (apply LP1P2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4mtmp : rk(P1 :: P2 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P2P4eq HP1P2P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: nil) 3 3 HP1P2P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P4P7P9M4 : rk(P1 :: P2 :: P4 :: P7 :: P9 :: nil) <= 4).
{
	try assert(HP7eq : rk(P7 :: nil) = 1) by (apply LP7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP7Mtmp : rk(P7 :: nil) <= 1) by (solve_hyps_max HP7eq HP7M1).
	assert(HP1P2P4P9Mtmp : rk(P1 :: P2 :: P4 :: P9 :: nil) <= 3) by (solve_hyps_max HP1P2P4P9eq HP1P2P4P9M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P7 :: nil) (P1 :: P2 :: P4 :: P9 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P7 :: P9 :: nil) (P7 :: P1 :: P2 :: P4 :: P9 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P7 :: P1 :: P2 :: P4 :: P9 :: nil) ((P7 :: nil) ++ (P1 :: P2 :: P4 :: P9 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P7 :: nil) (P1 :: P2 :: P4 :: P9 :: nil) (nil) 1 3 0 HP7Mtmp HP1P2P4P9Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 4*)
assert(HP1P2P4P7P9M3 : rk(P1 :: P2 :: P4 :: P7 :: P9 :: nil) <= 3).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1mtmp : rk(P1 :: nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
	assert(Hincl : incl (P1 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P1 :: P4 :: P9 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P7 :: P9 :: nil) (P1 :: P2 :: P7 :: P1 :: P4 :: P9 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P1 :: P4 :: P9 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P1 :: P4 :: P9 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P2 :: P7 :: nil) (P1 :: P4 :: P9 :: nil) (P1 :: nil) 2 2 1 HP1P2P7Mtmp HP1P4P9Mtmp HP1mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P2P4P7P9M : rk(P1 :: P2 :: P4 :: P7 :: P9 ::  nil) <= 5) by (solve_hyps_max HP1P2P4P7P9eq HP1P2P4P7P9M5).
assert(HP1P2P4P7P9m : rk(P1 :: P2 :: P4 :: P7 :: P9 ::  nil) >= 1) by (solve_hyps_min HP1P2P4P7P9eq HP1P2P4P7P9m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P3P4P7P8P9 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P2P3P4P7P8P9 requis par la preuve de (?)P1P2P3P4P7P8P9 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P3P4P7P8P9 requis par la preuve de (?)P1P2P3P4P7P8P9 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P4P7P8P9 requis par la preuve de (?)P1P2P3P4P7P8P9 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P4P7P8P9 requis par la preuve de (?)P1P2P3P4P7P8P9 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P7P8P9m2 : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P7P8P9m3 : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P7P8P9m4 : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil) >= 4).
{
	try assert(HP1P2P3P4eq : rk(P1 :: P2 :: P3 :: P4 :: nil) = 4) by (apply LP1P2P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P4mtmp : rk(P1 :: P2 :: P3 :: P4 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4eq HP1P2P3P4m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P4 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P4 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil) 4 4 HP1P2P3P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 5 4 et 4*)
assert(HP1P2P3P4P7P8P9M4 : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil) <= 4).
{
	assert(HP1P3P8Mtmp : rk(P1 :: P3 :: P8 :: nil) <= 2) by (solve_hyps_max HP1P3P8eq HP1P3P8M2).
	try assert(HP1P2P4P7P9eq : rk(P1 :: P2 :: P4 :: P7 :: P9 :: nil) = 3) by (apply LP1P2P4P7P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P7P9Mtmp : rk(P1 :: P2 :: P4 :: P7 :: P9 :: nil) <= 3) by (solve_hyps_max HP1P2P4P7P9eq HP1P2P4P7P9M3).
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1mtmp : rk(P1 :: nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
	assert(Hincl : incl (P1 :: nil) (list_inter (P1 :: P3 :: P8 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil) (P1 :: P3 :: P8 :: P1 :: P2 :: P4 :: P7 :: P9 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P3 :: P8 :: P1 :: P2 :: P4 :: P7 :: P9 :: nil) ((P1 :: P3 :: P8 :: nil) ++ (P1 :: P2 :: P4 :: P7 :: P9 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P3 :: P8 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: nil) (P1 :: nil) 2 3 1 HP1P3P8Mtmp HP1P2P4P7P9Mtmp HP1mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P2P3P4P7P8P9M : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 ::  nil) <= 7) by (solve_hyps_max HP1P2P3P4P7P8P9eq HP1P2P3P4P7P8P9M7).
assert(HP1P2P3P4P7P8P9m : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P4P7P8P9eq HP1P2P3P4P7P8P9m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P4P7P8P9 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 :: P7 :: P8 :: P9 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P4P7P8P9 requis par la preuve de (?)P1P2P4P7P8P9 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P4P7P8P9 requis par la preuve de (?)P1P2P4P7P8P9 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P4P7P8P9 requis par la preuve de (?)P1P2P4P7P8P9 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P4P7P8P9 requis par la preuve de (?)P1P2P4P7P8P9 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P7P8P9m2 : rk(P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P7P8P9m3 : rk(P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil) >= 3).
{
	try assert(HP1P2P4eq : rk(P1 :: P2 :: P4 :: nil) = 3) by (apply LP1P2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4mtmp : rk(P1 :: P2 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P2P4eq HP1P2P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil) 3 3 HP1P2P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P2P4P7P8P9M4 : rk(P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil) <= 4).
{
	try assert(HP8eq : rk(P8 :: nil) = 1) by (apply LP8 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP8Mtmp : rk(P8 :: nil) <= 1) by (solve_hyps_max HP8eq HP8M1).
	try assert(HP1P2P4P7P9eq : rk(P1 :: P2 :: P4 :: P7 :: P9 :: nil) = 3) by (apply LP1P2P4P7P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P7P9Mtmp : rk(P1 :: P2 :: P4 :: P7 :: P9 :: nil) <= 3) by (solve_hyps_max HP1P2P4P7P9eq HP1P2P4P7P9M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P8 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil) (P8 :: P1 :: P2 :: P4 :: P7 :: P9 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P8 :: P1 :: P2 :: P4 :: P7 :: P9 :: nil) ((P8 :: nil) ++ (P1 :: P2 :: P4 :: P7 :: P9 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P8 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: nil) (nil) 1 3 0 HP8Mtmp HP1P2P4P7P9Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 5*)
(* ensembles concernés AUB : P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 ::  AiB : P1 :: P8 ::  A : P1 :: P3 :: P8 ::  *)
assert(HP1P2P4P7P8P9m4 : rk(P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil) >= 4).
{
	assert(HP1P3P8Mtmp : rk(P1 :: P3 :: P8 :: nil) <= 2) by (solve_hyps_max HP1P3P8eq HP1P3P8M2).
	try assert(HP1P2P3P4P7P8P9eq : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil) = 4) by (apply LP1P2P3P4P7P8P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P4P7P8P9mtmp : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4P7P8P9eq HP1P2P3P4P7P8P9m4).
	try assert(HP1P8eq : rk(P1 :: P8 :: nil) = 2) by (apply LP1P8 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P8mtmp : rk(P1 :: P8 :: nil) >= 2) by (solve_hyps_min HP1P8eq HP1P8m2).
	assert(Hincl : incl (P1 :: P8 :: nil) (list_inter (P1 :: P3 :: P8 :: nil) (P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P4 :: P7 :: P8 :: P9 :: nil) (P1 :: P3 :: P8 :: P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P3 :: P8 :: P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil) ((P1 :: P3 :: P8 :: nil) ++ (P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P4P7P8P9mtmp;try rewrite HT2 in HP1P2P3P4P7P8P9mtmp.
	assert(HT := rule_4 (P1 :: P3 :: P8 :: nil) (P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil) (P1 :: P8 :: nil) 4 2 2 HP1P2P3P4P7P8P9mtmp HP1P8mtmp HP1P3P8Mtmp Hincl); apply HT.
}
try clear HP1P2P3P4P7P8P9M1. try clear HP1P2P3P4P7P8P9M2. try clear HP1P2P3P4P7P8P9M3. try clear HP1P2P3P4P7P8P9M4. try clear HP1P2P3P4P7P8P9M5. try clear HP1P2P3P4P7P8P9M6. try clear HP1P2P3P4P7P8P9M7. try clear HP1P2P3P4P7P8P9m7. try clear HP1P2P3P4P7P8P9m6. try clear HP1P2P3P4P7P8P9m5. try clear HP1P2P3P4P7P8P9m4. try clear HP1P2P3P4P7P8P9m3. try clear HP1P2P3P4P7P8P9m2. try clear HP1P2P3P4P7P8P9m1. 

assert(HP1P2P4P7P8P9M : rk(P1 :: P2 :: P4 :: P7 :: P8 :: P9 ::  nil) <= 6) by (solve_hyps_max HP1P2P4P7P8P9eq HP1P2P4P7P8P9M6).
assert(HP1P2P4P7P8P9m : rk(P1 :: P2 :: P4 :: P7 :: P8 :: P9 ::  nil) >= 1) by (solve_hyps_min HP1P2P4P7P8P9eq HP1P2P4P7P8P9m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P7P8 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P7 :: P8 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P7P8 requis par la preuve de (?)P2P7P8 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P7P8 requis par la preuve de (?)P2P7P8 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P7P8m2 : rk(P2 :: P7 :: P8 :: nil) >= 2).
{
	try assert(HP2P7eq : rk(P2 :: P7 :: nil) = 2) by (apply LP2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7mtmp : rk(P2 :: P7 :: nil) >= 2) by (solve_hyps_min HP2P7eq HP2P7m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P7 :: nil) (P2 :: P7 :: P8 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P7 :: nil) (P2 :: P7 :: P8 :: nil) 2 2 HP2P7mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP2P7P8m3 : rk(P2 :: P7 :: P8 :: nil) >= 3).
{
	try assert(HP1P2P4P7P9eq : rk(P1 :: P2 :: P4 :: P7 :: P9 :: nil) = 3) by (apply LP1P2P4P7P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P7P9Mtmp : rk(P1 :: P2 :: P4 :: P7 :: P9 :: nil) <= 3) by (solve_hyps_max HP1P2P4P7P9eq HP1P2P4P7P9M3).
	try assert(HP1P2P4P7P8P9eq : rk(P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil) = 4) by (apply LP1P2P4P7P8P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P7P8P9mtmp : rk(P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil) >= 4) by (solve_hyps_min HP1P2P4P7P8P9eq HP1P2P4P7P8P9m4).
	try assert(HP2P7eq : rk(P2 :: P7 :: nil) = 2) by (apply LP2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7mtmp : rk(P2 :: P7 :: nil) >= 2) by (solve_hyps_min HP2P7eq HP2P7m2).
	assert(Hincl : incl (P2 :: P7 :: nil) (list_inter (P2 :: P7 :: P8 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P7 :: P8 :: P9 :: nil) (P2 :: P7 :: P8 :: P1 :: P2 :: P4 :: P7 :: P9 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P7 :: P8 :: P1 :: P2 :: P4 :: P7 :: P9 :: nil) ((P2 :: P7 :: P8 :: nil) ++ (P1 :: P2 :: P4 :: P7 :: P9 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P4P7P8P9mtmp;try rewrite HT2 in HP1P2P4P7P8P9mtmp.
	assert(HT := rule_2 (P2 :: P7 :: P8 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: nil) (P2 :: P7 :: nil) 4 2 3 HP1P2P4P7P8P9mtmp HP2P7mtmp HP1P2P4P7P9Mtmp Hincl);apply HT.
}
try clear HP1P2P4P7P9M1. try clear HP1P2P4P7P9M2. try clear HP1P2P4P7P9M3. try clear HP1P2P4P7P9M4. try clear HP1P2P4P7P9M5. try clear HP1P2P4P7P9M6. try clear HP1P2P4P7P9M7. try clear HP1P2P4P7P9m7. try clear HP1P2P4P7P9m6. try clear HP1P2P4P7P9m5. try clear HP1P2P4P7P9m4. try clear HP1P2P4P7P9m3. try clear HP1P2P4P7P9m2. try clear HP1P2P4P7P9m1. try clear HP1P2P4P7P8P9M1. try clear HP1P2P4P7P8P9M2. try clear HP1P2P4P7P8P9M3. try clear HP1P2P4P7P8P9M4. try clear HP1P2P4P7P8P9M5. try clear HP1P2P4P7P8P9M6. try clear HP1P2P4P7P8P9M7. try clear HP1P2P4P7P8P9m7. try clear HP1P2P4P7P8P9m6. try clear HP1P2P4P7P8P9m5. try clear HP1P2P4P7P8P9m4. try clear HP1P2P4P7P8P9m3. try clear HP1P2P4P7P8P9m2. try clear HP1P2P4P7P8P9m1. 

assert(HP2P7P8M : rk(P2 :: P7 :: P8 ::  nil) <= 3) by (solve_hyps_max HP2P7P8eq HP2P7P8M3).
assert(HP2P7P8m : rk(P2 :: P7 :: P8 ::  nil) >= 1) by (solve_hyps_min HP2P7P8eq HP2P7P8m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP9 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P9 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP9M : rk(P9 ::  nil) <= 1) by (solve_hyps_max HP9eq HP9M1).
assert(HP9m : rk(P9 ::  nil) >= 1) by (solve_hyps_min HP9eq HP9m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P9 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P9M : rk(P1 :: P9 ::  nil) <= 2) by (solve_hyps_max HP1P9eq HP1P9M2).
assert(HP1P9m : rk(P1 :: P9 ::  nil) >= 1) by (solve_hyps_min HP1P9eq HP1P9m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P9 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P9 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P9 requis par la preuve de (?)P1P2P9 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P9 requis par la preuve de (?)P1P2P9 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P9m2 : rk(P1 :: P2 :: P9 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P9 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 5 4 et 4*)
assert(HP1P2P9m3 : rk(P1 :: P2 :: P9 :: nil) >= 3).
{
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	assert(HP1P2P4P9mtmp : rk(P1 :: P2 :: P4 :: P9 :: nil) >= 3) by (solve_hyps_min HP1P2P4P9eq HP1P2P4P9m3).
	try assert(HP1P9eq : rk(P1 :: P9 :: nil) = 2) by (apply LP1P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P9mtmp : rk(P1 :: P9 :: nil) >= 2) by (solve_hyps_min HP1P9eq HP1P9m2).
	assert(Hincl : incl (P1 :: P9 :: nil) (list_inter (P1 :: P2 :: P9 :: nil) (P1 :: P4 :: P9 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P9 :: nil) (P1 :: P2 :: P9 :: P1 :: P4 :: P9 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P9 :: P1 :: P4 :: P9 :: nil) ((P1 :: P2 :: P9 :: nil) ++ (P1 :: P4 :: P9 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P4P9mtmp;try rewrite HT2 in HP1P2P4P9mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P9 :: nil) (P1 :: P4 :: P9 :: nil) (P1 :: P9 :: nil) 3 2 2 HP1P2P4P9mtmp HP1P9mtmp HP1P4P9Mtmp Hincl);apply HT.
}


assert(HP1P2P9M : rk(P1 :: P2 :: P9 ::  nil) <= 3) by (solve_hyps_max HP1P2P9eq HP1P2P9M3).
assert(HP1P2P9m : rk(P1 :: P2 :: P9 ::  nil) >= 1) by (solve_hyps_min HP1P2P9eq HP1P2P9m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P2P3P9 *)
(* dans la couche 0 *)
Lemma LP1P2P3P4P9 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P4 :: P9 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P3P4P9 requis par la preuve de (?)P1P2P3P4P9 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P3P4P9 requis par la preuve de (?)P1P2P3P4P9 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P4P9 requis par la preuve de (?)P1P2P3P4P9 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P4P9 requis par la preuve de (?)P1P2P3P4P9 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P9m2 : rk(P1 :: P2 :: P3 :: P4 :: P9 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P4 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P4 :: P9 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P3P4P9M4 : rk(P1 :: P2 :: P3 :: P4 :: P9 :: nil) <= 4).
{
	try assert(HP3eq : rk(P3 :: nil) = 1) by (apply LP3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3Mtmp : rk(P3 :: nil) <= 1) by (solve_hyps_max HP3eq HP3M1).
	assert(HP1P2P4P9Mtmp : rk(P1 :: P2 :: P4 :: P9 :: nil) <= 3) by (solve_hyps_max HP1P2P4P9eq HP1P2P4P9M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P3 :: nil) (P1 :: P2 :: P4 :: P9 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P4 :: P9 :: nil) (P3 :: P1 :: P2 :: P4 :: P9 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P3 :: P1 :: P2 :: P4 :: P9 :: nil) ((P3 :: nil) ++ (P1 :: P2 :: P4 :: P9 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P3 :: nil) (P1 :: P2 :: P4 :: P9 :: nil) (nil) 1 3 0 HP3Mtmp HP1P2P4P9Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}
try clear HP1P2P4P9M1. try clear HP1P2P4P9M2. try clear HP1P2P4P9M3. try clear HP1P2P4P9M4. try clear HP1P2P4P9M5. try clear HP1P2P4P9M6. try clear HP1P2P4P9M7. try clear HP1P2P4P9m7. try clear HP1P2P4P9m6. try clear HP1P2P4P9m5. try clear HP1P2P4P9m4. try clear HP1P2P4P9m3. try clear HP1P2P4P9m2. try clear HP1P2P4P9m1. 

(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P9m3 : rk(P1 :: P2 :: P3 :: P4 :: P9 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P4 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P4 :: P9 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P9m4 : rk(P1 :: P2 :: P3 :: P4 :: P9 :: nil) >= 4).
{
	try assert(HP1P2P3P4eq : rk(P1 :: P2 :: P3 :: P4 :: nil) = 4) by (apply LP1P2P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P4mtmp : rk(P1 :: P2 :: P3 :: P4 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4eq HP1P2P3P4m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P4 :: nil) (P1 :: P2 :: P3 :: P4 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P4 :: nil) (P1 :: P2 :: P3 :: P4 :: P9 :: nil) 4 4 HP1P2P3P4mtmp Hcomp Hincl);apply HT.
}


assert(HP1P2P3P4P9M : rk(P1 :: P2 :: P3 :: P4 :: P9 ::  nil) <= 5) by (solve_hyps_max HP1P2P3P4P9eq HP1P2P3P4P9M5).
assert(HP1P2P3P4P9m : rk(P1 :: P2 :: P3 :: P4 :: P9 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P4P9eq HP1P2P3P4P9m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P3P9 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P9 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P3P9 requis par la preuve de (?)P1P2P3P9 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P3P9 requis par la preuve de (?)P1P2P3P9 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P3P9 requis par la preuve de (?)P1P2P3P9 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P9m2 : rk(P1 :: P2 :: P3 :: P9 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P9 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P9m3 : rk(P1 :: P2 :: P3 :: P9 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P9 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP1P2P3P9m4 : rk(P1 :: P2 :: P3 :: P9 :: nil) >= 4).
{
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	try assert(HP1P2P3P4P9eq : rk(P1 :: P2 :: P3 :: P4 :: P9 :: nil) = 4) by (apply LP1P2P3P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P4P9mtmp : rk(P1 :: P2 :: P3 :: P4 :: P9 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4P9eq HP1P2P3P4P9m4).
	try assert(HP1P9eq : rk(P1 :: P9 :: nil) = 2) by (apply LP1P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P9mtmp : rk(P1 :: P9 :: nil) >= 2) by (solve_hyps_min HP1P9eq HP1P9m2).
	assert(Hincl : incl (P1 :: P9 :: nil) (list_inter (P1 :: P2 :: P3 :: P9 :: nil) (P1 :: P4 :: P9 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P4 :: P9 :: nil) (P1 :: P2 :: P3 :: P9 :: P1 :: P4 :: P9 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P3 :: P9 :: P1 :: P4 :: P9 :: nil) ((P1 :: P2 :: P3 :: P9 :: nil) ++ (P1 :: P4 :: P9 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P4P9mtmp;try rewrite HT2 in HP1P2P3P4P9mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P3 :: P9 :: nil) (P1 :: P4 :: P9 :: nil) (P1 :: P9 :: nil) 4 2 2 HP1P2P3P4P9mtmp HP1P9mtmp HP1P4P9Mtmp Hincl);apply HT.
}
try clear HP1P2P3P4P9M1. try clear HP1P2P3P4P9M2. try clear HP1P2P3P4P9M3. try clear HP1P2P3P4P9M4. try clear HP1P2P3P4P9M5. try clear HP1P2P3P4P9M6. try clear HP1P2P3P4P9M7. try clear HP1P2P3P4P9m7. try clear HP1P2P3P4P9m6. try clear HP1P2P3P4P9m5. try clear HP1P2P3P4P9m4. try clear HP1P2P3P4P9m3. try clear HP1P2P3P4P9m2. try clear HP1P2P3P4P9m1. 

assert(HP1P2P3P9M : rk(P1 :: P2 :: P3 :: P9 ::  nil) <= 4) by (solve_hyps_max HP1P2P3P9eq HP1P2P3P9M4).
assert(HP1P2P3P9m : rk(P1 :: P2 :: P3 :: P9 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P9eq HP1P2P3P9m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP4P9 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P4 :: P9 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP4P9M : rk(P4 :: P9 ::  nil) <= 2) by (solve_hyps_max HP4P9eq HP4P9M2).
assert(HP4P9m : rk(P4 :: P9 ::  nil) >= 1) by (solve_hyps_min HP4P9eq HP4P9m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP2P7P9 *)
(* dans constructLemma(), requis par LP1P2P5P7P9P10 *)
(* dans constructLemma(), requis par LP1P2P4P5P7P9P10 *)
(* dans constructLemma(), requis par LP1P2P5P7P10 *)
(* dans la couche 0 *)
Lemma LP1P5P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P5P10M : rk(P1 :: P5 :: P10 ::  nil) <= 3) by (solve_hyps_max HP1P5P10eq HP1P5P10M3).
assert(HP1P5P10m : rk(P1 :: P5 :: P10 ::  nil) >= 1) by (solve_hyps_min HP1P5P10eq HP1P5P10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P5P7P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P5 :: P7 :: P10 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P5P7P10 requis par la preuve de (?)P1P2P5P7P10 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 3 : pour P1P2P5P10 requis par la preuve de (?)P1P2P5P7P10 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P5P10 requis par la preuve de (?)P1P2P5P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P5P10 requis par la preuve de (?)P1P2P5P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P5P10 requis par la preuve de (?)P1P2P5P10 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P2P5P10M3 : rk(P1 :: P2 :: P5 :: P10 :: nil) <= 3).
{
	try assert(HP2eq : rk(P2 :: nil) = 1) by (apply LP2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2Mtmp : rk(P2 :: nil) <= 1) by (solve_hyps_max HP2eq HP2M1).
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P2 :: nil) (P1 :: P5 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P10 :: nil) (P2 :: P1 :: P5 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P1 :: P5 :: P10 :: nil) ((P2 :: nil) ++ (P1 :: P5 :: P10 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P2 :: nil) (P1 :: P5 :: P10 :: nil) (nil) 1 2 0 HP2Mtmp HP1P5P10Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P10m2 : rk(P1 :: P2 :: P5 :: P10 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P10 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P10m3 : rk(P1 :: P2 :: P5 :: P10 :: nil) >= 3).
{
	try assert(HP1P2P5eq : rk(P1 :: P2 :: P5 :: nil) = 3) by (apply LP1P2P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5mtmp : rk(P1 :: P2 :: P5 :: nil) >= 3) by (solve_hyps_min HP1P2P5eq HP1P2P5m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P10 :: nil) 3 3 HP1P2P5mtmp Hcomp Hincl);apply HT.
}


(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P5P7P10 requis par la preuve de (?)P1P2P5P7P10 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P5P7P10 requis par la preuve de (?)P1P2P5P7P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P5P7P10 requis par la preuve de (?)P1P2P5P7P10 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P7P10m2 : rk(P1 :: P2 :: P5 :: P7 :: P10 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P7P10m3 : rk(P1 :: P2 :: P5 :: P7 :: P10 :: nil) >= 3).
{
	try assert(HP1P2P5eq : rk(P1 :: P2 :: P5 :: nil) = 3) by (apply LP1P2P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5mtmp : rk(P1 :: P2 :: P5 :: nil) >= 3) by (solve_hyps_min HP1P2P5eq HP1P2P5m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: nil) 3 3 HP1P2P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P5P7P10M4 : rk(P1 :: P2 :: P5 :: P7 :: P10 :: nil) <= 4).
{
	try assert(HP7eq : rk(P7 :: nil) = 1) by (apply LP7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP7Mtmp : rk(P7 :: nil) <= 1) by (solve_hyps_max HP7eq HP7M1).
	assert(HP1P2P5P10Mtmp : rk(P1 :: P2 :: P5 :: P10 :: nil) <= 3) by (solve_hyps_max HP1P2P5P10eq HP1P2P5P10M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P7 :: nil) (P1 :: P2 :: P5 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P7 :: P10 :: nil) (P7 :: P1 :: P2 :: P5 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P7 :: P1 :: P2 :: P5 :: P10 :: nil) ((P7 :: nil) ++ (P1 :: P2 :: P5 :: P10 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P7 :: nil) (P1 :: P2 :: P5 :: P10 :: nil) (nil) 1 3 0 HP7Mtmp HP1P2P5P10Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 4*)
assert(HP1P2P5P7P10M3 : rk(P1 :: P2 :: P5 :: P7 :: P10 :: nil) <= 3).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1mtmp : rk(P1 :: nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
	assert(Hincl : incl (P1 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P1 :: P5 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P7 :: P10 :: nil) (P1 :: P2 :: P7 :: P1 :: P5 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P1 :: P5 :: P10 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P1 :: P5 :: P10 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P2 :: P7 :: nil) (P1 :: P5 :: P10 :: nil) (P1 :: nil) 2 2 1 HP1P2P7Mtmp HP1P5P10Mtmp HP1mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P2P5P7P10M : rk(P1 :: P2 :: P5 :: P7 :: P10 ::  nil) <= 5) by (solve_hyps_max HP1P2P5P7P10eq HP1P2P5P7P10M5).
assert(HP1P2P5P7P10m : rk(P1 :: P2 :: P5 :: P7 :: P10 ::  nil) >= 1) by (solve_hyps_min HP1P2P5P7P10eq HP1P2P5P7P10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P4P5P7P9P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P2P4P5P7P9P10 requis par la preuve de (?)P1P2P4P5P7P9P10 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P4P5P7P9P10 requis par la preuve de (?)P1P2P4P5P7P9P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P4P5P7P9P10 requis par la preuve de (?)P1P2P4P5P7P9P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P4P5P7P9P10 requis par la preuve de (?)P1P2P4P5P7P9P10 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P7P9P10m2 : rk(P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P7P9P10m3 : rk(P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil) >= 3).
{
	try assert(HP1P2P4eq : rk(P1 :: P2 :: P4 :: nil) = 3) by (apply LP1P2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4mtmp : rk(P1 :: P2 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P2P4eq HP1P2P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil) 3 3 HP1P2P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P7P9P10m4 : rk(P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil) >= 4).
{
	try assert(HP1P2P4P5eq : rk(P1 :: P2 :: P4 :: P5 :: nil) = 4) by (apply LP1P2P4P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P5mtmp : rk(P1 :: P2 :: P4 :: P5 :: nil) >= 4) by (solve_hyps_min HP1P2P4P5eq HP1P2P4P5m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: P5 :: nil) (P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: P5 :: nil) (P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil) 4 4 HP1P2P4P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 4*)
assert(HP1P2P4P5P7P9P10M4 : rk(P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil) <= 4).
{
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	try assert(HP1P2P5P7P10eq : rk(P1 :: P2 :: P5 :: P7 :: P10 :: nil) = 3) by (apply LP1P2P5P7P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5P7P10Mtmp : rk(P1 :: P2 :: P5 :: P7 :: P10 :: nil) <= 3) by (solve_hyps_max HP1P2P5P7P10eq HP1P2P5P7P10M3).
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1mtmp : rk(P1 :: nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
	assert(Hincl : incl (P1 :: nil) (list_inter (P1 :: P4 :: P9 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil) (P1 :: P4 :: P9 :: P1 :: P2 :: P5 :: P7 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P4 :: P9 :: P1 :: P2 :: P5 :: P7 :: P10 :: nil) ((P1 :: P4 :: P9 :: nil) ++ (P1 :: P2 :: P5 :: P7 :: P10 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P4 :: P9 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: nil) (P1 :: nil) 2 3 1 HP1P4P9Mtmp HP1P2P5P7P10Mtmp HP1mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P2P4P5P7P9P10M : rk(P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 ::  nil) <= 7) by (solve_hyps_max HP1P2P4P5P7P9P10eq HP1P2P4P5P7P9P10M7).
assert(HP1P2P4P5P7P9P10m : rk(P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 ::  nil) >= 1) by (solve_hyps_min HP1P2P4P5P7P9P10eq HP1P2P4P5P7P9P10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P5P7P9P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P5 :: P7 :: P9 :: P10 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P5P7P9P10 requis par la preuve de (?)P1P2P5P7P9P10 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P5P7P9P10 requis par la preuve de (?)P1P2P5P7P9P10 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P5P7P9P10 requis par la preuve de (?)P1P2P5P7P9P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P5P7P9P10 requis par la preuve de (?)P1P2P5P7P9P10 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P7P9P10m2 : rk(P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P7P9P10m3 : rk(P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil) >= 3).
{
	try assert(HP1P2P5eq : rk(P1 :: P2 :: P5 :: nil) = 3) by (apply LP1P2P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5mtmp : rk(P1 :: P2 :: P5 :: nil) >= 3) by (solve_hyps_min HP1P2P5eq HP1P2P5m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil) 3 3 HP1P2P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P2P5P7P9P10M4 : rk(P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil) <= 4).
{
	try assert(HP9eq : rk(P9 :: nil) = 1) by (apply LP9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP9Mtmp : rk(P9 :: nil) <= 1) by (solve_hyps_max HP9eq HP9M1).
	try assert(HP1P2P5P7P10eq : rk(P1 :: P2 :: P5 :: P7 :: P10 :: nil) = 3) by (apply LP1P2P5P7P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5P7P10Mtmp : rk(P1 :: P2 :: P5 :: P7 :: P10 :: nil) <= 3) by (solve_hyps_max HP1P2P5P7P10eq HP1P2P5P7P10M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P9 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil) (P9 :: P1 :: P2 :: P5 :: P7 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P9 :: P1 :: P2 :: P5 :: P7 :: P10 :: nil) ((P9 :: nil) ++ (P1 :: P2 :: P5 :: P7 :: P10 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P9 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: nil) (nil) 1 3 0 HP9Mtmp HP1P2P5P7P10Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 ::  AiB : P1 :: P9 ::  A : P1 :: P4 :: P9 ::  *)
assert(HP1P2P5P7P9P10m4 : rk(P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil) >= 4).
{
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	try assert(HP1P2P4P5P7P9P10eq : rk(P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil) = 4) by (apply LP1P2P4P5P7P9P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P5P7P9P10mtmp : rk(P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil) >= 4) by (solve_hyps_min HP1P2P4P5P7P9P10eq HP1P2P4P5P7P9P10m4).
	try assert(HP1P9eq : rk(P1 :: P9 :: nil) = 2) by (apply LP1P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P9mtmp : rk(P1 :: P9 :: nil) >= 2) by (solve_hyps_min HP1P9eq HP1P9m2).
	assert(Hincl : incl (P1 :: P9 :: nil) (list_inter (P1 :: P4 :: P9 :: nil) (P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P5 :: P7 :: P9 :: P10 :: nil) (P1 :: P4 :: P9 :: P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P4 :: P9 :: P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil) ((P1 :: P4 :: P9 :: nil) ++ (P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P4P5P7P9P10mtmp;try rewrite HT2 in HP1P2P4P5P7P9P10mtmp.
	assert(HT := rule_4 (P1 :: P4 :: P9 :: nil) (P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil) (P1 :: P9 :: nil) 4 2 2 HP1P2P4P5P7P9P10mtmp HP1P9mtmp HP1P4P9Mtmp Hincl); apply HT.
}
try clear HP1P2P4P5P7P9P10M1. try clear HP1P2P4P5P7P9P10M2. try clear HP1P2P4P5P7P9P10M3. try clear HP1P2P4P5P7P9P10M4. try clear HP1P2P4P5P7P9P10M5. try clear HP1P2P4P5P7P9P10M6. try clear HP1P2P4P5P7P9P10M7. try clear HP1P2P4P5P7P9P10m7. try clear HP1P2P4P5P7P9P10m6. try clear HP1P2P4P5P7P9P10m5. try clear HP1P2P4P5P7P9P10m4. try clear HP1P2P4P5P7P9P10m3. try clear HP1P2P4P5P7P9P10m2. try clear HP1P2P4P5P7P9P10m1. 

assert(HP1P2P5P7P9P10M : rk(P1 :: P2 :: P5 :: P7 :: P9 :: P10 ::  nil) <= 6) by (solve_hyps_max HP1P2P5P7P9P10eq HP1P2P5P7P9P10M6).
assert(HP1P2P5P7P9P10m : rk(P1 :: P2 :: P5 :: P7 :: P9 :: P10 ::  nil) >= 1) by (solve_hyps_min HP1P2P5P7P9P10eq HP1P2P5P7P9P10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P7P9 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P7 :: P9 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P7P9 requis par la preuve de (?)P2P7P9 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P7P9 requis par la preuve de (?)P2P7P9 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P7P9m2 : rk(P2 :: P7 :: P9 :: nil) >= 2).
{
	try assert(HP2P7eq : rk(P2 :: P7 :: nil) = 2) by (apply LP2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7mtmp : rk(P2 :: P7 :: nil) >= 2) by (solve_hyps_min HP2P7eq HP2P7m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P7 :: nil) (P2 :: P7 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P7 :: nil) (P2 :: P7 :: P9 :: nil) 2 2 HP2P7mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP2P7P9m3 : rk(P2 :: P7 :: P9 :: nil) >= 3).
{
	try assert(HP1P2P5P7P10eq : rk(P1 :: P2 :: P5 :: P7 :: P10 :: nil) = 3) by (apply LP1P2P5P7P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5P7P10Mtmp : rk(P1 :: P2 :: P5 :: P7 :: P10 :: nil) <= 3) by (solve_hyps_max HP1P2P5P7P10eq HP1P2P5P7P10M3).
	try assert(HP1P2P5P7P9P10eq : rk(P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil) = 4) by (apply LP1P2P5P7P9P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5P7P9P10mtmp : rk(P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil) >= 4) by (solve_hyps_min HP1P2P5P7P9P10eq HP1P2P5P7P9P10m4).
	try assert(HP2P7eq : rk(P2 :: P7 :: nil) = 2) by (apply LP2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7mtmp : rk(P2 :: P7 :: nil) >= 2) by (solve_hyps_min HP2P7eq HP2P7m2).
	assert(Hincl : incl (P2 :: P7 :: nil) (list_inter (P2 :: P7 :: P9 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P7 :: P9 :: P10 :: nil) (P2 :: P7 :: P9 :: P1 :: P2 :: P5 :: P7 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P7 :: P9 :: P1 :: P2 :: P5 :: P7 :: P10 :: nil) ((P2 :: P7 :: P9 :: nil) ++ (P1 :: P2 :: P5 :: P7 :: P10 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P5P7P9P10mtmp;try rewrite HT2 in HP1P2P5P7P9P10mtmp.
	assert(HT := rule_2 (P2 :: P7 :: P9 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: nil) (P2 :: P7 :: nil) 4 2 3 HP1P2P5P7P9P10mtmp HP2P7mtmp HP1P2P5P7P10Mtmp Hincl);apply HT.
}
try clear HP1P2P5P7P10M1. try clear HP1P2P5P7P10M2. try clear HP1P2P5P7P10M3. try clear HP1P2P5P7P10M4. try clear HP1P2P5P7P10M5. try clear HP1P2P5P7P10M6. try clear HP1P2P5P7P10M7. try clear HP1P2P5P7P10m7. try clear HP1P2P5P7P10m6. try clear HP1P2P5P7P10m5. try clear HP1P2P5P7P10m4. try clear HP1P2P5P7P10m3. try clear HP1P2P5P7P10m2. try clear HP1P2P5P7P10m1. try clear HP1P2P5P7P9P10M1. try clear HP1P2P5P7P9P10M2. try clear HP1P2P5P7P9P10M3. try clear HP1P2P5P7P9P10M4. try clear HP1P2P5P7P9P10M5. try clear HP1P2P5P7P9P10M6. try clear HP1P2P5P7P9P10M7. try clear HP1P2P5P7P9P10m7. try clear HP1P2P5P7P9P10m6. try clear HP1P2P5P7P9P10m5. try clear HP1P2P5P7P9P10m4. try clear HP1P2P5P7P9P10m3. try clear HP1P2P5P7P9P10m2. try clear HP1P2P5P7P9P10m1. 

assert(HP2P7P9M : rk(P2 :: P7 :: P9 ::  nil) <= 3) by (solve_hyps_max HP2P7P9eq HP2P7P9M3).
assert(HP2P7P9m : rk(P2 :: P7 :: P9 ::  nil) >= 1) by (solve_hyps_min HP2P7P9eq HP2P7P9m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P7P9 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P7 :: P9 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P7P9 requis par la preuve de (?)P1P2P7P9 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P7P9 requis par la preuve de (?)P1P2P7P9 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P7P9 requis par la preuve de (?)P1P2P7P9 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P7P9m2 : rk(P1 :: P2 :: P7 :: P9 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P7 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P7 :: P9 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P2P7P9M3 : rk(P1 :: P2 :: P7 :: P9 :: nil) <= 3).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	try assert(HP9eq : rk(P9 :: nil) = 1) by (apply LP9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP9Mtmp : rk(P9 :: nil) <= 1) by (solve_hyps_max HP9eq HP9M1).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: P2 :: P7 :: nil) (P9 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P7 :: P9 :: nil) (P1 :: P2 :: P7 :: P9 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P9 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P9 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P2 :: P7 :: nil) (P9 :: nil) (nil) 2 1 0 HP1P2P7Mtmp HP9Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P7P9m3 : rk(P1 :: P2 :: P7 :: P9 :: nil) >= 3).
{
	try assert(HP1P2P9eq : rk(P1 :: P2 :: P9 :: nil) = 3) by (apply LP1P2P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P9mtmp : rk(P1 :: P2 :: P9 :: nil) >= 3) by (solve_hyps_min HP1P2P9eq HP1P2P9m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P9 :: nil) (P1 :: P2 :: P7 :: P9 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P9 :: nil) (P1 :: P2 :: P7 :: P9 :: nil) 3 3 HP1P2P9mtmp Hcomp Hincl);apply HT.
}
try clear HP1P2P9M1. try clear HP1P2P9M2. try clear HP1P2P9M3. try clear HP1P2P9M4. try clear HP1P2P9M5. try clear HP1P2P9M6. try clear HP1P2P9M7. try clear HP1P2P9m7. try clear HP1P2P9m6. try clear HP1P2P9m5. try clear HP1P2P9m4. try clear HP1P2P9m3. try clear HP1P2P9m2. try clear HP1P2P9m1. 

assert(HP1P2P7P9M : rk(P1 :: P2 :: P7 :: P9 ::  nil) <= 4) by (solve_hyps_max HP1P2P7P9eq HP1P2P7P9M4).
assert(HP1P2P7P9m : rk(P1 :: P2 :: P7 :: P9 ::  nil) >= 1) by (solve_hyps_min HP1P2P7P9eq HP1P2P7P9m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P10 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP10M : rk(P10 ::  nil) <= 1) by (solve_hyps_max HP10eq HP10M1).
assert(HP10m : rk(P10 ::  nil) >= 1) by (solve_hyps_min HP10eq HP10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P10 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P10M : rk(P1 :: P10 ::  nil) <= 2) by (solve_hyps_max HP1P10eq HP1P10M2).
assert(HP1P10m : rk(P1 :: P10 ::  nil) >= 1) by (solve_hyps_min HP1P10eq HP1P10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P10 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 2 : pour P2P10 requis par la preuve de (?)P2P10 pour la règle 2  *)
(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 5 4 et 4*)
assert(HP2P10m2 : rk(P2 :: P10 :: nil) >= 2).
{
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	assert(HP1P2P5P10mtmp : rk(P1 :: P2 :: P5 :: P10 :: nil) >= 3) by (solve_hyps_min HP1P2P5P10eq HP1P2P5P10m3).
	try assert(HP10eq : rk(P10 :: nil) = 1) by (apply LP10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP10mtmp : rk(P10 :: nil) >= 1) by (solve_hyps_min HP10eq HP10m1).
	assert(Hincl : incl (P10 :: nil) (list_inter (P2 :: P10 :: nil) (P1 :: P5 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P10 :: nil) (P2 :: P10 :: P1 :: P5 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P10 :: P1 :: P5 :: P10 :: nil) ((P2 :: P10 :: nil) ++ (P1 :: P5 :: P10 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P5P10mtmp;try rewrite HT2 in HP1P2P5P10mtmp.
	assert(HT := rule_2 (P2 :: P10 :: nil) (P1 :: P5 :: P10 :: nil) (P10 :: nil) 3 1 2 HP1P2P5P10mtmp HP10mtmp HP1P5P10Mtmp Hincl);apply HT.
}


assert(HP2P10M : rk(P2 :: P10 ::  nil) <= 2) by (solve_hyps_max HP2P10eq HP2P10M2).
assert(HP2P10m : rk(P2 :: P10 ::  nil) >= 1) by (solve_hyps_min HP2P10eq HP2P10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P10 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P10 requis par la preuve de (?)P1P2P10 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P10 requis par la preuve de (?)P1P2P10 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P10m2 : rk(P1 :: P2 :: P10 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P10 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 5 4 et 4*)
assert(HP1P2P10m3 : rk(P1 :: P2 :: P10 :: nil) >= 3).
{
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	assert(HP1P2P5P10mtmp : rk(P1 :: P2 :: P5 :: P10 :: nil) >= 3) by (solve_hyps_min HP1P2P5P10eq HP1P2P5P10m3).
	try assert(HP1P10eq : rk(P1 :: P10 :: nil) = 2) by (apply LP1P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P10mtmp : rk(P1 :: P10 :: nil) >= 2) by (solve_hyps_min HP1P10eq HP1P10m2).
	assert(Hincl : incl (P1 :: P10 :: nil) (list_inter (P1 :: P2 :: P10 :: nil) (P1 :: P5 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P10 :: nil) (P1 :: P2 :: P10 :: P1 :: P5 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P10 :: P1 :: P5 :: P10 :: nil) ((P1 :: P2 :: P10 :: nil) ++ (P1 :: P5 :: P10 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P5P10mtmp;try rewrite HT2 in HP1P2P5P10mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P10 :: nil) (P1 :: P5 :: P10 :: nil) (P1 :: P10 :: nil) 3 2 2 HP1P2P5P10mtmp HP1P10mtmp HP1P5P10Mtmp Hincl);apply HT.
}


assert(HP1P2P10M : rk(P1 :: P2 :: P10 ::  nil) <= 3) by (solve_hyps_max HP1P2P10eq HP1P2P10M3).
assert(HP1P2P10m : rk(P1 :: P2 :: P10 ::  nil) >= 1) by (solve_hyps_min HP1P2P10eq HP1P2P10m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P2P3P10 *)
(* dans la couche 0 *)
Lemma LP1P2P3P5P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P5 :: P10 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P3P5P10 requis par la preuve de (?)P1P2P3P5P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P3P5P10 requis par la preuve de (?)P1P2P3P5P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P5P10 requis par la preuve de (?)P1P2P3P5P10 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P5P10 requis par la preuve de (?)P1P2P3P5P10 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P10m2 : rk(P1 :: P2 :: P3 :: P5 :: P10 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P3P5P10M4 : rk(P1 :: P2 :: P3 :: P5 :: P10 :: nil) <= 4).
{
	try assert(HP3eq : rk(P3 :: nil) = 1) by (apply LP3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3Mtmp : rk(P3 :: nil) <= 1) by (solve_hyps_max HP3eq HP3M1).
	assert(HP1P2P5P10Mtmp : rk(P1 :: P2 :: P5 :: P10 :: nil) <= 3) by (solve_hyps_max HP1P2P5P10eq HP1P2P5P10M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P3 :: nil) (P1 :: P2 :: P5 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P5 :: P10 :: nil) (P3 :: P1 :: P2 :: P5 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P3 :: P1 :: P2 :: P5 :: P10 :: nil) ((P3 :: nil) ++ (P1 :: P2 :: P5 :: P10 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P3 :: nil) (P1 :: P2 :: P5 :: P10 :: nil) (nil) 1 3 0 HP3Mtmp HP1P2P5P10Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P10m3 : rk(P1 :: P2 :: P3 :: P5 :: P10 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P10m4 : rk(P1 :: P2 :: P3 :: P5 :: P10 :: nil) >= 4).
{
	try assert(HP1P2P3P5eq : rk(P1 :: P2 :: P3 :: P5 :: nil) = 4) by (apply LP1P2P3P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5mtmp : rk(P1 :: P2 :: P3 :: P5 :: nil) >= 4) by (solve_hyps_min HP1P2P3P5eq HP1P2P3P5m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P5 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P5 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: nil) 4 4 HP1P2P3P5mtmp Hcomp Hincl);apply HT.
}


assert(HP1P2P3P5P10M : rk(P1 :: P2 :: P3 :: P5 :: P10 ::  nil) <= 5) by (solve_hyps_max HP1P2P3P5P10eq HP1P2P3P5P10M5).
assert(HP1P2P3P5P10m : rk(P1 :: P2 :: P3 :: P5 :: P10 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P5P10eq HP1P2P3P5P10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P3P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P10 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P3P10 requis par la preuve de (?)P1P2P3P10 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P3P10 requis par la preuve de (?)P1P2P3P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P3P10 requis par la preuve de (?)P1P2P3P10 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P10m2 : rk(P1 :: P2 :: P3 :: P10 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P10 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P10m3 : rk(P1 :: P2 :: P3 :: P10 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P10 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP1P2P3P10m4 : rk(P1 :: P2 :: P3 :: P10 :: nil) >= 4).
{
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	try assert(HP1P2P3P5P10eq : rk(P1 :: P2 :: P3 :: P5 :: P10 :: nil) = 4) by (apply LP1P2P3P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5P10mtmp : rk(P1 :: P2 :: P3 :: P5 :: P10 :: nil) >= 4) by (solve_hyps_min HP1P2P3P5P10eq HP1P2P3P5P10m4).
	try assert(HP1P10eq : rk(P1 :: P10 :: nil) = 2) by (apply LP1P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P10mtmp : rk(P1 :: P10 :: nil) >= 2) by (solve_hyps_min HP1P10eq HP1P10m2).
	assert(Hincl : incl (P1 :: P10 :: nil) (list_inter (P1 :: P2 :: P3 :: P10 :: nil) (P1 :: P5 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P5 :: P10 :: nil) (P1 :: P2 :: P3 :: P10 :: P1 :: P5 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P3 :: P10 :: P1 :: P5 :: P10 :: nil) ((P1 :: P2 :: P3 :: P10 :: nil) ++ (P1 :: P5 :: P10 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P5P10mtmp;try rewrite HT2 in HP1P2P3P5P10mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P3 :: P10 :: nil) (P1 :: P5 :: P10 :: nil) (P1 :: P10 :: nil) 4 2 2 HP1P2P3P5P10mtmp HP1P10mtmp HP1P5P10Mtmp Hincl);apply HT.
}
try clear HP1P2P3P5P10M1. try clear HP1P2P3P5P10M2. try clear HP1P2P3P5P10M3. try clear HP1P2P3P5P10M4. try clear HP1P2P3P5P10M5. try clear HP1P2P3P5P10M6. try clear HP1P2P3P5P10M7. try clear HP1P2P3P5P10m7. try clear HP1P2P3P5P10m6. try clear HP1P2P3P5P10m5. try clear HP1P2P3P5P10m4. try clear HP1P2P3P5P10m3. try clear HP1P2P3P5P10m2. try clear HP1P2P3P5P10m1. 

assert(HP1P2P3P10M : rk(P1 :: P2 :: P3 :: P10 ::  nil) <= 4) by (solve_hyps_max HP1P2P3P10eq HP1P2P3P10M4).
assert(HP1P2P3P10m : rk(P1 :: P2 :: P3 :: P10 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P10eq HP1P2P3P10m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP2P4P10 *)
(* dans la couche 0 *)
Lemma LP1P2P4P5P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 :: P5 :: P10 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P4P5P10 requis par la preuve de (?)P1P2P4P5P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P4P5P10 requis par la preuve de (?)P1P2P4P5P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P4P5P10 requis par la preuve de (?)P1P2P4P5P10 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P4P5P10 requis par la preuve de (?)P1P2P4P5P10 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P10m2 : rk(P1 :: P2 :: P4 :: P5 :: P10 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P5 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P5 :: P10 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P4P5P10M4 : rk(P1 :: P2 :: P4 :: P5 :: P10 :: nil) <= 4).
{
	try assert(HP4eq : rk(P4 :: nil) = 1) by (apply LP4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP4Mtmp : rk(P4 :: nil) <= 1) by (solve_hyps_max HP4eq HP4M1).
	assert(HP1P2P5P10Mtmp : rk(P1 :: P2 :: P5 :: P10 :: nil) <= 3) by (solve_hyps_max HP1P2P5P10eq HP1P2P5P10M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P4 :: nil) (P1 :: P2 :: P5 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P5 :: P10 :: nil) (P4 :: P1 :: P2 :: P5 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P4 :: P1 :: P2 :: P5 :: P10 :: nil) ((P4 :: nil) ++ (P1 :: P2 :: P5 :: P10 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P4 :: nil) (P1 :: P2 :: P5 :: P10 :: nil) (nil) 1 3 0 HP4Mtmp HP1P2P5P10Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}
try clear HP1P2P5P10M1. try clear HP1P2P5P10M2. try clear HP1P2P5P10M3. try clear HP1P2P5P10M4. try clear HP1P2P5P10M5. try clear HP1P2P5P10M6. try clear HP1P2P5P10M7. try clear HP1P2P5P10m7. try clear HP1P2P5P10m6. try clear HP1P2P5P10m5. try clear HP1P2P5P10m4. try clear HP1P2P5P10m3. try clear HP1P2P5P10m2. try clear HP1P2P5P10m1. 

(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P10m3 : rk(P1 :: P2 :: P4 :: P5 :: P10 :: nil) >= 3).
{
	try assert(HP1P2P4eq : rk(P1 :: P2 :: P4 :: nil) = 3) by (apply LP1P2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4mtmp : rk(P1 :: P2 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P2P4eq HP1P2P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P5 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P5 :: P10 :: nil) 3 3 HP1P2P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P10m4 : rk(P1 :: P2 :: P4 :: P5 :: P10 :: nil) >= 4).
{
	try assert(HP1P2P4P5eq : rk(P1 :: P2 :: P4 :: P5 :: nil) = 4) by (apply LP1P2P4P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P5mtmp : rk(P1 :: P2 :: P4 :: P5 :: nil) >= 4) by (solve_hyps_min HP1P2P4P5eq HP1P2P4P5m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: P5 :: nil) (P1 :: P2 :: P4 :: P5 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: P5 :: nil) (P1 :: P2 :: P4 :: P5 :: P10 :: nil) 4 4 HP1P2P4P5mtmp Hcomp Hincl);apply HT.
}


assert(HP1P2P4P5P10M : rk(P1 :: P2 :: P4 :: P5 :: P10 ::  nil) <= 5) by (solve_hyps_max HP1P2P4P5P10eq HP1P2P4P5P10M5).
assert(HP1P2P4P5P10m : rk(P1 :: P2 :: P4 :: P5 :: P10 ::  nil) >= 1) by (solve_hyps_min HP1P2P4P5P10eq HP1P2P4P5P10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P4P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P4 :: P10 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P4P10 requis par la preuve de (?)P2P4P10 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P4P10 requis par la preuve de (?)P2P4P10 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P4P10m2 : rk(P2 :: P4 :: P10 :: nil) >= 2).
{
	try assert(HP2P4eq : rk(P2 :: P4 :: nil) = 2) by (apply LP2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P4mtmp : rk(P2 :: P4 :: nil) >= 2) by (solve_hyps_min HP2P4eq HP2P4m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P4 :: nil) (P2 :: P4 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P4 :: nil) (P2 :: P4 :: P10 :: nil) 2 2 HP2P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP2P4P10m3 : rk(P2 :: P4 :: P10 :: nil) >= 3).
{
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	try assert(HP1P2P4P5P10eq : rk(P1 :: P2 :: P4 :: P5 :: P10 :: nil) = 4) by (apply LP1P2P4P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P5P10mtmp : rk(P1 :: P2 :: P4 :: P5 :: P10 :: nil) >= 4) by (solve_hyps_min HP1P2P4P5P10eq HP1P2P4P5P10m4).
	try assert(HP10eq : rk(P10 :: nil) = 1) by (apply LP10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP10mtmp : rk(P10 :: nil) >= 1) by (solve_hyps_min HP10eq HP10m1).
	assert(Hincl : incl (P10 :: nil) (list_inter (P2 :: P4 :: P10 :: nil) (P1 :: P5 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P5 :: P10 :: nil) (P2 :: P4 :: P10 :: P1 :: P5 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P4 :: P10 :: P1 :: P5 :: P10 :: nil) ((P2 :: P4 :: P10 :: nil) ++ (P1 :: P5 :: P10 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P4P5P10mtmp;try rewrite HT2 in HP1P2P4P5P10mtmp.
	assert(HT := rule_2 (P2 :: P4 :: P10 :: nil) (P1 :: P5 :: P10 :: nil) (P10 :: nil) 4 1 2 HP1P2P4P5P10mtmp HP10mtmp HP1P5P10Mtmp Hincl);apply HT.
}


assert(HP2P4P10M : rk(P2 :: P4 :: P10 ::  nil) <= 3) by (solve_hyps_max HP2P4P10eq HP2P4P10M3).
assert(HP2P4P10m : rk(P2 :: P4 :: P10 ::  nil) >= 1) by (solve_hyps_min HP2P4P10eq HP2P4P10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P4P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 :: P10 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P4P10 requis par la preuve de (?)P1P2P4P10 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P4P10 requis par la preuve de (?)P1P2P4P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P4P10 requis par la preuve de (?)P1P2P4P10 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P10m2 : rk(P1 :: P2 :: P4 :: P10 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P10 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P10m3 : rk(P1 :: P2 :: P4 :: P10 :: nil) >= 3).
{
	try assert(HP1P2P4eq : rk(P1 :: P2 :: P4 :: nil) = 3) by (apply LP1P2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4mtmp : rk(P1 :: P2 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P2P4eq HP1P2P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P10 :: nil) 3 3 HP1P2P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP1P2P4P10m4 : rk(P1 :: P2 :: P4 :: P10 :: nil) >= 4).
{
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	try assert(HP1P2P4P5P10eq : rk(P1 :: P2 :: P4 :: P5 :: P10 :: nil) = 4) by (apply LP1P2P4P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P5P10mtmp : rk(P1 :: P2 :: P4 :: P5 :: P10 :: nil) >= 4) by (solve_hyps_min HP1P2P4P5P10eq HP1P2P4P5P10m4).
	try assert(HP1P10eq : rk(P1 :: P10 :: nil) = 2) by (apply LP1P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P10mtmp : rk(P1 :: P10 :: nil) >= 2) by (solve_hyps_min HP1P10eq HP1P10m2).
	assert(Hincl : incl (P1 :: P10 :: nil) (list_inter (P1 :: P2 :: P4 :: P10 :: nil) (P1 :: P5 :: P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P5 :: P10 :: nil) (P1 :: P2 :: P4 :: P10 :: P1 :: P5 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P4 :: P10 :: P1 :: P5 :: P10 :: nil) ((P1 :: P2 :: P4 :: P10 :: nil) ++ (P1 :: P5 :: P10 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P4P5P10mtmp;try rewrite HT2 in HP1P2P4P5P10mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P4 :: P10 :: nil) (P1 :: P5 :: P10 :: nil) (P1 :: P10 :: nil) 4 2 2 HP1P2P4P5P10mtmp HP1P10mtmp HP1P5P10Mtmp Hincl);apply HT.
}
try clear HP1P2P4P5P10M1. try clear HP1P2P4P5P10M2. try clear HP1P2P4P5P10M3. try clear HP1P2P4P5P10M4. try clear HP1P2P4P5P10M5. try clear HP1P2P4P5P10M6. try clear HP1P2P4P5P10M7. try clear HP1P2P4P5P10m7. try clear HP1P2P4P5P10m6. try clear HP1P2P4P5P10m5. try clear HP1P2P4P5P10m4. try clear HP1P2P4P5P10m3. try clear HP1P2P4P5P10m2. try clear HP1P2P4P5P10m1. 

assert(HP1P2P4P10M : rk(P1 :: P2 :: P4 :: P10 ::  nil) <= 4) by (solve_hyps_max HP1P2P4P10eq HP1P2P4P10M4).
assert(HP1P2P4P10m : rk(P1 :: P2 :: P4 :: P10 ::  nil) >= 1) by (solve_hyps_min HP1P2P4P10eq HP1P2P4P10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP5P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP5P10M : rk(P5 :: P10 ::  nil) <= 2) by (solve_hyps_max HP5P10eq HP5P10M2).
assert(HP5P10m : rk(P5 :: P10 ::  nil) >= 1) by (solve_hyps_min HP5P10eq HP5P10m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP2P7P10 *)
(* dans constructLemma(), requis par LP1P2P6P7P10P11 *)
(* dans constructLemma(), requis par LP1P2P5P6P7P10P11 *)
(* dans constructLemma(), requis par LP1P2P6P7P11 *)
(* dans la couche 0 *)
Lemma LP1P6P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P6P11M : rk(P1 :: P6 :: P11 ::  nil) <= 3) by (solve_hyps_max HP1P6P11eq HP1P6P11M3).
assert(HP1P6P11m : rk(P1 :: P6 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P6P11eq HP1P6P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P6P7P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P6 :: P7 :: P11 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P6P7P11 requis par la preuve de (?)P1P2P6P7P11 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 3 : pour P1P2P6P11 requis par la preuve de (?)P1P2P6P7P11 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P6P11 requis par la preuve de (?)P1P2P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P6P11 requis par la preuve de (?)P1P2P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P6P11 requis par la preuve de (?)P1P2P6P11 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P2P6P11M3 : rk(P1 :: P2 :: P6 :: P11 :: nil) <= 3).
{
	try assert(HP2eq : rk(P2 :: nil) = 1) by (apply LP2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2Mtmp : rk(P2 :: nil) <= 1) by (solve_hyps_max HP2eq HP2M1).
	try assert(HP1P6P11eq : rk(P1 :: P6 :: P11 :: nil) = 2) by (apply LP1P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P11Mtmp : rk(P1 :: P6 :: P11 :: nil) <= 2) by (solve_hyps_max HP1P6P11eq HP1P6P11M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P2 :: nil) (P1 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P6 :: P11 :: nil) (P2 :: P1 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P1 :: P6 :: P11 :: nil) ((P2 :: nil) ++ (P1 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P2 :: nil) (P1 :: P6 :: P11 :: nil) (nil) 1 2 0 HP2Mtmp HP1P6P11Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P6P11m2 : rk(P1 :: P2 :: P6 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P6 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P6P11m3 : rk(P1 :: P2 :: P6 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P6eq : rk(P1 :: P2 :: P6 :: nil) = 3) by (apply LP1P2P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P6mtmp : rk(P1 :: P2 :: P6 :: nil) >= 3) by (solve_hyps_min HP1P2P6eq HP1P2P6m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P6 :: nil) (P1 :: P2 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P6 :: nil) (P1 :: P2 :: P6 :: P11 :: nil) 3 3 HP1P2P6mtmp Hcomp Hincl);apply HT.
}


(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P6P7P11 requis par la preuve de (?)P1P2P6P7P11 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P6P7P11 requis par la preuve de (?)P1P2P6P7P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P6P7P11 requis par la preuve de (?)P1P2P6P7P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P6P7P11m2 : rk(P1 :: P2 :: P6 :: P7 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P6P7P11m3 : rk(P1 :: P2 :: P6 :: P7 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P6eq : rk(P1 :: P2 :: P6 :: nil) = 3) by (apply LP1P2P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P6mtmp : rk(P1 :: P2 :: P6 :: nil) >= 3) by (solve_hyps_min HP1P2P6eq HP1P2P6m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P6 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P6 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: nil) 3 3 HP1P2P6mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P6P7P11M4 : rk(P1 :: P2 :: P6 :: P7 :: P11 :: nil) <= 4).
{
	try assert(HP7eq : rk(P7 :: nil) = 1) by (apply LP7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP7Mtmp : rk(P7 :: nil) <= 1) by (solve_hyps_max HP7eq HP7M1).
	assert(HP1P2P6P11Mtmp : rk(P1 :: P2 :: P6 :: P11 :: nil) <= 3) by (solve_hyps_max HP1P2P6P11eq HP1P2P6P11M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P7 :: nil) (P1 :: P2 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P6 :: P7 :: P11 :: nil) (P7 :: P1 :: P2 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P7 :: P1 :: P2 :: P6 :: P11 :: nil) ((P7 :: nil) ++ (P1 :: P2 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P7 :: nil) (P1 :: P2 :: P6 :: P11 :: nil) (nil) 1 3 0 HP7Mtmp HP1P2P6P11Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 4*)
assert(HP1P2P6P7P11M3 : rk(P1 :: P2 :: P6 :: P7 :: P11 :: nil) <= 3).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	try assert(HP1P6P11eq : rk(P1 :: P6 :: P11 :: nil) = 2) by (apply LP1P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P11Mtmp : rk(P1 :: P6 :: P11 :: nil) <= 2) by (solve_hyps_max HP1P6P11eq HP1P6P11M2).
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1mtmp : rk(P1 :: nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
	assert(Hincl : incl (P1 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P1 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P6 :: P7 :: P11 :: nil) (P1 :: P2 :: P7 :: P1 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P1 :: P6 :: P11 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P1 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P2 :: P7 :: nil) (P1 :: P6 :: P11 :: nil) (P1 :: nil) 2 2 1 HP1P2P7Mtmp HP1P6P11Mtmp HP1mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P2P6P7P11M : rk(P1 :: P2 :: P6 :: P7 :: P11 ::  nil) <= 5) by (solve_hyps_max HP1P2P6P7P11eq HP1P2P6P7P11M5).
assert(HP1P2P6P7P11m : rk(P1 :: P2 :: P6 :: P7 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P6P7P11eq HP1P2P6P7P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P5P6P7P10P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P2P5P6P7P10P11 requis par la preuve de (?)P1P2P5P6P7P10P11 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P5P6P7P10P11 requis par la preuve de (?)P1P2P5P6P7P10P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P5P6P7P10P11 requis par la preuve de (?)P1P2P5P6P7P10P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P5P6P7P10P11 requis par la preuve de (?)P1P2P5P6P7P10P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P6P7P10P11m2 : rk(P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P6P7P10P11m3 : rk(P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P5eq : rk(P1 :: P2 :: P5 :: nil) = 3) by (apply LP1P2P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5mtmp : rk(P1 :: P2 :: P5 :: nil) >= 3) by (solve_hyps_min HP1P2P5eq HP1P2P5m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil) 3 3 HP1P2P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P6P7P10P11m4 : rk(P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil) >= 4).
{
	try assert(HP1P2P5P6eq : rk(P1 :: P2 :: P5 :: P6 :: nil) = 4) by (apply LP1P2P5P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5P6mtmp : rk(P1 :: P2 :: P5 :: P6 :: nil) >= 4) by (solve_hyps_min HP1P2P5P6eq HP1P2P5P6m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P5 :: P6 :: nil) (P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P5 :: P6 :: nil) (P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil) 4 4 HP1P2P5P6mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 4*)
assert(HP1P2P5P6P7P10P11M4 : rk(P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil) <= 4).
{
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	try assert(HP1P2P6P7P11eq : rk(P1 :: P2 :: P6 :: P7 :: P11 :: nil) = 3) by (apply LP1P2P6P7P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P6P7P11Mtmp : rk(P1 :: P2 :: P6 :: P7 :: P11 :: nil) <= 3) by (solve_hyps_max HP1P2P6P7P11eq HP1P2P6P7P11M3).
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1mtmp : rk(P1 :: nil) >= 1) by (solve_hyps_min HP1eq HP1m1).
	assert(Hincl : incl (P1 :: nil) (list_inter (P1 :: P5 :: P10 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil) (P1 :: P5 :: P10 :: P1 :: P2 :: P6 :: P7 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P5 :: P10 :: P1 :: P2 :: P6 :: P7 :: P11 :: nil) ((P1 :: P5 :: P10 :: nil) ++ (P1 :: P2 :: P6 :: P7 :: P11 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P5 :: P10 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: nil) (P1 :: nil) 2 3 1 HP1P5P10Mtmp HP1P2P6P7P11Mtmp HP1mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P2P5P6P7P10P11M : rk(P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 ::  nil) <= 7) by (solve_hyps_max HP1P2P5P6P7P10P11eq HP1P2P5P6P7P10P11M7).
assert(HP1P2P5P6P7P10P11m : rk(P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P5P6P7P10P11eq HP1P2P5P6P7P10P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P6P7P10P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P6 :: P7 :: P10 :: P11 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P6P7P10P11 requis par la preuve de (?)P1P2P6P7P10P11 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P6P7P10P11 requis par la preuve de (?)P1P2P6P7P10P11 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P6P7P10P11 requis par la preuve de (?)P1P2P6P7P10P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P6P7P10P11 requis par la preuve de (?)P1P2P6P7P10P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P6P7P10P11m2 : rk(P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P6P7P10P11m3 : rk(P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P6eq : rk(P1 :: P2 :: P6 :: nil) = 3) by (apply LP1P2P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P6mtmp : rk(P1 :: P2 :: P6 :: nil) >= 3) by (solve_hyps_min HP1P2P6eq HP1P2P6m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P6 :: nil) (P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P6 :: nil) (P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil) 3 3 HP1P2P6mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P2P6P7P10P11M4 : rk(P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil) <= 4).
{
	try assert(HP10eq : rk(P10 :: nil) = 1) by (apply LP10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP10Mtmp : rk(P10 :: nil) <= 1) by (solve_hyps_max HP10eq HP10M1).
	try assert(HP1P2P6P7P11eq : rk(P1 :: P2 :: P6 :: P7 :: P11 :: nil) = 3) by (apply LP1P2P6P7P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P6P7P11Mtmp : rk(P1 :: P2 :: P6 :: P7 :: P11 :: nil) <= 3) by (solve_hyps_max HP1P2P6P7P11eq HP1P2P6P7P11M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P10 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil) (P10 :: P1 :: P2 :: P6 :: P7 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P10 :: P1 :: P2 :: P6 :: P7 :: P11 :: nil) ((P10 :: nil) ++ (P1 :: P2 :: P6 :: P7 :: P11 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P10 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: nil) (nil) 1 3 0 HP10Mtmp HP1P2P6P7P11Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 ::  AiB : P1 :: P10 ::  A : P1 :: P5 :: P10 ::  *)
assert(HP1P2P6P7P10P11m4 : rk(P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil) >= 4).
{
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	try assert(HP1P2P5P6P7P10P11eq : rk(P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil) = 4) by (apply LP1P2P5P6P7P10P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5P6P7P10P11mtmp : rk(P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil) >= 4) by (solve_hyps_min HP1P2P5P6P7P10P11eq HP1P2P5P6P7P10P11m4).
	try assert(HP1P10eq : rk(P1 :: P10 :: nil) = 2) by (apply LP1P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P10mtmp : rk(P1 :: P10 :: nil) >= 2) by (solve_hyps_min HP1P10eq HP1P10m2).
	assert(Hincl : incl (P1 :: P10 :: nil) (list_inter (P1 :: P5 :: P10 :: nil) (P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P6 :: P7 :: P10 :: P11 :: nil) (P1 :: P5 :: P10 :: P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P5 :: P10 :: P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil) ((P1 :: P5 :: P10 :: nil) ++ (P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P5P6P7P10P11mtmp;try rewrite HT2 in HP1P2P5P6P7P10P11mtmp.
	assert(HT := rule_4 (P1 :: P5 :: P10 :: nil) (P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil) (P1 :: P10 :: nil) 4 2 2 HP1P2P5P6P7P10P11mtmp HP1P10mtmp HP1P5P10Mtmp Hincl); apply HT.
}
try clear HP1P2P5P6P7P10P11M1. try clear HP1P2P5P6P7P10P11M2. try clear HP1P2P5P6P7P10P11M3. try clear HP1P2P5P6P7P10P11M4. try clear HP1P2P5P6P7P10P11M5. try clear HP1P2P5P6P7P10P11M6. try clear HP1P2P5P6P7P10P11M7. try clear HP1P2P5P6P7P10P11m7. try clear HP1P2P5P6P7P10P11m6. try clear HP1P2P5P6P7P10P11m5. try clear HP1P2P5P6P7P10P11m4. try clear HP1P2P5P6P7P10P11m3. try clear HP1P2P5P6P7P10P11m2. try clear HP1P2P5P6P7P10P11m1. 

assert(HP1P2P6P7P10P11M : rk(P1 :: P2 :: P6 :: P7 :: P10 :: P11 ::  nil) <= 6) by (solve_hyps_max HP1P2P6P7P10P11eq HP1P2P6P7P10P11M6).
assert(HP1P2P6P7P10P11m : rk(P1 :: P2 :: P6 :: P7 :: P10 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P6P7P10P11eq HP1P2P6P7P10P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P7P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P7 :: P10 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P7P10 requis par la preuve de (?)P2P7P10 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P7P10 requis par la preuve de (?)P2P7P10 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P7P10m2 : rk(P2 :: P7 :: P10 :: nil) >= 2).
{
	try assert(HP2P7eq : rk(P2 :: P7 :: nil) = 2) by (apply LP2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7mtmp : rk(P2 :: P7 :: nil) >= 2) by (solve_hyps_min HP2P7eq HP2P7m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P7 :: nil) (P2 :: P7 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P7 :: nil) (P2 :: P7 :: P10 :: nil) 2 2 HP2P7mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP2P7P10m3 : rk(P2 :: P7 :: P10 :: nil) >= 3).
{
	try assert(HP1P2P6P7P11eq : rk(P1 :: P2 :: P6 :: P7 :: P11 :: nil) = 3) by (apply LP1P2P6P7P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P6P7P11Mtmp : rk(P1 :: P2 :: P6 :: P7 :: P11 :: nil) <= 3) by (solve_hyps_max HP1P2P6P7P11eq HP1P2P6P7P11M3).
	try assert(HP1P2P6P7P10P11eq : rk(P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil) = 4) by (apply LP1P2P6P7P10P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P6P7P10P11mtmp : rk(P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil) >= 4) by (solve_hyps_min HP1P2P6P7P10P11eq HP1P2P6P7P10P11m4).
	try assert(HP2P7eq : rk(P2 :: P7 :: nil) = 2) by (apply LP2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7mtmp : rk(P2 :: P7 :: nil) >= 2) by (solve_hyps_min HP2P7eq HP2P7m2).
	assert(Hincl : incl (P2 :: P7 :: nil) (list_inter (P2 :: P7 :: P10 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P6 :: P7 :: P10 :: P11 :: nil) (P2 :: P7 :: P10 :: P1 :: P2 :: P6 :: P7 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P7 :: P10 :: P1 :: P2 :: P6 :: P7 :: P11 :: nil) ((P2 :: P7 :: P10 :: nil) ++ (P1 :: P2 :: P6 :: P7 :: P11 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P6P7P10P11mtmp;try rewrite HT2 in HP1P2P6P7P10P11mtmp.
	assert(HT := rule_2 (P2 :: P7 :: P10 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: nil) (P2 :: P7 :: nil) 4 2 3 HP1P2P6P7P10P11mtmp HP2P7mtmp HP1P2P6P7P11Mtmp Hincl);apply HT.
}
try clear HP1P2P6P7P11M1. try clear HP1P2P6P7P11M2. try clear HP1P2P6P7P11M3. try clear HP1P2P6P7P11M4. try clear HP1P2P6P7P11M5. try clear HP1P2P6P7P11M6. try clear HP1P2P6P7P11M7. try clear HP1P2P6P7P11m7. try clear HP1P2P6P7P11m6. try clear HP1P2P6P7P11m5. try clear HP1P2P6P7P11m4. try clear HP1P2P6P7P11m3. try clear HP1P2P6P7P11m2. try clear HP1P2P6P7P11m1. try clear HP1P2P6P7P10P11M1. try clear HP1P2P6P7P10P11M2. try clear HP1P2P6P7P10P11M3. try clear HP1P2P6P7P10P11M4. try clear HP1P2P6P7P10P11M5. try clear HP1P2P6P7P10P11M6. try clear HP1P2P6P7P10P11M7. try clear HP1P2P6P7P10P11m7. try clear HP1P2P6P7P10P11m6. try clear HP1P2P6P7P10P11m5. try clear HP1P2P6P7P10P11m4. try clear HP1P2P6P7P10P11m3. try clear HP1P2P6P7P10P11m2. try clear HP1P2P6P7P10P11m1. 

assert(HP2P7P10M : rk(P2 :: P7 :: P10 ::  nil) <= 3) by (solve_hyps_max HP2P7P10eq HP2P7P10M3).
assert(HP2P7P10m : rk(P2 :: P7 :: P10 ::  nil) >= 1) by (solve_hyps_min HP2P7P10eq HP2P7P10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P7P10 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P7 :: P10 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P7P10 requis par la preuve de (?)P1P2P7P10 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P7P10 requis par la preuve de (?)P1P2P7P10 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P7P10 requis par la preuve de (?)P1P2P7P10 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P7P10m2 : rk(P1 :: P2 :: P7 :: P10 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P7 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P7 :: P10 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P2P7P10M3 : rk(P1 :: P2 :: P7 :: P10 :: nil) <= 3).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	try assert(HP10eq : rk(P10 :: nil) = 1) by (apply LP10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP10Mtmp : rk(P10 :: nil) <= 1) by (solve_hyps_max HP10eq HP10M1).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: P2 :: P7 :: nil) (P10 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P7 :: P10 :: nil) (P1 :: P2 :: P7 :: P10 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P10 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P10 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P2 :: P7 :: nil) (P10 :: nil) (nil) 2 1 0 HP1P2P7Mtmp HP10Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P7P10m3 : rk(P1 :: P2 :: P7 :: P10 :: nil) >= 3).
{
	try assert(HP1P2P10eq : rk(P1 :: P2 :: P10 :: nil) = 3) by (apply LP1P2P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P10mtmp : rk(P1 :: P2 :: P10 :: nil) >= 3) by (solve_hyps_min HP1P2P10eq HP1P2P10m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P10 :: nil) (P1 :: P2 :: P7 :: P10 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P10 :: nil) (P1 :: P2 :: P7 :: P10 :: nil) 3 3 HP1P2P10mtmp Hcomp Hincl);apply HT.
}
try clear HP1P2P10M1. try clear HP1P2P10M2. try clear HP1P2P10M3. try clear HP1P2P10M4. try clear HP1P2P10M5. try clear HP1P2P10M6. try clear HP1P2P10M7. try clear HP1P2P10m7. try clear HP1P2P10m6. try clear HP1P2P10m5. try clear HP1P2P10m4. try clear HP1P2P10m3. try clear HP1P2P10m2. try clear HP1P2P10m1. 

assert(HP1P2P7P10M : rk(P1 :: P2 :: P7 :: P10 ::  nil) <= 4) by (solve_hyps_max HP1P2P7P10eq HP1P2P7P10M4).
assert(HP1P2P7P10m : rk(P1 :: P2 :: P7 :: P10 ::  nil) >= 1) by (solve_hyps_min HP1P2P7P10eq HP1P2P7P10m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P11 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP11M : rk(P11 ::  nil) <= 1) by (solve_hyps_max HP11eq HP11M1).
assert(HP11m : rk(P11 ::  nil) >= 1) by (solve_hyps_min HP11eq HP11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P11 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP1P11M : rk(P1 :: P11 ::  nil) <= 2) by (solve_hyps_max HP1P11eq HP1P11M2).
assert(HP1P11m : rk(P1 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P11eq HP1P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P11 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P11 requis par la preuve de (?)P1P2P11 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P11 requis par la preuve de (?)P1P2P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P11m2 : rk(P1 :: P2 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 5 4 et 4*)
assert(HP1P2P11m3 : rk(P1 :: P2 :: P11 :: nil) >= 3).
{
	try assert(HP1P6P11eq : rk(P1 :: P6 :: P11 :: nil) = 2) by (apply LP1P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P11Mtmp : rk(P1 :: P6 :: P11 :: nil) <= 2) by (solve_hyps_max HP1P6P11eq HP1P6P11M2).
	assert(HP1P2P6P11mtmp : rk(P1 :: P2 :: P6 :: P11 :: nil) >= 3) by (solve_hyps_min HP1P2P6P11eq HP1P2P6P11m3).
	try assert(HP1P11eq : rk(P1 :: P11 :: nil) = 2) by (apply LP1P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P11mtmp : rk(P1 :: P11 :: nil) >= 2) by (solve_hyps_min HP1P11eq HP1P11m2).
	assert(Hincl : incl (P1 :: P11 :: nil) (list_inter (P1 :: P2 :: P11 :: nil) (P1 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P6 :: P11 :: nil) (P1 :: P2 :: P11 :: P1 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P11 :: P1 :: P6 :: P11 :: nil) ((P1 :: P2 :: P11 :: nil) ++ (P1 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P6P11mtmp;try rewrite HT2 in HP1P2P6P11mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P11 :: nil) (P1 :: P6 :: P11 :: nil) (P1 :: P11 :: nil) 3 2 2 HP1P2P6P11mtmp HP1P11mtmp HP1P6P11Mtmp Hincl);apply HT.
}


assert(HP1P2P11M : rk(P1 :: P2 :: P11 ::  nil) <= 3) by (solve_hyps_max HP1P2P11eq HP1P2P11M3).
assert(HP1P2P11m : rk(P1 :: P2 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P11eq HP1P2P11m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P2P3P11 *)
(* dans la couche 0 *)
Lemma LP1P2P3P6P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P6 :: P11 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P3P6P11 requis par la preuve de (?)P1P2P3P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P3P6P11 requis par la preuve de (?)P1P2P3P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P6P11 requis par la preuve de (?)P1P2P3P6P11 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P6P11 requis par la preuve de (?)P1P2P3P6P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P6P11m2 : rk(P1 :: P2 :: P3 :: P6 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P6 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P3P6P11M4 : rk(P1 :: P2 :: P3 :: P6 :: P11 :: nil) <= 4).
{
	try assert(HP3eq : rk(P3 :: nil) = 1) by (apply LP3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3Mtmp : rk(P3 :: nil) <= 1) by (solve_hyps_max HP3eq HP3M1).
	assert(HP1P2P6P11Mtmp : rk(P1 :: P2 :: P6 :: P11 :: nil) <= 3) by (solve_hyps_max HP1P2P6P11eq HP1P2P6P11M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P3 :: nil) (P1 :: P2 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P6 :: P11 :: nil) (P3 :: P1 :: P2 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P3 :: P1 :: P2 :: P6 :: P11 :: nil) ((P3 :: nil) ++ (P1 :: P2 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P3 :: nil) (P1 :: P2 :: P6 :: P11 :: nil) (nil) 1 3 0 HP3Mtmp HP1P2P6P11Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P6P11m3 : rk(P1 :: P2 :: P3 :: P6 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P6 :: P11 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P6P11m4 : rk(P1 :: P2 :: P3 :: P6 :: P11 :: nil) >= 4).
{
	try assert(HP1P2P3P6eq : rk(P1 :: P2 :: P3 :: P6 :: nil) = 4) by (apply LP1P2P3P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P6mtmp : rk(P1 :: P2 :: P3 :: P6 :: nil) >= 4) by (solve_hyps_min HP1P2P3P6eq HP1P2P3P6m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P6 :: nil) (P1 :: P2 :: P3 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P6 :: nil) (P1 :: P2 :: P3 :: P6 :: P11 :: nil) 4 4 HP1P2P3P6mtmp Hcomp Hincl);apply HT.
}


assert(HP1P2P3P6P11M : rk(P1 :: P2 :: P3 :: P6 :: P11 ::  nil) <= 5) by (solve_hyps_max HP1P2P3P6P11eq HP1P2P3P6P11M5).
assert(HP1P2P3P6P11m : rk(P1 :: P2 :: P3 :: P6 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P6P11eq HP1P2P3P6P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P3P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P11 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P3P11 requis par la preuve de (?)P1P2P3P11 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P3P11 requis par la preuve de (?)P1P2P3P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P3P11 requis par la preuve de (?)P1P2P3P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P11m2 : rk(P1 :: P2 :: P3 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P11m3 : rk(P1 :: P2 :: P3 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P11 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP1P2P3P11m4 : rk(P1 :: P2 :: P3 :: P11 :: nil) >= 4).
{
	try assert(HP1P6P11eq : rk(P1 :: P6 :: P11 :: nil) = 2) by (apply LP1P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P11Mtmp : rk(P1 :: P6 :: P11 :: nil) <= 2) by (solve_hyps_max HP1P6P11eq HP1P6P11M2).
	try assert(HP1P2P3P6P11eq : rk(P1 :: P2 :: P3 :: P6 :: P11 :: nil) = 4) by (apply LP1P2P3P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P6P11mtmp : rk(P1 :: P2 :: P3 :: P6 :: P11 :: nil) >= 4) by (solve_hyps_min HP1P2P3P6P11eq HP1P2P3P6P11m4).
	try assert(HP1P11eq : rk(P1 :: P11 :: nil) = 2) by (apply LP1P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P11mtmp : rk(P1 :: P11 :: nil) >= 2) by (solve_hyps_min HP1P11eq HP1P11m2).
	assert(Hincl : incl (P1 :: P11 :: nil) (list_inter (P1 :: P2 :: P3 :: P11 :: nil) (P1 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P6 :: P11 :: nil) (P1 :: P2 :: P3 :: P11 :: P1 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P3 :: P11 :: P1 :: P6 :: P11 :: nil) ((P1 :: P2 :: P3 :: P11 :: nil) ++ (P1 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P6P11mtmp;try rewrite HT2 in HP1P2P3P6P11mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P3 :: P11 :: nil) (P1 :: P6 :: P11 :: nil) (P1 :: P11 :: nil) 4 2 2 HP1P2P3P6P11mtmp HP1P11mtmp HP1P6P11Mtmp Hincl);apply HT.
}
try clear HP1P2P3P6P11M1. try clear HP1P2P3P6P11M2. try clear HP1P2P3P6P11M3. try clear HP1P2P3P6P11M4. try clear HP1P2P3P6P11M5. try clear HP1P2P3P6P11M6. try clear HP1P2P3P6P11M7. try clear HP1P2P3P6P11m7. try clear HP1P2P3P6P11m6. try clear HP1P2P3P6P11m5. try clear HP1P2P3P6P11m4. try clear HP1P2P3P6P11m3. try clear HP1P2P3P6P11m2. try clear HP1P2P3P6P11m1. 

assert(HP1P2P3P11M : rk(P1 :: P2 :: P3 :: P11 ::  nil) <= 4) by (solve_hyps_max HP1P2P3P11eq HP1P2P3P11M4).
assert(HP1P2P3P11m : rk(P1 :: P2 :: P3 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P11eq HP1P2P3P11m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P2P4P11 *)
(* dans la couche 0 *)
Lemma LP1P2P4P6P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 :: P6 :: P11 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P4P6P11 requis par la preuve de (?)P1P2P4P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P4P6P11 requis par la preuve de (?)P1P2P4P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P4P6P11 requis par la preuve de (?)P1P2P4P6P11 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P4P6P11 requis par la preuve de (?)P1P2P4P6P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P6P11m2 : rk(P1 :: P2 :: P4 :: P6 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P6 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P4P6P11M4 : rk(P1 :: P2 :: P4 :: P6 :: P11 :: nil) <= 4).
{
	try assert(HP4eq : rk(P4 :: nil) = 1) by (apply LP4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP4Mtmp : rk(P4 :: nil) <= 1) by (solve_hyps_max HP4eq HP4M1).
	assert(HP1P2P6P11Mtmp : rk(P1 :: P2 :: P6 :: P11 :: nil) <= 3) by (solve_hyps_max HP1P2P6P11eq HP1P2P6P11M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P4 :: nil) (P1 :: P2 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P6 :: P11 :: nil) (P4 :: P1 :: P2 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P4 :: P1 :: P2 :: P6 :: P11 :: nil) ((P4 :: nil) ++ (P1 :: P2 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P4 :: nil) (P1 :: P2 :: P6 :: P11 :: nil) (nil) 1 3 0 HP4Mtmp HP1P2P6P11Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P6P11m3 : rk(P1 :: P2 :: P4 :: P6 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P4eq : rk(P1 :: P2 :: P4 :: nil) = 3) by (apply LP1P2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4mtmp : rk(P1 :: P2 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P2P4eq HP1P2P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P6 :: P11 :: nil) 3 3 HP1P2P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P6P11m4 : rk(P1 :: P2 :: P4 :: P6 :: P11 :: nil) >= 4).
{
	try assert(HP1P2P4P6eq : rk(P1 :: P2 :: P4 :: P6 :: nil) = 4) by (apply LP1P2P4P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P6mtmp : rk(P1 :: P2 :: P4 :: P6 :: nil) >= 4) by (solve_hyps_min HP1P2P4P6eq HP1P2P4P6m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: P6 :: nil) (P1 :: P2 :: P4 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: P6 :: nil) (P1 :: P2 :: P4 :: P6 :: P11 :: nil) 4 4 HP1P2P4P6mtmp Hcomp Hincl);apply HT.
}


assert(HP1P2P4P6P11M : rk(P1 :: P2 :: P4 :: P6 :: P11 ::  nil) <= 5) by (solve_hyps_max HP1P2P4P6P11eq HP1P2P4P6P11M5).
assert(HP1P2P4P6P11m : rk(P1 :: P2 :: P4 :: P6 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P4P6P11eq HP1P2P4P6P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P4P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 :: P11 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P4P11 requis par la preuve de (?)P1P2P4P11 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P4P11 requis par la preuve de (?)P1P2P4P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P4P11 requis par la preuve de (?)P1P2P4P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P11m2 : rk(P1 :: P2 :: P4 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P11m3 : rk(P1 :: P2 :: P4 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P4eq : rk(P1 :: P2 :: P4 :: nil) = 3) by (apply LP1P2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4mtmp : rk(P1 :: P2 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P2P4eq HP1P2P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P11 :: nil) 3 3 HP1P2P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP1P2P4P11m4 : rk(P1 :: P2 :: P4 :: P11 :: nil) >= 4).
{
	try assert(HP1P6P11eq : rk(P1 :: P6 :: P11 :: nil) = 2) by (apply LP1P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P11Mtmp : rk(P1 :: P6 :: P11 :: nil) <= 2) by (solve_hyps_max HP1P6P11eq HP1P6P11M2).
	try assert(HP1P2P4P6P11eq : rk(P1 :: P2 :: P4 :: P6 :: P11 :: nil) = 4) by (apply LP1P2P4P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P6P11mtmp : rk(P1 :: P2 :: P4 :: P6 :: P11 :: nil) >= 4) by (solve_hyps_min HP1P2P4P6P11eq HP1P2P4P6P11m4).
	try assert(HP1P11eq : rk(P1 :: P11 :: nil) = 2) by (apply LP1P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P11mtmp : rk(P1 :: P11 :: nil) >= 2) by (solve_hyps_min HP1P11eq HP1P11m2).
	assert(Hincl : incl (P1 :: P11 :: nil) (list_inter (P1 :: P2 :: P4 :: P11 :: nil) (P1 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P6 :: P11 :: nil) (P1 :: P2 :: P4 :: P11 :: P1 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P4 :: P11 :: P1 :: P6 :: P11 :: nil) ((P1 :: P2 :: P4 :: P11 :: nil) ++ (P1 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P4P6P11mtmp;try rewrite HT2 in HP1P2P4P6P11mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P4 :: P11 :: nil) (P1 :: P6 :: P11 :: nil) (P1 :: P11 :: nil) 4 2 2 HP1P2P4P6P11mtmp HP1P11mtmp HP1P6P11Mtmp Hincl);apply HT.
}
try clear HP1P2P4P6P11M1. try clear HP1P2P4P6P11M2. try clear HP1P2P4P6P11M3. try clear HP1P2P4P6P11M4. try clear HP1P2P4P6P11M5. try clear HP1P2P4P6P11M6. try clear HP1P2P4P6P11M7. try clear HP1P2P4P6P11m7. try clear HP1P2P4P6P11m6. try clear HP1P2P4P6P11m5. try clear HP1P2P4P6P11m4. try clear HP1P2P4P6P11m3. try clear HP1P2P4P6P11m2. try clear HP1P2P4P6P11m1. 

assert(HP1P2P4P11M : rk(P1 :: P2 :: P4 :: P11 ::  nil) <= 4) by (solve_hyps_max HP1P2P4P11eq HP1P2P4P11M4).
assert(HP1P2P4P11m : rk(P1 :: P2 :: P4 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P4P11eq HP1P2P4P11m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P5P11 *)
(* dans la couche 0 *)
Lemma LP1P5P6P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P5 :: P6 :: P11 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P5P6P11 requis par la preuve de (?)P1P5P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P5P6P11 requis par la preuve de (?)P1P5P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P5P6P11 requis par la preuve de (?)P1P5P6P11 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P5P6P11M3 : rk(P1 :: P5 :: P6 :: P11 :: nil) <= 3).
{
	try assert(HP5eq : rk(P5 :: nil) = 1) by (apply LP5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP5Mtmp : rk(P5 :: nil) <= 1) by (solve_hyps_max HP5eq HP5M1).
	try assert(HP1P6P11eq : rk(P1 :: P6 :: P11 :: nil) = 2) by (apply LP1P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P11Mtmp : rk(P1 :: P6 :: P11 :: nil) <= 2) by (solve_hyps_max HP1P6P11eq HP1P6P11M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P5 :: nil) (P1 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P5 :: P6 :: P11 :: nil) (P5 :: P1 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P5 :: P1 :: P6 :: P11 :: nil) ((P5 :: nil) ++ (P1 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P5 :: nil) (P1 :: P6 :: P11 :: nil) (nil) 1 2 0 HP5Mtmp HP1P6P11Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P5P6P11m2 : rk(P1 :: P5 :: P6 :: P11 :: nil) >= 2).
{
	try assert(HP1P5eq : rk(P1 :: P5 :: nil) = 2) by (apply LP1P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5mtmp : rk(P1 :: P5 :: nil) >= 2) by (solve_hyps_min HP1P5eq HP1P5m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P5 :: nil) (P1 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P5 :: nil) (P1 :: P5 :: P6 :: P11 :: nil) 2 2 HP1P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P5P6P11m3 : rk(P1 :: P5 :: P6 :: P11 :: nil) >= 3).
{
	try assert(HP1P5P6eq : rk(P1 :: P5 :: P6 :: nil) = 3) by (apply LP1P5P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P6mtmp : rk(P1 :: P5 :: P6 :: nil) >= 3) by (solve_hyps_min HP1P5P6eq HP1P5P6m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P5 :: P6 :: nil) (P1 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P5 :: P6 :: nil) (P1 :: P5 :: P6 :: P11 :: nil) 3 3 HP1P5P6mtmp Hcomp Hincl);apply HT.
}


assert(HP1P5P6P11M : rk(P1 :: P5 :: P6 :: P11 ::  nil) <= 4) by (solve_hyps_max HP1P5P6P11eq HP1P5P6P11M4).
assert(HP1P5P6P11m : rk(P1 :: P5 :: P6 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P5P6P11eq HP1P5P6P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P5P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P5 :: P11 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P5P11 requis par la preuve de (?)P1P5P11 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P5P11 requis par la preuve de (?)P1P5P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P5P11m2 : rk(P1 :: P5 :: P11 :: nil) >= 2).
{
	try assert(HP1P5eq : rk(P1 :: P5 :: nil) = 2) by (apply LP1P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5mtmp : rk(P1 :: P5 :: nil) >= 2) by (solve_hyps_min HP1P5eq HP1P5m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P5 :: nil) (P1 :: P5 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P5 :: nil) (P1 :: P5 :: P11 :: nil) 2 2 HP1P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP1P5P11m3 : rk(P1 :: P5 :: P11 :: nil) >= 3).
{
	try assert(HP1P6P11eq : rk(P1 :: P6 :: P11 :: nil) = 2) by (apply LP1P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P11Mtmp : rk(P1 :: P6 :: P11 :: nil) <= 2) by (solve_hyps_max HP1P6P11eq HP1P6P11M2).
	try assert(HP1P5P6P11eq : rk(P1 :: P5 :: P6 :: P11 :: nil) = 3) by (apply LP1P5P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P6P11mtmp : rk(P1 :: P5 :: P6 :: P11 :: nil) >= 3) by (solve_hyps_min HP1P5P6P11eq HP1P5P6P11m3).
	try assert(HP1P11eq : rk(P1 :: P11 :: nil) = 2) by (apply LP1P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P11mtmp : rk(P1 :: P11 :: nil) >= 2) by (solve_hyps_min HP1P11eq HP1P11m2).
	assert(Hincl : incl (P1 :: P11 :: nil) (list_inter (P1 :: P5 :: P11 :: nil) (P1 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P5 :: P6 :: P11 :: nil) (P1 :: P5 :: P11 :: P1 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P5 :: P11 :: P1 :: P6 :: P11 :: nil) ((P1 :: P5 :: P11 :: nil) ++ (P1 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P5P6P11mtmp;try rewrite HT2 in HP1P5P6P11mtmp.
	assert(HT := rule_2 (P1 :: P5 :: P11 :: nil) (P1 :: P6 :: P11 :: nil) (P1 :: P11 :: nil) 3 2 2 HP1P5P6P11mtmp HP1P11mtmp HP1P6P11Mtmp Hincl);apply HT.
}
try clear HP1P5P6P11M1. try clear HP1P5P6P11M2. try clear HP1P5P6P11M3. try clear HP1P5P6P11M4. try clear HP1P5P6P11M5. try clear HP1P5P6P11M6. try clear HP1P5P6P11M7. try clear HP1P5P6P11m7. try clear HP1P5P6P11m6. try clear HP1P5P6P11m5. try clear HP1P5P6P11m4. try clear HP1P5P6P11m3. try clear HP1P5P6P11m2. try clear HP1P5P6P11m1. 

assert(HP1P5P11M : rk(P1 :: P5 :: P11 ::  nil) <= 3) by (solve_hyps_max HP1P5P11eq HP1P5P11M3).
assert(HP1P5P11m : rk(P1 :: P5 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P5P11eq HP1P5P11m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P2P5P11 *)
(* dans la couche 0 *)
Lemma LP1P2P5P6P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P5 :: P6 :: P11 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P5P6P11 requis par la preuve de (?)P1P2P5P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P5P6P11 requis par la preuve de (?)P1P2P5P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P5P6P11 requis par la preuve de (?)P1P2P5P6P11 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P5P6P11 requis par la preuve de (?)P1P2P5P6P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P6P11m2 : rk(P1 :: P2 :: P5 :: P6 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P6 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P5P6P11M4 : rk(P1 :: P2 :: P5 :: P6 :: P11 :: nil) <= 4).
{
	try assert(HP5eq : rk(P5 :: nil) = 1) by (apply LP5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP5Mtmp : rk(P5 :: nil) <= 1) by (solve_hyps_max HP5eq HP5M1).
	assert(HP1P2P6P11Mtmp : rk(P1 :: P2 :: P6 :: P11 :: nil) <= 3) by (solve_hyps_max HP1P2P6P11eq HP1P2P6P11M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P5 :: nil) (P1 :: P2 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P6 :: P11 :: nil) (P5 :: P1 :: P2 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P5 :: P1 :: P2 :: P6 :: P11 :: nil) ((P5 :: nil) ++ (P1 :: P2 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P5 :: nil) (P1 :: P2 :: P6 :: P11 :: nil) (nil) 1 3 0 HP5Mtmp HP1P2P6P11Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}
try clear HP1P2P6P11M1. try clear HP1P2P6P11M2. try clear HP1P2P6P11M3. try clear HP1P2P6P11M4. try clear HP1P2P6P11M5. try clear HP1P2P6P11M6. try clear HP1P2P6P11M7. try clear HP1P2P6P11m7. try clear HP1P2P6P11m6. try clear HP1P2P6P11m5. try clear HP1P2P6P11m4. try clear HP1P2P6P11m3. try clear HP1P2P6P11m2. try clear HP1P2P6P11m1. 

(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P6P11m3 : rk(P1 :: P2 :: P5 :: P6 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P5eq : rk(P1 :: P2 :: P5 :: nil) = 3) by (apply LP1P2P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5mtmp : rk(P1 :: P2 :: P5 :: nil) >= 3) by (solve_hyps_min HP1P2P5eq HP1P2P5m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P6 :: P11 :: nil) 3 3 HP1P2P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P6P11m4 : rk(P1 :: P2 :: P5 :: P6 :: P11 :: nil) >= 4).
{
	try assert(HP1P2P5P6eq : rk(P1 :: P2 :: P5 :: P6 :: nil) = 4) by (apply LP1P2P5P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5P6mtmp : rk(P1 :: P2 :: P5 :: P6 :: nil) >= 4) by (solve_hyps_min HP1P2P5P6eq HP1P2P5P6m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P5 :: P6 :: nil) (P1 :: P2 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P5 :: P6 :: nil) (P1 :: P2 :: P5 :: P6 :: P11 :: nil) 4 4 HP1P2P5P6mtmp Hcomp Hincl);apply HT.
}


assert(HP1P2P5P6P11M : rk(P1 :: P2 :: P5 :: P6 :: P11 ::  nil) <= 5) by (solve_hyps_max HP1P2P5P6P11eq HP1P2P5P6P11M5).
assert(HP1P2P5P6P11m : rk(P1 :: P2 :: P5 :: P6 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P5P6P11eq HP1P2P5P6P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P5P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P5 :: P11 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P5P11 requis par la preuve de (?)P1P2P5P11 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P5P11 requis par la preuve de (?)P1P2P5P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P5P11 requis par la preuve de (?)P1P2P5P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P11m2 : rk(P1 :: P2 :: P5 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P11m3 : rk(P1 :: P2 :: P5 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P5eq : rk(P1 :: P2 :: P5 :: nil) = 3) by (apply LP1P2P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5mtmp : rk(P1 :: P2 :: P5 :: nil) >= 3) by (solve_hyps_min HP1P2P5eq HP1P2P5m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P11 :: nil) 3 3 HP1P2P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP1P2P5P11m4 : rk(P1 :: P2 :: P5 :: P11 :: nil) >= 4).
{
	try assert(HP1P6P11eq : rk(P1 :: P6 :: P11 :: nil) = 2) by (apply LP1P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P11Mtmp : rk(P1 :: P6 :: P11 :: nil) <= 2) by (solve_hyps_max HP1P6P11eq HP1P6P11M2).
	try assert(HP1P2P5P6P11eq : rk(P1 :: P2 :: P5 :: P6 :: P11 :: nil) = 4) by (apply LP1P2P5P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5P6P11mtmp : rk(P1 :: P2 :: P5 :: P6 :: P11 :: nil) >= 4) by (solve_hyps_min HP1P2P5P6P11eq HP1P2P5P6P11m4).
	try assert(HP1P11eq : rk(P1 :: P11 :: nil) = 2) by (apply LP1P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P11mtmp : rk(P1 :: P11 :: nil) >= 2) by (solve_hyps_min HP1P11eq HP1P11m2).
	assert(Hincl : incl (P1 :: P11 :: nil) (list_inter (P1 :: P2 :: P5 :: P11 :: nil) (P1 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P6 :: P11 :: nil) (P1 :: P2 :: P5 :: P11 :: P1 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P5 :: P11 :: P1 :: P6 :: P11 :: nil) ((P1 :: P2 :: P5 :: P11 :: nil) ++ (P1 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P5P6P11mtmp;try rewrite HT2 in HP1P2P5P6P11mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P5 :: P11 :: nil) (P1 :: P6 :: P11 :: nil) (P1 :: P11 :: nil) 4 2 2 HP1P2P5P6P11mtmp HP1P11mtmp HP1P6P11Mtmp Hincl);apply HT.
}
try clear HP1P2P5P6P11M1. try clear HP1P2P5P6P11M2. try clear HP1P2P5P6P11M3. try clear HP1P2P5P6P11M4. try clear HP1P2P5P6P11M5. try clear HP1P2P5P6P11M6. try clear HP1P2P5P6P11M7. try clear HP1P2P5P6P11m7. try clear HP1P2P5P6P11m6. try clear HP1P2P5P6P11m5. try clear HP1P2P5P6P11m4. try clear HP1P2P5P6P11m3. try clear HP1P2P5P6P11m2. try clear HP1P2P5P6P11m1. 

assert(HP1P2P5P11M : rk(P1 :: P2 :: P5 :: P11 ::  nil) <= 4) by (solve_hyps_max HP1P2P5P11eq HP1P2P5P11M4).
assert(HP1P2P5P11m : rk(P1 :: P2 :: P5 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P5P11eq HP1P2P5P11m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P2P3P5P11 *)
(* dans la couche 0 *)
Lemma LP1P2P3P5P6P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P5 :: P6 :: P11 ::  nil) = 5.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P2P3P5P6P11 requis par la preuve de (?)P1P2P3P5P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P3P5P6P11 requis par la preuve de (?)P1P2P3P5P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P5P6P11 requis par la preuve de (?)P1P2P3P5P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P5P6P11 requis par la preuve de (?)P1P2P3P5P6P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P6P11m2 : rk(P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P6P11m3 : rk(P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P6P11m4 : rk(P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil) >= 4).
{
	try assert(HP1P2P3P5eq : rk(P1 :: P2 :: P3 :: P5 :: nil) = 4) by (apply LP1P2P3P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5mtmp : rk(P1 :: P2 :: P3 :: P5 :: nil) >= 4) by (solve_hyps_min HP1P2P3P5eq HP1P2P3P5m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P5 :: nil) (P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P5 :: nil) (P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil) 4 4 HP1P2P3P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P6P11m5 : rk(P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil) >= 5).
{
	try assert(HP1P2P3P5P6eq : rk(P1 :: P2 :: P3 :: P5 :: P6 :: nil) = 5) by (apply LP1P2P3P5P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5P6mtmp : rk(P1 :: P2 :: P3 :: P5 :: P6 :: nil) >= 5) by (solve_hyps_min HP1P2P3P5P6eq HP1P2P3P5P6m5).
	assert(Hcomp : 5 <= 5) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P5 :: P6 :: nil) (P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P5 :: P6 :: nil) (P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil) 5 5 HP1P2P3P5P6mtmp Hcomp Hincl);apply HT.
}
try clear HP1P2P3P5P6M1. try clear HP1P2P3P5P6M2. try clear HP1P2P3P5P6M3. try clear HP1P2P3P5P6M4. try clear HP1P2P3P5P6M5. try clear HP1P2P3P5P6M6. try clear HP1P2P3P5P6M7. try clear HP1P2P3P5P6m7. try clear HP1P2P3P5P6m6. try clear HP1P2P3P5P6m5. try clear HP1P2P3P5P6m4. try clear HP1P2P3P5P6m3. try clear HP1P2P3P5P6m2. try clear HP1P2P3P5P6m1. 

assert(HP1P2P3P5P6P11M : rk(P1 :: P2 :: P3 :: P5 :: P6 :: P11 ::  nil) <= 6) by (solve_hyps_max HP1P2P3P5P6P11eq HP1P2P3P5P6P11M6).
assert(HP1P2P3P5P6P11m : rk(P1 :: P2 :: P3 :: P5 :: P6 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P5P6P11eq HP1P2P3P5P6P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P3P5P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P5 :: P11 ::  nil) = 5.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P2P3P5P11 requis par la preuve de (?)P1P2P3P5P11 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P3P5P11 requis par la preuve de (?)P1P2P3P5P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P5P11 requis par la preuve de (?)P1P2P3P5P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P5P11 requis par la preuve de (?)P1P2P3P5P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P11m2 : rk(P1 :: P2 :: P3 :: P5 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P5 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P5 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P11m3 : rk(P1 :: P2 :: P3 :: P5 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P5 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P5 :: P11 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P11m4 : rk(P1 :: P2 :: P3 :: P5 :: P11 :: nil) >= 4).
{
	try assert(HP1P2P3P5eq : rk(P1 :: P2 :: P3 :: P5 :: nil) = 4) by (apply LP1P2P3P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5mtmp : rk(P1 :: P2 :: P3 :: P5 :: nil) >= 4) by (solve_hyps_min HP1P2P3P5eq HP1P2P3P5m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P5 :: nil) (P1 :: P2 :: P3 :: P5 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P5 :: nil) (P1 :: P2 :: P3 :: P5 :: P11 :: nil) 4 4 HP1P2P3P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP1P2P3P5P11m5 : rk(P1 :: P2 :: P3 :: P5 :: P11 :: nil) >= 5).
{
	try assert(HP1P6P11eq : rk(P1 :: P6 :: P11 :: nil) = 2) by (apply LP1P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P11Mtmp : rk(P1 :: P6 :: P11 :: nil) <= 2) by (solve_hyps_max HP1P6P11eq HP1P6P11M2).
	try assert(HP1P2P3P5P6P11eq : rk(P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil) = 5) by (apply LP1P2P3P5P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5P6P11mtmp : rk(P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil) >= 5) by (solve_hyps_min HP1P2P3P5P6P11eq HP1P2P3P5P6P11m5).
	try assert(HP1P11eq : rk(P1 :: P11 :: nil) = 2) by (apply LP1P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P11mtmp : rk(P1 :: P11 :: nil) >= 2) by (solve_hyps_min HP1P11eq HP1P11m2).
	assert(Hincl : incl (P1 :: P11 :: nil) (list_inter (P1 :: P2 :: P3 :: P5 :: P11 :: nil) (P1 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P5 :: P6 :: P11 :: nil) (P1 :: P2 :: P3 :: P5 :: P11 :: P1 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P3 :: P5 :: P11 :: P1 :: P6 :: P11 :: nil) ((P1 :: P2 :: P3 :: P5 :: P11 :: nil) ++ (P1 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P5P6P11mtmp;try rewrite HT2 in HP1P2P3P5P6P11mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P3 :: P5 :: P11 :: nil) (P1 :: P6 :: P11 :: nil) (P1 :: P11 :: nil) 5 2 2 HP1P2P3P5P6P11mtmp HP1P11mtmp HP1P6P11Mtmp Hincl);apply HT.
}
try clear HP1P2P3P5P6P11M1. try clear HP1P2P3P5P6P11M2. try clear HP1P2P3P5P6P11M3. try clear HP1P2P3P5P6P11M4. try clear HP1P2P3P5P6P11M5. try clear HP1P2P3P5P6P11M6. try clear HP1P2P3P5P6P11M7. try clear HP1P2P3P5P6P11m7. try clear HP1P2P3P5P6P11m6. try clear HP1P2P3P5P6P11m5. try clear HP1P2P3P5P6P11m4. try clear HP1P2P3P5P6P11m3. try clear HP1P2P3P5P6P11m2. try clear HP1P2P3P5P6P11m1. 

assert(HP1P2P3P5P11M : rk(P1 :: P2 :: P3 :: P5 :: P11 ::  nil) <= 5) by (solve_hyps_max HP1P2P3P5P11eq HP1P2P3P5P11M5).
assert(HP1P2P3P5P11m : rk(P1 :: P2 :: P3 :: P5 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P5P11eq HP1P2P3P5P11m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP1P2P4P5P11 *)
(* dans la couche 0 *)
Lemma LP1P2P4P5P6P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 :: P5 :: P6 :: P11 ::  nil) = 5.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P2P4P5P6P11 requis par la preuve de (?)P1P2P4P5P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P4P5P6P11 requis par la preuve de (?)P1P2P4P5P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P4P5P6P11 requis par la preuve de (?)P1P2P4P5P6P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P4P5P6P11 requis par la preuve de (?)P1P2P4P5P6P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P6P11m2 : rk(P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P6P11m3 : rk(P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P4eq : rk(P1 :: P2 :: P4 :: nil) = 3) by (apply LP1P2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4mtmp : rk(P1 :: P2 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P2P4eq HP1P2P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil) 3 3 HP1P2P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P6P11m4 : rk(P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil) >= 4).
{
	try assert(HP1P2P4P5eq : rk(P1 :: P2 :: P4 :: P5 :: nil) = 4) by (apply LP1P2P4P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P5mtmp : rk(P1 :: P2 :: P4 :: P5 :: nil) >= 4) by (solve_hyps_min HP1P2P4P5eq HP1P2P4P5m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: P5 :: nil) (P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: P5 :: nil) (P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil) 4 4 HP1P2P4P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P6P11m5 : rk(P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil) >= 5).
{
	try assert(HP1P2P4P5P6eq : rk(P1 :: P2 :: P4 :: P5 :: P6 :: nil) = 5) by (apply LP1P2P4P5P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P5P6mtmp : rk(P1 :: P2 :: P4 :: P5 :: P6 :: nil) >= 5) by (solve_hyps_min HP1P2P4P5P6eq HP1P2P4P5P6m5).
	assert(Hcomp : 5 <= 5) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: P5 :: P6 :: nil) (P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: P5 :: P6 :: nil) (P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil) 5 5 HP1P2P4P5P6mtmp Hcomp Hincl);apply HT.
}


assert(HP1P2P4P5P6P11M : rk(P1 :: P2 :: P4 :: P5 :: P6 :: P11 ::  nil) <= 6) by (solve_hyps_max HP1P2P4P5P6P11eq HP1P2P4P5P6P11M6).
assert(HP1P2P4P5P6P11m : rk(P1 :: P2 :: P4 :: P5 :: P6 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P4P5P6P11eq HP1P2P4P5P6P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P4P5P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P4 :: P5 :: P11 ::  nil) = 5.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P2P4P5P11 requis par la preuve de (?)P1P2P4P5P11 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P4P5P11 requis par la preuve de (?)P1P2P4P5P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P4P5P11 requis par la preuve de (?)P1P2P4P5P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P4P5P11 requis par la preuve de (?)P1P2P4P5P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P11m2 : rk(P1 :: P2 :: P4 :: P5 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P5 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P5 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P11m3 : rk(P1 :: P2 :: P4 :: P5 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P4eq : rk(P1 :: P2 :: P4 :: nil) = 3) by (apply LP1P2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4mtmp : rk(P1 :: P2 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P2P4eq HP1P2P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P5 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P5 :: P11 :: nil) 3 3 HP1P2P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P5P11m4 : rk(P1 :: P2 :: P4 :: P5 :: P11 :: nil) >= 4).
{
	try assert(HP1P2P4P5eq : rk(P1 :: P2 :: P4 :: P5 :: nil) = 4) by (apply LP1P2P4P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P5mtmp : rk(P1 :: P2 :: P4 :: P5 :: nil) >= 4) by (solve_hyps_min HP1P2P4P5eq HP1P2P4P5m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: P5 :: nil) (P1 :: P2 :: P4 :: P5 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: P5 :: nil) (P1 :: P2 :: P4 :: P5 :: P11 :: nil) 4 4 HP1P2P4P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP1P2P4P5P11m5 : rk(P1 :: P2 :: P4 :: P5 :: P11 :: nil) >= 5).
{
	try assert(HP1P6P11eq : rk(P1 :: P6 :: P11 :: nil) = 2) by (apply LP1P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P11Mtmp : rk(P1 :: P6 :: P11 :: nil) <= 2) by (solve_hyps_max HP1P6P11eq HP1P6P11M2).
	try assert(HP1P2P4P5P6P11eq : rk(P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil) = 5) by (apply LP1P2P4P5P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4P5P6P11mtmp : rk(P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil) >= 5) by (solve_hyps_min HP1P2P4P5P6P11eq HP1P2P4P5P6P11m5).
	try assert(HP1P11eq : rk(P1 :: P11 :: nil) = 2) by (apply LP1P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P11mtmp : rk(P1 :: P11 :: nil) >= 2) by (solve_hyps_min HP1P11eq HP1P11m2).
	assert(Hincl : incl (P1 :: P11 :: nil) (list_inter (P1 :: P2 :: P4 :: P5 :: P11 :: nil) (P1 :: P6 :: P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P5 :: P6 :: P11 :: nil) (P1 :: P2 :: P4 :: P5 :: P11 :: P1 :: P6 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P4 :: P5 :: P11 :: P1 :: P6 :: P11 :: nil) ((P1 :: P2 :: P4 :: P5 :: P11 :: nil) ++ (P1 :: P6 :: P11 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P4P5P6P11mtmp;try rewrite HT2 in HP1P2P4P5P6P11mtmp.
	assert(HT := rule_2 (P1 :: P2 :: P4 :: P5 :: P11 :: nil) (P1 :: P6 :: P11 :: nil) (P1 :: P11 :: nil) 5 2 2 HP1P2P4P5P6P11mtmp HP1P11mtmp HP1P6P11Mtmp Hincl);apply HT.
}
try clear HP1P2P4P5P6P11M1. try clear HP1P2P4P5P6P11M2. try clear HP1P2P4P5P6P11M3. try clear HP1P2P4P5P6P11M4. try clear HP1P2P4P5P6P11M5. try clear HP1P2P4P5P6P11M6. try clear HP1P2P4P5P6P11M7. try clear HP1P2P4P5P6P11m7. try clear HP1P2P4P5P6P11m6. try clear HP1P2P4P5P6P11m5. try clear HP1P2P4P5P6P11m4. try clear HP1P2P4P5P6P11m3. try clear HP1P2P4P5P6P11m2. try clear HP1P2P4P5P6P11m1. 

assert(HP1P2P4P5P11M : rk(P1 :: P2 :: P4 :: P5 :: P11 ::  nil) <= 5) by (solve_hyps_max HP1P2P4P5P11eq HP1P2P4P5P11M5).
assert(HP1P2P4P5P11m : rk(P1 :: P2 :: P4 :: P5 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P4P5P11eq HP1P2P4P5P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP6P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P6 :: P11 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP6P11M : rk(P6 :: P11 ::  nil) <= 2) by (solve_hyps_max HP6P11eq HP6P11M2).
assert(HP6P11m : rk(P6 :: P11 ::  nil) >= 1) by (solve_hyps_min HP6P11eq HP6P11m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP2P7P11 *)
(* dans la couche 0 *)
Lemma LP1P2P3P7P11P12 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P7 :: P11 :: P12 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P3P7P11P12 requis par la preuve de (?)P1P2P3P7P11P12 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 3 , 3 : pour P1P2P3P7P12 requis par la preuve de (?)P1P2P3P7P11P12 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 2 : pour P2P3P12 requis par la preuve de (?)P1P2P3P7P12 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P3P7P12 requis par la preuve de (?)P1P2P3P7P12 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 3 : pour P1P2P3P12 requis par la preuve de (?)P1P2P3P7P12 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P3P12 requis par la preuve de (?)P1P2P3P12 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P2P3P12 requis par la preuve de (?)P1P2P3P12 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P3P12 requis par la preuve de (?)P1P2P3P12 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P3P12M3 : rk(P1 :: P2 :: P3 :: P12 :: nil) <= 3).
{
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1Mtmp : rk(P1 :: nil) <= 1) by (solve_hyps_max HP1eq HP1M1).
	assert(HP2P3P12Mtmp : rk(P2 :: P3 :: P12 :: nil) <= 2) by (solve_hyps_max HP2P3P12eq HP2P3P12M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: nil) (P2 :: P3 :: P12 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P12 :: nil) (P1 :: P2 :: P3 :: P12 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P3 :: P12 :: nil) ((P1 :: nil) ++ (P2 :: P3 :: P12 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: nil) (P2 :: P3 :: P12 :: nil) (nil) 1 2 0 HP1Mtmp HP2P3P12Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P12m2 : rk(P1 :: P2 :: P3 :: P12 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P12 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P12m3 : rk(P1 :: P2 :: P3 :: P12 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P12 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P3P7P12 requis par la preuve de (?)P1P2P3P7P12 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P7P12 requis par la preuve de (?)P1P2P3P7P12 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P7P12 requis par la preuve de (?)P1P2P3P7P12 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P7P12m2 : rk(P1 :: P2 :: P3 :: P7 :: P12 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P7 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P7 :: P12 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P7P12m3 : rk(P1 :: P2 :: P3 :: P7 :: P12 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P7 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P7 :: P12 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P3P7P12M4 : rk(P1 :: P2 :: P3 :: P7 :: P12 :: nil) <= 4).
{
	try assert(HP7eq : rk(P7 :: nil) = 1) by (apply LP7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP7Mtmp : rk(P7 :: nil) <= 1) by (solve_hyps_max HP7eq HP7M1).
	assert(HP1P2P3P12Mtmp : rk(P1 :: P2 :: P3 :: P12 :: nil) <= 3) by (solve_hyps_max HP1P2P3P12eq HP1P2P3P12M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P7 :: nil) (P1 :: P2 :: P3 :: P12 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P7 :: P12 :: nil) (P7 :: P1 :: P2 :: P3 :: P12 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P7 :: P1 :: P2 :: P3 :: P12 :: nil) ((P7 :: nil) ++ (P1 :: P2 :: P3 :: P12 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P7 :: nil) (P1 :: P2 :: P3 :: P12 :: nil) (nil) 1 3 0 HP7Mtmp HP1P2P3P12Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}
try clear HP1P2P3P12M1. try clear HP1P2P3P12M2. try clear HP1P2P3P12M3. try clear HP1P2P3P12M4. try clear HP1P2P3P12M5. try clear HP1P2P3P12M6. try clear HP1P2P3P12M7. try clear HP1P2P3P12m7. try clear HP1P2P3P12m6. try clear HP1P2P3P12m5. try clear HP1P2P3P12m4. try clear HP1P2P3P12m3. try clear HP1P2P3P12m2. try clear HP1P2P3P12m1. 

(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 4*)
assert(HP1P2P3P7P12M3 : rk(P1 :: P2 :: P3 :: P7 :: P12 :: nil) <= 3).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	assert(HP2P3P12Mtmp : rk(P2 :: P3 :: P12 :: nil) <= 2) by (solve_hyps_max HP2P3P12eq HP2P3P12M2).
	try assert(HP2eq : rk(P2 :: nil) = 1) by (apply LP2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2mtmp : rk(P2 :: nil) >= 1) by (solve_hyps_min HP2eq HP2m1).
	assert(Hincl : incl (P2 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P2 :: P3 :: P12 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P7 :: P12 :: nil) (P1 :: P2 :: P7 :: P2 :: P3 :: P12 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P2 :: P3 :: P12 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P2 :: P3 :: P12 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P2 :: P7 :: nil) (P2 :: P3 :: P12 :: nil) (P2 :: nil) 2 2 1 HP1P2P7Mtmp HP2P3P12Mtmp HP2mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P3P7P11P12 requis par la preuve de (?)P1P2P3P7P11P12 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P7P11P12 requis par la preuve de (?)P1P2P3P7P11P12 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P7P11P12 requis par la preuve de (?)P1P2P3P7P11P12 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P7P11P12m2 : rk(P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P7P11P12m3 : rk(P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P3P7P11P12M4 : rk(P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil) <= 4).
{
	try assert(HP11eq : rk(P11 :: nil) = 1) by (apply LP11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP11Mtmp : rk(P11 :: nil) <= 1) by (solve_hyps_max HP11eq HP11M1).
	assert(HP1P2P3P7P12Mtmp : rk(P1 :: P2 :: P3 :: P7 :: P12 :: nil) <= 3) by (solve_hyps_max HP1P2P3P7P12eq HP1P2P3P7P12M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P11 :: nil) (P1 :: P2 :: P3 :: P7 :: P12 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil) (P11 :: P1 :: P2 :: P3 :: P7 :: P12 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P11 :: P1 :: P2 :: P3 :: P7 :: P12 :: nil) ((P11 :: nil) ++ (P1 :: P2 :: P3 :: P7 :: P12 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P11 :: nil) (P1 :: P2 :: P3 :: P7 :: P12 :: nil) (nil) 1 3 0 HP11Mtmp HP1P2P3P7P12Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P7P11P12m4 : rk(P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil) >= 4).
{
	try assert(HP1P2P3P11eq : rk(P1 :: P2 :: P3 :: P11 :: nil) = 4) by (apply LP1P2P3P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P11mtmp : rk(P1 :: P2 :: P3 :: P11 :: nil) >= 4) by (solve_hyps_min HP1P2P3P11eq HP1P2P3P11m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P11 :: nil) (P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P11 :: nil) (P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil) 4 4 HP1P2P3P11mtmp Hcomp Hincl);apply HT.
}


assert(HP1P2P3P7P11P12M : rk(P1 :: P2 :: P3 :: P7 :: P11 :: P12 ::  nil) <= 6) by (solve_hyps_max HP1P2P3P7P11P12eq HP1P2P3P7P11P12M6).
assert(HP1P2P3P7P11P12m : rk(P1 :: P2 :: P3 :: P7 :: P11 :: P12 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P7P11P12eq HP1P2P3P7P11P12m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P7P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P7 :: P11 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P7P11 requis par la preuve de (?)P2P7P11 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P7P11 requis par la preuve de (?)P2P7P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P7P11m2 : rk(P2 :: P7 :: P11 :: nil) >= 2).
{
	try assert(HP2P7eq : rk(P2 :: P7 :: nil) = 2) by (apply LP2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7mtmp : rk(P2 :: P7 :: nil) >= 2) by (solve_hyps_min HP2P7eq HP2P7m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P7 :: nil) (P2 :: P7 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P7 :: nil) (P2 :: P7 :: P11 :: nil) 2 2 HP2P7mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 5*)
assert(HP2P7P11m3 : rk(P2 :: P7 :: P11 :: nil) >= 3).
{
	assert(HP1P2P3P7P12Mtmp : rk(P1 :: P2 :: P3 :: P7 :: P12 :: nil) <= 3) by (solve_hyps_max HP1P2P3P7P12eq HP1P2P3P7P12M3).
	try assert(HP1P2P3P7P11P12eq : rk(P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil) = 4) by (apply LP1P2P3P7P11P12 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P7P11P12mtmp : rk(P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil) >= 4) by (solve_hyps_min HP1P2P3P7P11P12eq HP1P2P3P7P11P12m4).
	try assert(HP2P7eq : rk(P2 :: P7 :: nil) = 2) by (apply LP2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7mtmp : rk(P2 :: P7 :: nil) >= 2) by (solve_hyps_min HP2P7eq HP2P7m2).
	assert(Hincl : incl (P2 :: P7 :: nil) (list_inter (P2 :: P7 :: P11 :: nil) (P1 :: P2 :: P3 :: P7 :: P12 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P7 :: P11 :: P12 :: nil) (P2 :: P7 :: P11 :: P1 :: P2 :: P3 :: P7 :: P12 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P7 :: P11 :: P1 :: P2 :: P3 :: P7 :: P12 :: nil) ((P2 :: P7 :: P11 :: nil) ++ (P1 :: P2 :: P3 :: P7 :: P12 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P7P11P12mtmp;try rewrite HT2 in HP1P2P3P7P11P12mtmp.
	assert(HT := rule_2 (P2 :: P7 :: P11 :: nil) (P1 :: P2 :: P3 :: P7 :: P12 :: nil) (P2 :: P7 :: nil) 4 2 3 HP1P2P3P7P11P12mtmp HP2P7mtmp HP1P2P3P7P12Mtmp Hincl);apply HT.
}
try clear HP1P2P3P7P12M1. try clear HP1P2P3P7P12M2. try clear HP1P2P3P7P12M3. try clear HP1P2P3P7P12M4. try clear HP1P2P3P7P12M5. try clear HP1P2P3P7P12M6. try clear HP1P2P3P7P12M7. try clear HP1P2P3P7P12m7. try clear HP1P2P3P7P12m6. try clear HP1P2P3P7P12m5. try clear HP1P2P3P7P12m4. try clear HP1P2P3P7P12m3. try clear HP1P2P3P7P12m2. try clear HP1P2P3P7P12m1. try clear HP1P2P3P7P11P12M1. try clear HP1P2P3P7P11P12M2. try clear HP1P2P3P7P11P12M3. try clear HP1P2P3P7P11P12M4. try clear HP1P2P3P7P11P12M5. try clear HP1P2P3P7P11P12M6. try clear HP1P2P3P7P11P12M7. try clear HP1P2P3P7P11P12m7. try clear HP1P2P3P7P11P12m6. try clear HP1P2P3P7P11P12m5. try clear HP1P2P3P7P11P12m4. try clear HP1P2P3P7P11P12m3. try clear HP1P2P3P7P11P12m2. try clear HP1P2P3P7P11P12m1. 

assert(HP2P7P11M : rk(P2 :: P7 :: P11 ::  nil) <= 3) by (solve_hyps_max HP2P7P11eq HP2P7P11M3).
assert(HP2P7P11m : rk(P2 :: P7 :: P11 ::  nil) >= 1) by (solve_hyps_min HP2P7P11eq HP2P7P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P7P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P7 :: P11 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P2P7P11 requis par la preuve de (?)P1P2P7P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P2P7P11 requis par la preuve de (?)P1P2P7P11 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P2P7P11 requis par la preuve de (?)P1P2P7P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P7P11m2 : rk(P1 :: P2 :: P7 :: P11 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P7 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P7 :: P11 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P2P7P11M3 : rk(P1 :: P2 :: P7 :: P11 :: nil) <= 3).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	try assert(HP11eq : rk(P11 :: nil) = 1) by (apply LP11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP11Mtmp : rk(P11 :: nil) <= 1) by (solve_hyps_max HP11eq HP11M1).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: P2 :: P7 :: nil) (P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P7 :: P11 :: nil) (P1 :: P2 :: P7 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P11 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P11 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P2 :: P7 :: nil) (P11 :: nil) (nil) 2 1 0 HP1P2P7Mtmp HP11Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P7P11m3 : rk(P1 :: P2 :: P7 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P11eq : rk(P1 :: P2 :: P11 :: nil) = 3) by (apply LP1P2P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P11mtmp : rk(P1 :: P2 :: P11 :: nil) >= 3) by (solve_hyps_min HP1P2P11eq HP1P2P11m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P11 :: nil) (P1 :: P2 :: P7 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P11 :: nil) (P1 :: P2 :: P7 :: P11 :: nil) 3 3 HP1P2P11mtmp Hcomp Hincl);apply HT.
}
try clear HP1P2P11M1. try clear HP1P2P11M2. try clear HP1P2P11M3. try clear HP1P2P11M4. try clear HP1P2P11M5. try clear HP1P2P11M6. try clear HP1P2P11M7. try clear HP1P2P11m7. try clear HP1P2P11m6. try clear HP1P2P11m5. try clear HP1P2P11m4. try clear HP1P2P11m3. try clear HP1P2P11m2. try clear HP1P2P11m1. 

assert(HP1P2P7P11M : rk(P1 :: P2 :: P7 :: P11 ::  nil) <= 4) by (solve_hyps_max HP1P2P7P11eq HP1P2P7P11M4).
assert(HP1P2P7P11m : rk(P1 :: P2 :: P7 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P2P7P11eq HP1P2P7P11m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP5P10P11 *)
(* dans la couche 0 *)
Lemma LP1P2P3P5P10P11P12 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 ::  nil) = 5.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P2P3P5P10P11P12 requis par la preuve de (?)P1P2P3P5P10P11P12 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P3P5P10P11P12 requis par la preuve de (?)P1P2P3P5P10P11P12 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P5P10P11P12 requis par la preuve de (?)P1P2P3P5P10P11P12 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P5P10P11P12 requis par la preuve de (?)P1P2P3P5P10P11P12 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P10P11P12m2 : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P10P11P12m3 : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P10P11P12m4 : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil) >= 4).
{
	try assert(HP1P2P3P5eq : rk(P1 :: P2 :: P3 :: P5 :: nil) = 4) by (apply LP1P2P3P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5mtmp : rk(P1 :: P2 :: P3 :: P5 :: nil) >= 4) by (solve_hyps_min HP1P2P3P5eq HP1P2P3P5m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P5 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P5 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil) 4 4 HP1P2P3P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P10P11P12m5 : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil) >= 5).
{
	try assert(HP1P2P3P5P11eq : rk(P1 :: P2 :: P3 :: P5 :: P11 :: nil) = 5) by (apply LP1P2P3P5P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5P11mtmp : rk(P1 :: P2 :: P3 :: P5 :: P11 :: nil) >= 5) by (solve_hyps_min HP1P2P3P5P11eq HP1P2P3P5P11m5).
	assert(Hcomp : 5 <= 5) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P5 :: P11 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P5 :: P11 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil) 5 5 HP1P2P3P5P11mtmp Hcomp Hincl);apply HT.
}
try clear HP1P2P3P5P11M1. try clear HP1P2P3P5P11M2. try clear HP1P2P3P5P11M3. try clear HP1P2P3P5P11M4. try clear HP1P2P3P5P11M5. try clear HP1P2P3P5P11M6. try clear HP1P2P3P5P11M7. try clear HP1P2P3P5P11m7. try clear HP1P2P3P5P11m6. try clear HP1P2P3P5P11m5. try clear HP1P2P3P5P11m4. try clear HP1P2P3P5P11m3. try clear HP1P2P3P5P11m2. try clear HP1P2P3P5P11m1. 

assert(HP1P2P3P5P10P11P12M : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 ::  nil) <= 7) by (solve_hyps_max HP1P2P3P5P10P11P12eq HP1P2P3P5P10P11P12M7).
assert(HP1P2P3P5P10P11P12m : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P5P10P11P12eq HP1P2P3P5P10P11P12m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP5P10P11 *)
(* dans la couche 0 *)
Lemma LP1P2P3P5P10P12 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P5 :: P10 :: P12 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P2P3P5P10P12 requis par la preuve de (?)P1P2P3P5P10P12 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P3P5P10P12 requis par la preuve de (?)P1P2P3P5P10P12 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P5P10P12 requis par la preuve de (?)P1P2P3P5P10P12 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P5P10P12 requis par la preuve de (?)P1P2P3P5P10P12 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P10P12m2 : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P10P12m3 : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P5P10P12m4 : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil) >= 4).
{
	try assert(HP1P2P3P5eq : rk(P1 :: P2 :: P3 :: P5 :: nil) = 4) by (apply LP1P2P3P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5mtmp : rk(P1 :: P2 :: P3 :: P5 :: nil) >= 4) by (solve_hyps_min HP1P2P3P5eq HP1P2P3P5m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P5 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P5 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil) 4 4 HP1P2P3P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P3P5P10P12M4 : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil) <= 4).
{
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	assert(HP2P3P12Mtmp : rk(P2 :: P3 :: P12 :: nil) <= 2) by (solve_hyps_max HP2P3P12eq HP2P3P12M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: P5 :: P10 :: nil) (P2 :: P3 :: P12 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil) (P1 :: P5 :: P10 :: P2 :: P3 :: P12 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P5 :: P10 :: P2 :: P3 :: P12 :: nil) ((P1 :: P5 :: P10 :: nil) ++ (P2 :: P3 :: P12 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P5 :: P10 :: nil) (P2 :: P3 :: P12 :: nil) (nil) 2 2 0 HP1P5P10Mtmp HP2P3P12Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P2P3P5P10P12M : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P12 ::  nil) <= 6) by (solve_hyps_max HP1P2P3P5P10P12eq HP1P2P3P5P10P12M6).
assert(HP1P2P3P5P10P12m : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P12 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P5P10P12eq HP1P2P3P5P10P12m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP5P10P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P5 :: P10 :: P11 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P5P10P11 requis par la preuve de (?)P5P10P11 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P5P10P11 requis par la preuve de (?)P5P10P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP5P10P11m2 : rk(P5 :: P10 :: P11 :: nil) >= 2).
{
	try assert(HP5P10eq : rk(P5 :: P10 :: nil) = 2) by (apply LP5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP5P10mtmp : rk(P5 :: P10 :: nil) >= 2) by (solve_hyps_min HP5P10eq HP5P10m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P5 :: P10 :: nil) (P5 :: P10 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P5 :: P10 :: nil) (P5 :: P10 :: P11 :: nil) 2 2 HP5P10mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP5P10P11m3 : rk(P5 :: P10 :: P11 :: nil) >= 3).
{
	try assert(HP1P2P3P5P10P12eq : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil) = 4) by (apply LP1P2P3P5P10P12 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5P10P12Mtmp : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil) <= 4) by (solve_hyps_max HP1P2P3P5P10P12eq HP1P2P3P5P10P12M4).
	try assert(HP1P2P3P5P10P11P12eq : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil) = 5) by (apply LP1P2P3P5P10P11P12 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P5P10P11P12mtmp : rk(P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil) >= 5) by (solve_hyps_min HP1P2P3P5P10P11P12eq HP1P2P3P5P10P11P12m5).
	try assert(HP5P10eq : rk(P5 :: P10 :: nil) = 2) by (apply LP5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP5P10mtmp : rk(P5 :: P10 :: nil) >= 2) by (solve_hyps_min HP5P10eq HP5P10m2).
	assert(Hincl : incl (P5 :: P10 :: nil) (list_inter (P5 :: P10 :: P11 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P5 :: P10 :: P11 :: P12 :: nil) (P5 :: P10 :: P11 :: P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P5 :: P10 :: P11 :: P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil) ((P5 :: P10 :: P11 :: nil) ++ (P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P5P10P11P12mtmp;try rewrite HT2 in HP1P2P3P5P10P11P12mtmp.
	assert(HT := rule_2 (P5 :: P10 :: P11 :: nil) (P1 :: P2 :: P3 :: P5 :: P10 :: P12 :: nil) (P5 :: P10 :: nil) 5 2 4 HP1P2P3P5P10P11P12mtmp HP5P10mtmp HP1P2P3P5P10P12Mtmp Hincl);apply HT.
}
try clear HP1P2P3P5P10P12M1. try clear HP1P2P3P5P10P12M2. try clear HP1P2P3P5P10P12M3. try clear HP1P2P3P5P10P12M4. try clear HP1P2P3P5P10P12M5. try clear HP1P2P3P5P10P12M6. try clear HP1P2P3P5P10P12M7. try clear HP1P2P3P5P10P12m7. try clear HP1P2P3P5P10P12m6. try clear HP1P2P3P5P10P12m5. try clear HP1P2P3P5P10P12m4. try clear HP1P2P3P5P10P12m3. try clear HP1P2P3P5P10P12m2. try clear HP1P2P3P5P10P12m1. try clear HP1P2P3P5P10P11P12M1. try clear HP1P2P3P5P10P11P12M2. try clear HP1P2P3P5P10P11P12M3. try clear HP1P2P3P5P10P11P12M4. try clear HP1P2P3P5P10P11P12M5. try clear HP1P2P3P5P10P11P12M6. try clear HP1P2P3P5P10P11P12M7. try clear HP1P2P3P5P10P11P12m7. try clear HP1P2P3P5P10P11P12m6. try clear HP1P2P3P5P10P11P12m5. try clear HP1P2P3P5P10P11P12m4. try clear HP1P2P3P5P10P11P12m3. try clear HP1P2P3P5P10P11P12m2. try clear HP1P2P3P5P10P11P12m1. 

assert(HP5P10P11M : rk(P5 :: P10 :: P11 ::  nil) <= 3) by (solve_hyps_max HP5P10P11eq HP5P10P11M3).
assert(HP5P10P11m : rk(P5 :: P10 :: P11 ::  nil) >= 1) by (solve_hyps_min HP5P10P11eq HP5P10P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P5P10P11 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P5 :: P10 :: P11 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P5P10P11 requis par la preuve de (?)P1P5P10P11 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P5P10P11 requis par la preuve de (?)P1P5P10P11 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P5P10P11 requis par la preuve de (?)P1P5P10P11 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P5P10P11m2 : rk(P1 :: P5 :: P10 :: P11 :: nil) >= 2).
{
	try assert(HP1P5eq : rk(P1 :: P5 :: nil) = 2) by (apply LP1P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5mtmp : rk(P1 :: P5 :: nil) >= 2) by (solve_hyps_min HP1P5eq HP1P5m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P5 :: nil) (P1 :: P5 :: P10 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P5 :: nil) (P1 :: P5 :: P10 :: P11 :: nil) 2 2 HP1P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P5P10P11M3 : rk(P1 :: P5 :: P10 :: P11 :: nil) <= 3).
{
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	try assert(HP11eq : rk(P11 :: nil) = 1) by (apply LP11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP11Mtmp : rk(P11 :: nil) <= 1) by (solve_hyps_max HP11eq HP11M1).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: P5 :: P10 :: nil) (P11 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P5 :: P10 :: P11 :: nil) (P1 :: P5 :: P10 :: P11 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P5 :: P10 :: P11 :: nil) ((P1 :: P5 :: P10 :: nil) ++ (P11 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P5 :: P10 :: nil) (P11 :: nil) (nil) 2 1 0 HP1P5P10Mtmp HP11Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P5P10P11m3 : rk(P1 :: P5 :: P10 :: P11 :: nil) >= 3).
{
	try assert(HP1P5P11eq : rk(P1 :: P5 :: P11 :: nil) = 3) by (apply LP1P5P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P11mtmp : rk(P1 :: P5 :: P11 :: nil) >= 3) by (solve_hyps_min HP1P5P11eq HP1P5P11m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P5 :: P11 :: nil) (P1 :: P5 :: P10 :: P11 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P5 :: P11 :: nil) (P1 :: P5 :: P10 :: P11 :: nil) 3 3 HP1P5P11mtmp Hcomp Hincl);apply HT.
}
try clear HP1P5P11M1. try clear HP1P5P11M2. try clear HP1P5P11M3. try clear HP1P5P11M4. try clear HP1P5P11M5. try clear HP1P5P11M6. try clear HP1P5P11M7. try clear HP1P5P11m7. try clear HP1P5P11m6. try clear HP1P5P11m5. try clear HP1P5P11m4. try clear HP1P5P11m3. try clear HP1P5P11m2. try clear HP1P5P11m1. 

assert(HP1P5P10P11M : rk(P1 :: P5 :: P10 :: P11 ::  nil) <= 4) by (solve_hyps_max HP1P5P10P11eq HP1P5P10P11M4).
assert(HP1P5P10P11m : rk(P1 :: P5 :: P10 :: P11 ::  nil) >= 1) by (solve_hyps_min HP1P5P10P11eq HP1P5P10P11m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP12 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P12 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP12M : rk(P12 ::  nil) <= 1) by (solve_hyps_max HP12eq HP12M1).
assert(HP12m : rk(P12 ::  nil) >= 1) by (solve_hyps_min HP12eq HP12m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP2P12 *)
(* dans la couche 0 *)
Lemma LP2P7P8P12 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P7 :: P8 :: P12 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P7P8P12 requis par la preuve de (?)P2P7P8P12 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P7P8P12 requis par la preuve de (?)P2P7P8P12 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 2 : pour P7P8P12 requis par la preuve de (?)P2P7P8P12 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P2P7P8P12 requis par la preuve de (?)P2P7P8P12 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP2P7P8P12M3 : rk(P2 :: P7 :: P8 :: P12 :: nil) <= 3).
{
	try assert(HP2eq : rk(P2 :: nil) = 1) by (apply LP2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2Mtmp : rk(P2 :: nil) <= 1) by (solve_hyps_max HP2eq HP2M1).
	assert(HP7P8P12Mtmp : rk(P7 :: P8 :: P12 :: nil) <= 2) by (solve_hyps_max HP7P8P12eq HP7P8P12M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P2 :: nil) (P7 :: P8 :: P12 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P7 :: P8 :: P12 :: nil) (P2 :: P7 :: P8 :: P12 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P7 :: P8 :: P12 :: nil) ((P2 :: nil) ++ (P7 :: P8 :: P12 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P2 :: nil) (P7 :: P8 :: P12 :: nil) (nil) 1 2 0 HP2Mtmp HP7P8P12Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P7P8P12m2 : rk(P2 :: P7 :: P8 :: P12 :: nil) >= 2).
{
	try assert(HP2P7eq : rk(P2 :: P7 :: nil) = 2) by (apply LP2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7mtmp : rk(P2 :: P7 :: nil) >= 2) by (solve_hyps_min HP2P7eq HP2P7m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P7 :: nil) (P2 :: P7 :: P8 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P7 :: nil) (P2 :: P7 :: P8 :: P12 :: nil) 2 2 HP2P7mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P7P8P12m3 : rk(P2 :: P7 :: P8 :: P12 :: nil) >= 3).
{
	try assert(HP2P7P8eq : rk(P2 :: P7 :: P8 :: nil) = 3) by (apply LP2P7P8 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7P8mtmp : rk(P2 :: P7 :: P8 :: nil) >= 3) by (solve_hyps_min HP2P7P8eq HP2P7P8m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P2 :: P7 :: P8 :: nil) (P2 :: P7 :: P8 :: P12 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P7 :: P8 :: nil) (P2 :: P7 :: P8 :: P12 :: nil) 3 3 HP2P7P8mtmp Hcomp Hincl);apply HT.
}


assert(HP2P7P8P12M : rk(P2 :: P7 :: P8 :: P12 ::  nil) <= 4) by (solve_hyps_max HP2P7P8P12eq HP2P7P8P12M4).
assert(HP2P7P8P12m : rk(P2 :: P7 :: P8 :: P12 ::  nil) >= 1) by (solve_hyps_min HP2P7P8P12eq HP2P7P8P12m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P12 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P12 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 2 : pour P2P12 requis par la preuve de (?)P2P12 pour la règle 2  *)
(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 5*)
assert(HP2P12m2 : rk(P2 :: P12 :: nil) >= 2).
{
	assert(HP7P8P12Mtmp : rk(P7 :: P8 :: P12 :: nil) <= 2) by (solve_hyps_max HP7P8P12eq HP7P8P12M2).
	try assert(HP2P7P8P12eq : rk(P2 :: P7 :: P8 :: P12 :: nil) = 3) by (apply LP2P7P8P12 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7P8P12mtmp : rk(P2 :: P7 :: P8 :: P12 :: nil) >= 3) by (solve_hyps_min HP2P7P8P12eq HP2P7P8P12m3).
	try assert(HP12eq : rk(P12 :: nil) = 1) by (apply LP12 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP12mtmp : rk(P12 :: nil) >= 1) by (solve_hyps_min HP12eq HP12m1).
	assert(Hincl : incl (P12 :: nil) (list_inter (P2 :: P12 :: nil) (P7 :: P8 :: P12 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P7 :: P8 :: P12 :: nil) (P2 :: P12 :: P7 :: P8 :: P12 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P12 :: P7 :: P8 :: P12 :: nil) ((P2 :: P12 :: nil) ++ (P7 :: P8 :: P12 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP2P7P8P12mtmp;try rewrite HT2 in HP2P7P8P12mtmp.
	assert(HT := rule_2 (P2 :: P12 :: nil) (P7 :: P8 :: P12 :: nil) (P12 :: nil) 3 1 2 HP2P7P8P12mtmp HP12mtmp HP7P8P12Mtmp Hincl);apply HT.
}
try clear HP2P7P8P12M1. try clear HP2P7P8P12M2. try clear HP2P7P8P12M3. try clear HP2P7P8P12M4. try clear HP2P7P8P12M5. try clear HP2P7P8P12M6. try clear HP2P7P8P12M7. try clear HP2P7P8P12m7. try clear HP2P7P8P12m6. try clear HP2P7P8P12m5. try clear HP2P7P8P12m4. try clear HP2P7P8P12m3. try clear HP2P7P8P12m2. try clear HP2P7P8P12m1. 

assert(HP2P12M : rk(P2 :: P12 ::  nil) <= 2) by (solve_hyps_max HP2P12eq HP2P12M2).
assert(HP2P12m : rk(P2 :: P12 ::  nil) >= 1) by (solve_hyps_min HP2P12eq HP2P12m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP13 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P13 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP13M : rk(P13 ::  nil) <= 1) by (solve_hyps_max HP13eq HP13M1).
assert(HP13m : rk(P13 ::  nil) >= 1) by (solve_hyps_min HP13eq HP13m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP2P13 *)
(* dans la couche 0 *)
Lemma LP2P7P9P13 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P7 :: P9 :: P13 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P7P9P13 requis par la preuve de (?)P2P7P9P13 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P7P9P13 requis par la preuve de (?)P2P7P9P13 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 2 : pour P7P9P13 requis par la preuve de (?)P2P7P9P13 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P2P7P9P13 requis par la preuve de (?)P2P7P9P13 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP2P7P9P13M3 : rk(P2 :: P7 :: P9 :: P13 :: nil) <= 3).
{
	try assert(HP2eq : rk(P2 :: nil) = 1) by (apply LP2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2Mtmp : rk(P2 :: nil) <= 1) by (solve_hyps_max HP2eq HP2M1).
	assert(HP7P9P13Mtmp : rk(P7 :: P9 :: P13 :: nil) <= 2) by (solve_hyps_max HP7P9P13eq HP7P9P13M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P2 :: nil) (P7 :: P9 :: P13 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P7 :: P9 :: P13 :: nil) (P2 :: P7 :: P9 :: P13 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P7 :: P9 :: P13 :: nil) ((P2 :: nil) ++ (P7 :: P9 :: P13 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P2 :: nil) (P7 :: P9 :: P13 :: nil) (nil) 1 2 0 HP2Mtmp HP7P9P13Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P7P9P13m2 : rk(P2 :: P7 :: P9 :: P13 :: nil) >= 2).
{
	try assert(HP2P7eq : rk(P2 :: P7 :: nil) = 2) by (apply LP2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7mtmp : rk(P2 :: P7 :: nil) >= 2) by (solve_hyps_min HP2P7eq HP2P7m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P7 :: nil) (P2 :: P7 :: P9 :: P13 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P7 :: nil) (P2 :: P7 :: P9 :: P13 :: nil) 2 2 HP2P7mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P7P9P13m3 : rk(P2 :: P7 :: P9 :: P13 :: nil) >= 3).
{
	try assert(HP2P7P9eq : rk(P2 :: P7 :: P9 :: nil) = 3) by (apply LP2P7P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7P9mtmp : rk(P2 :: P7 :: P9 :: nil) >= 3) by (solve_hyps_min HP2P7P9eq HP2P7P9m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P2 :: P7 :: P9 :: nil) (P2 :: P7 :: P9 :: P13 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P7 :: P9 :: nil) (P2 :: P7 :: P9 :: P13 :: nil) 3 3 HP2P7P9mtmp Hcomp Hincl);apply HT.
}


assert(HP2P7P9P13M : rk(P2 :: P7 :: P9 :: P13 ::  nil) <= 4) by (solve_hyps_max HP2P7P9P13eq HP2P7P9P13M4).
assert(HP2P7P9P13m : rk(P2 :: P7 :: P9 :: P13 ::  nil) >= 1) by (solve_hyps_min HP2P7P9P13eq HP2P7P9P13m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P13 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P13 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 2 : pour P2P13 requis par la preuve de (?)P2P13 pour la règle 2  *)
(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 5*)
assert(HP2P13m2 : rk(P2 :: P13 :: nil) >= 2).
{
	assert(HP7P9P13Mtmp : rk(P7 :: P9 :: P13 :: nil) <= 2) by (solve_hyps_max HP7P9P13eq HP7P9P13M2).
	try assert(HP2P7P9P13eq : rk(P2 :: P7 :: P9 :: P13 :: nil) = 3) by (apply LP2P7P9P13 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7P9P13mtmp : rk(P2 :: P7 :: P9 :: P13 :: nil) >= 3) by (solve_hyps_min HP2P7P9P13eq HP2P7P9P13m3).
	try assert(HP13eq : rk(P13 :: nil) = 1) by (apply LP13 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP13mtmp : rk(P13 :: nil) >= 1) by (solve_hyps_min HP13eq HP13m1).
	assert(Hincl : incl (P13 :: nil) (list_inter (P2 :: P13 :: nil) (P7 :: P9 :: P13 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P7 :: P9 :: P13 :: nil) (P2 :: P13 :: P7 :: P9 :: P13 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P13 :: P7 :: P9 :: P13 :: nil) ((P2 :: P13 :: nil) ++ (P7 :: P9 :: P13 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP2P7P9P13mtmp;try rewrite HT2 in HP2P7P9P13mtmp.
	assert(HT := rule_2 (P2 :: P13 :: nil) (P7 :: P9 :: P13 :: nil) (P13 :: nil) 3 1 2 HP2P7P9P13mtmp HP13mtmp HP7P9P13Mtmp Hincl);apply HT.
}
try clear HP2P7P9P13M1. try clear HP2P7P9P13M2. try clear HP2P7P9P13M3. try clear HP2P7P9P13M4. try clear HP2P7P9P13M5. try clear HP2P7P9P13M6. try clear HP2P7P9P13M7. try clear HP2P7P9P13m7. try clear HP2P7P9P13m6. try clear HP2P7P9P13m5. try clear HP2P7P9P13m4. try clear HP2P7P9P13m3. try clear HP2P7P9P13m2. try clear HP2P7P9P13m1. 

assert(HP2P13M : rk(P2 :: P13 ::  nil) <= 2) by (solve_hyps_max HP2P13eq HP2P13M2).
assert(HP2P13m : rk(P2 :: P13 ::  nil) >= 1) by (solve_hyps_min HP2P13eq HP2P13m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P4P13 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P4P13M : rk(P2 :: P4 :: P13 ::  nil) <= 3) by (solve_hyps_max HP2P4P13eq HP2P4P13M3).
assert(HP2P4P13m : rk(P2 :: P4 :: P13 ::  nil) >= 1) by (solve_hyps_min HP2P4P13eq HP2P4P13m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP14 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P14 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP14M : rk(P14 ::  nil) <= 1) by (solve_hyps_max HP14eq HP14M1).
assert(HP14m : rk(P14 ::  nil) >= 1) by (solve_hyps_min HP14eq HP14m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP2P14 *)
(* dans la couche 0 *)
Lemma LP2P7P10P14 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P7 :: P10 :: P14 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P7P10P14 requis par la preuve de (?)P2P7P10P14 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P7P10P14 requis par la preuve de (?)P2P7P10P14 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 2 : pour P7P10P14 requis par la preuve de (?)P2P7P10P14 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P2P7P10P14 requis par la preuve de (?)P2P7P10P14 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP2P7P10P14M3 : rk(P2 :: P7 :: P10 :: P14 :: nil) <= 3).
{
	try assert(HP2eq : rk(P2 :: nil) = 1) by (apply LP2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2Mtmp : rk(P2 :: nil) <= 1) by (solve_hyps_max HP2eq HP2M1).
	assert(HP7P10P14Mtmp : rk(P7 :: P10 :: P14 :: nil) <= 2) by (solve_hyps_max HP7P10P14eq HP7P10P14M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P2 :: nil) (P7 :: P10 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P7 :: P10 :: P14 :: nil) (P2 :: P7 :: P10 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P7 :: P10 :: P14 :: nil) ((P2 :: nil) ++ (P7 :: P10 :: P14 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P2 :: nil) (P7 :: P10 :: P14 :: nil) (nil) 1 2 0 HP2Mtmp HP7P10P14Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P7P10P14m2 : rk(P2 :: P7 :: P10 :: P14 :: nil) >= 2).
{
	try assert(HP2P7eq : rk(P2 :: P7 :: nil) = 2) by (apply LP2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7mtmp : rk(P2 :: P7 :: nil) >= 2) by (solve_hyps_min HP2P7eq HP2P7m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P7 :: nil) (P2 :: P7 :: P10 :: P14 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P7 :: nil) (P2 :: P7 :: P10 :: P14 :: nil) 2 2 HP2P7mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P7P10P14m3 : rk(P2 :: P7 :: P10 :: P14 :: nil) >= 3).
{
	try assert(HP2P7P10eq : rk(P2 :: P7 :: P10 :: nil) = 3) by (apply LP2P7P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7P10mtmp : rk(P2 :: P7 :: P10 :: nil) >= 3) by (solve_hyps_min HP2P7P10eq HP2P7P10m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P2 :: P7 :: P10 :: nil) (P2 :: P7 :: P10 :: P14 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P7 :: P10 :: nil) (P2 :: P7 :: P10 :: P14 :: nil) 3 3 HP2P7P10mtmp Hcomp Hincl);apply HT.
}


assert(HP2P7P10P14M : rk(P2 :: P7 :: P10 :: P14 ::  nil) <= 4) by (solve_hyps_max HP2P7P10P14eq HP2P7P10P14M4).
assert(HP2P7P10P14m : rk(P2 :: P7 :: P10 :: P14 ::  nil) >= 1) by (solve_hyps_min HP2P7P10P14eq HP2P7P10P14m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P14 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P14 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 2 : pour P2P14 requis par la preuve de (?)P2P14 pour la règle 2  *)
(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 5*)
assert(HP2P14m2 : rk(P2 :: P14 :: nil) >= 2).
{
	assert(HP7P10P14Mtmp : rk(P7 :: P10 :: P14 :: nil) <= 2) by (solve_hyps_max HP7P10P14eq HP7P10P14M2).
	try assert(HP2P7P10P14eq : rk(P2 :: P7 :: P10 :: P14 :: nil) = 3) by (apply LP2P7P10P14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7P10P14mtmp : rk(P2 :: P7 :: P10 :: P14 :: nil) >= 3) by (solve_hyps_min HP2P7P10P14eq HP2P7P10P14m3).
	try assert(HP14eq : rk(P14 :: nil) = 1) by (apply LP14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP14mtmp : rk(P14 :: nil) >= 1) by (solve_hyps_min HP14eq HP14m1).
	assert(Hincl : incl (P14 :: nil) (list_inter (P2 :: P14 :: nil) (P7 :: P10 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P7 :: P10 :: P14 :: nil) (P2 :: P14 :: P7 :: P10 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P14 :: P7 :: P10 :: P14 :: nil) ((P2 :: P14 :: nil) ++ (P7 :: P10 :: P14 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP2P7P10P14mtmp;try rewrite HT2 in HP2P7P10P14mtmp.
	assert(HT := rule_2 (P2 :: P14 :: nil) (P7 :: P10 :: P14 :: nil) (P14 :: nil) 3 1 2 HP2P7P10P14mtmp HP14mtmp HP7P10P14Mtmp Hincl);apply HT.
}
try clear HP2P7P10P14M1. try clear HP2P7P10P14M2. try clear HP2P7P10P14M3. try clear HP2P7P10P14M4. try clear HP2P7P10P14M5. try clear HP2P7P10P14M6. try clear HP2P7P10P14M7. try clear HP2P7P10P14m7. try clear HP2P7P10P14m6. try clear HP2P7P10P14m5. try clear HP2P7P10P14m4. try clear HP2P7P10P14m3. try clear HP2P7P10P14m2. try clear HP2P7P10P14m1. 

assert(HP2P14M : rk(P2 :: P14 ::  nil) <= 2) by (solve_hyps_max HP2P14eq HP2P14M2).
assert(HP2P14m : rk(P2 :: P14 ::  nil) >= 1) by (solve_hyps_min HP2P14eq HP2P14m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP5P14 *)
(* dans constructLemma(), requis par LP5P7P10P14 *)
(* dans la couche 0 *)
Lemma LP1P5P7P10P14 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P5 :: P7 :: P10 :: P14 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P5P7P10P14 requis par la preuve de (?)P1P5P7P10P14 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P5P7P10P14 requis par la preuve de (?)P1P5P7P10P14 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P5P7P10P14 requis par la preuve de (?)P1P2P5P7P10P14 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P5P7P10P14 requis par la preuve de (?)P5P7P10P14 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP5P7P10P14M3 : rk(P5 :: P7 :: P10 :: P14 :: nil) <= 3).
{
	try assert(HP5eq : rk(P5 :: nil) = 1) by (apply LP5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP5Mtmp : rk(P5 :: nil) <= 1) by (solve_hyps_max HP5eq HP5M1).
	assert(HP7P10P14Mtmp : rk(P7 :: P10 :: P14 :: nil) <= 2) by (solve_hyps_max HP7P10P14eq HP7P10P14M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P5 :: nil) (P7 :: P10 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P5 :: P7 :: P10 :: P14 :: nil) (P5 :: P7 :: P10 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P5 :: P7 :: P10 :: P14 :: nil) ((P5 :: nil) ++ (P7 :: P10 :: P14 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P5 :: nil) (P7 :: P10 :: P14 :: nil) (nil) 1 2 0 HP5Mtmp HP7P10P14Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P5P7P10P14 requis par la preuve de (?)P1P2P5P7P10P14 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P5P7P10P14 requis par la preuve de (?)P1P2P5P7P10P14 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P5P7P10P14 requis par la preuve de (?)P1P2P5P7P10P14 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P7P10P14m2 : rk(P1 :: P2 :: P5 :: P7 :: P10 :: P14 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: P14 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: P14 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P5P7P10P14m3 : rk(P1 :: P2 :: P5 :: P7 :: P10 :: P14 :: nil) >= 3).
{
	try assert(HP1P2P5eq : rk(P1 :: P2 :: P5 :: nil) = 3) by (apply LP1P2P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P5mtmp : rk(P1 :: P2 :: P5 :: nil) >= 3) by (solve_hyps_min HP1P2P5eq HP1P2P5m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: P14 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P5 :: nil) (P1 :: P2 :: P5 :: P7 :: P10 :: P14 :: nil) 3 3 HP1P2P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 4*)
assert(HP1P2P5P7P10P14M4 : rk(P1 :: P2 :: P5 :: P7 :: P10 :: P14 :: nil) <= 4).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	assert(HP5P7P10P14Mtmp : rk(P5 :: P7 :: P10 :: P14 :: nil) <= 3) by (solve_hyps_max HP5P7P10P14eq HP5P7P10P14M3).
	try assert(HP7eq : rk(P7 :: nil) = 1) by (apply LP7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP7mtmp : rk(P7 :: nil) >= 1) by (solve_hyps_min HP7eq HP7m1).
	assert(Hincl : incl (P7 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P5 :: P7 :: P10 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P7 :: P10 :: P14 :: nil) (P1 :: P2 :: P7 :: P5 :: P7 :: P10 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P5 :: P7 :: P10 :: P14 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P5 :: P7 :: P10 :: P14 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P2 :: P7 :: nil) (P5 :: P7 :: P10 :: P14 :: nil) (P7 :: nil) 2 3 1 HP1P2P7Mtmp HP5P7P10P14Mtmp HP7mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P5P7P10P14 requis par la preuve de (?)P1P5P7P10P14 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P5P7P10P14 requis par la preuve de (?)P1P5P7P10P14 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P7P10P14 requis par la preuve de (?)P1P5P7P10P14 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P7P10P14 requis par la preuve de (?)P1P7P10P14 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P7P10P14M3 : rk(P1 :: P7 :: P10 :: P14 :: nil) <= 3).
{
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1Mtmp : rk(P1 :: nil) <= 1) by (solve_hyps_max HP1eq HP1M1).
	assert(HP7P10P14Mtmp : rk(P7 :: P10 :: P14 :: nil) <= 2) by (solve_hyps_max HP7P10P14eq HP7P10P14M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: nil) (P7 :: P10 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P7 :: P10 :: P14 :: nil) (P1 :: P7 :: P10 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P7 :: P10 :: P14 :: nil) ((P1 :: nil) ++ (P7 :: P10 :: P14 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: nil) (P7 :: P10 :: P14 :: nil) (nil) 1 2 0 HP1Mtmp HP7P10P14Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P5P7P10P14 requis par la preuve de (?)P1P5P7P10P14 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P5P7P10P14M4 : rk(P1 :: P5 :: P7 :: P10 :: P14 :: nil) <= 4).
{
	try assert(HP5eq : rk(P5 :: nil) = 1) by (apply LP5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP5Mtmp : rk(P5 :: nil) <= 1) by (solve_hyps_max HP5eq HP5M1).
	assert(HP1P7P10P14Mtmp : rk(P1 :: P7 :: P10 :: P14 :: nil) <= 3) by (solve_hyps_max HP1P7P10P14eq HP1P7P10P14M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P5 :: nil) (P1 :: P7 :: P10 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P5 :: P7 :: P10 :: P14 :: nil) (P5 :: P1 :: P7 :: P10 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P5 :: P1 :: P7 :: P10 :: P14 :: nil) ((P5 :: nil) ++ (P1 :: P7 :: P10 :: P14 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P5 :: nil) (P1 :: P7 :: P10 :: P14 :: nil) (nil) 1 3 0 HP5Mtmp HP1P7P10P14Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}
try clear HP1P7P10P14M1. try clear HP1P7P10P14M2. try clear HP1P7P10P14M3. try clear HP1P7P10P14M4. try clear HP1P7P10P14M5. try clear HP1P7P10P14M6. try clear HP1P7P10P14M7. try clear HP1P7P10P14m7. try clear HP1P7P10P14m6. try clear HP1P7P10P14m5. try clear HP1P7P10P14m4. try clear HP1P7P10P14m3. try clear HP1P7P10P14m2. try clear HP1P7P10P14m1. 

(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P5P7P10P14m2 : rk(P1 :: P5 :: P7 :: P10 :: P14 :: nil) >= 2).
{
	try assert(HP1P5eq : rk(P1 :: P5 :: nil) = 2) by (apply LP1P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5mtmp : rk(P1 :: P5 :: nil) >= 2) by (solve_hyps_min HP1P5eq HP1P5m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P5 :: nil) (P1 :: P5 :: P7 :: P10 :: P14 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P5 :: nil) (P1 :: P5 :: P7 :: P10 :: P14 :: nil) 2 2 HP1P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 5 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P5 :: P7 :: P10 :: P14 ::  AiB : P1 :: P7 ::  A : P1 :: P2 :: P7 ::  *)
assert(HP1P5P7P10P14m3 : rk(P1 :: P5 :: P7 :: P10 :: P14 :: nil) >= 3).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	assert(HP1P2P5P7P10P14mtmp : rk(P1 :: P2 :: P5 :: P7 :: P10 :: P14 :: nil) >= 3) by (solve_hyps_min HP1P2P5P7P10P14eq HP1P2P5P7P10P14m3).
	try assert(HP1P7eq : rk(P1 :: P7 :: nil) = 2) by (apply LP1P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P7mtmp : rk(P1 :: P7 :: nil) >= 2) by (solve_hyps_min HP1P7eq HP1P7m2).
	assert(Hincl : incl (P1 :: P7 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P1 :: P5 :: P7 :: P10 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P7 :: P10 :: P14 :: nil) (P1 :: P2 :: P7 :: P1 :: P5 :: P7 :: P10 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P1 :: P5 :: P7 :: P10 :: P14 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P1 :: P5 :: P7 :: P10 :: P14 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P5P7P10P14mtmp;try rewrite HT2 in HP1P2P5P7P10P14mtmp.
	assert(HT := rule_4 (P1 :: P2 :: P7 :: nil) (P1 :: P5 :: P7 :: P10 :: P14 :: nil) (P1 :: P7 :: nil) 3 2 2 HP1P2P5P7P10P14mtmp HP1P7mtmp HP1P2P7Mtmp Hincl); apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 4*)
assert(HP1P5P7P10P14M3 : rk(P1 :: P5 :: P7 :: P10 :: P14 :: nil) <= 3).
{
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	assert(HP7P10P14Mtmp : rk(P7 :: P10 :: P14 :: nil) <= 2) by (solve_hyps_max HP7P10P14eq HP7P10P14M2).
	try assert(HP10eq : rk(P10 :: nil) = 1) by (apply LP10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP10mtmp : rk(P10 :: nil) >= 1) by (solve_hyps_min HP10eq HP10m1).
	assert(Hincl : incl (P10 :: nil) (list_inter (P1 :: P5 :: P10 :: nil) (P7 :: P10 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P5 :: P7 :: P10 :: P14 :: nil) (P1 :: P5 :: P10 :: P7 :: P10 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P5 :: P10 :: P7 :: P10 :: P14 :: nil) ((P1 :: P5 :: P10 :: nil) ++ (P7 :: P10 :: P14 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P5 :: P10 :: nil) (P7 :: P10 :: P14 :: nil) (P10 :: nil) 2 2 1 HP1P5P10Mtmp HP7P10P14Mtmp HP10mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P5P7P10P14M : rk(P1 :: P5 :: P7 :: P10 :: P14 ::  nil) <= 5) by (solve_hyps_max HP1P5P7P10P14eq HP1P5P7P10P14M5).
assert(HP1P5P7P10P14m : rk(P1 :: P5 :: P7 :: P10 :: P14 ::  nil) >= 1) by (solve_hyps_min HP1P5P7P10P14eq HP1P5P7P10P14m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP5P7P10P14 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P5 :: P7 :: P10 :: P14 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P5P7P10P14 requis par la preuve de (?)P5P7P10P14 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 5 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P5 :: P7 :: P10 :: P14 ::  AiB : P7 ::  A : P1 :: P2 :: P7 ::  *)
assert(HP5P7P10P14m2 : rk(P5 :: P7 :: P10 :: P14 :: nil) >= 2).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	assert(HP1P2P5P7P10P14mtmp : rk(P1 :: P2 :: P5 :: P7 :: P10 :: P14 :: nil) >= 3) by (solve_hyps_min HP1P2P5P7P10P14eq HP1P2P5P7P10P14m3).
	try assert(HP7eq : rk(P7 :: nil) = 1) by (apply LP7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP7mtmp : rk(P7 :: nil) >= 1) by (solve_hyps_min HP7eq HP7m1).
	assert(Hincl : incl (P7 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P5 :: P7 :: P10 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P5 :: P7 :: P10 :: P14 :: nil) (P1 :: P2 :: P7 :: P5 :: P7 :: P10 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P5 :: P7 :: P10 :: P14 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P5 :: P7 :: P10 :: P14 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P5P7P10P14mtmp;try rewrite HT2 in HP1P2P5P7P10P14mtmp.
	assert(HT := rule_4 (P1 :: P2 :: P7 :: nil) (P5 :: P7 :: P10 :: P14 :: nil) (P7 :: nil) 3 1 2 HP1P2P5P7P10P14mtmp HP7mtmp HP1P2P7Mtmp Hincl); apply HT.
}
try clear HP1P2P5P7P10P14M1. try clear HP1P2P5P7P10P14M2. try clear HP1P2P5P7P10P14M3. try clear HP1P2P5P7P10P14M4. try clear HP1P2P5P7P10P14M5. try clear HP1P2P5P7P10P14M6. try clear HP1P2P5P7P10P14M7. try clear HP1P2P5P7P10P14m7. try clear HP1P2P5P7P10P14m6. try clear HP1P2P5P7P10P14m5. try clear HP1P2P5P7P10P14m4. try clear HP1P2P5P7P10P14m3. try clear HP1P2P5P7P10P14m2. try clear HP1P2P5P7P10P14m1. 

(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P5 :: P7 :: P10 :: P14 ::  AiB : P5 :: P10 ::  A : P1 :: P5 :: P10 ::  *)
assert(HP5P7P10P14m3 : rk(P5 :: P7 :: P10 :: P14 :: nil) >= 3).
{
	try assert(HP1P5P10eq : rk(P1 :: P5 :: P10 :: nil) = 2) by (apply LP1P5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P10Mtmp : rk(P1 :: P5 :: P10 :: nil) <= 2) by (solve_hyps_max HP1P5P10eq HP1P5P10M2).
	try assert(HP1P5P7P10P14eq : rk(P1 :: P5 :: P7 :: P10 :: P14 :: nil) = 3) by (apply LP1P5P7P10P14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P5P7P10P14mtmp : rk(P1 :: P5 :: P7 :: P10 :: P14 :: nil) >= 3) by (solve_hyps_min HP1P5P7P10P14eq HP1P5P7P10P14m3).
	try assert(HP5P10eq : rk(P5 :: P10 :: nil) = 2) by (apply LP5P10 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP5P10mtmp : rk(P5 :: P10 :: nil) >= 2) by (solve_hyps_min HP5P10eq HP5P10m2).
	assert(Hincl : incl (P5 :: P10 :: nil) (list_inter (P1 :: P5 :: P10 :: nil) (P5 :: P7 :: P10 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P5 :: P7 :: P10 :: P14 :: nil) (P1 :: P5 :: P10 :: P5 :: P7 :: P10 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P5 :: P10 :: P5 :: P7 :: P10 :: P14 :: nil) ((P1 :: P5 :: P10 :: nil) ++ (P5 :: P7 :: P10 :: P14 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P5P7P10P14mtmp;try rewrite HT2 in HP1P5P7P10P14mtmp.
	assert(HT := rule_4 (P1 :: P5 :: P10 :: nil) (P5 :: P7 :: P10 :: P14 :: nil) (P5 :: P10 :: nil) 3 2 2 HP1P5P7P10P14mtmp HP5P10mtmp HP1P5P10Mtmp Hincl); apply HT.
}
try clear HP1P5P7P10P14M1. try clear HP1P5P7P10P14M2. try clear HP1P5P7P10P14M3. try clear HP1P5P7P10P14M4. try clear HP1P5P7P10P14M5. try clear HP1P5P7P10P14M6. try clear HP1P5P7P10P14M7. try clear HP1P5P7P10P14m7. try clear HP1P5P7P10P14m6. try clear HP1P5P7P10P14m5. try clear HP1P5P7P10P14m4. try clear HP1P5P7P10P14m3. try clear HP1P5P7P10P14m2. try clear HP1P5P7P10P14m1. 

assert(HP5P7P10P14M : rk(P5 :: P7 :: P10 :: P14 ::  nil) <= 4) by (solve_hyps_max HP5P7P10P14eq HP5P7P10P14M4).
assert(HP5P7P10P14m : rk(P5 :: P7 :: P10 :: P14 ::  nil) >= 1) by (solve_hyps_min HP5P7P10P14eq HP5P7P10P14m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP5P14 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P5 :: P14 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 2 : pour P5P14 requis par la preuve de (?)P5P14 pour la règle 2  *)
(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 5*)
assert(HP5P14m2 : rk(P5 :: P14 :: nil) >= 2).
{
	assert(HP7P10P14Mtmp : rk(P7 :: P10 :: P14 :: nil) <= 2) by (solve_hyps_max HP7P10P14eq HP7P10P14M2).
	try assert(HP5P7P10P14eq : rk(P5 :: P7 :: P10 :: P14 :: nil) = 3) by (apply LP5P7P10P14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP5P7P10P14mtmp : rk(P5 :: P7 :: P10 :: P14 :: nil) >= 3) by (solve_hyps_min HP5P7P10P14eq HP5P7P10P14m3).
	try assert(HP14eq : rk(P14 :: nil) = 1) by (apply LP14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP14mtmp : rk(P14 :: nil) >= 1) by (solve_hyps_min HP14eq HP14m1).
	assert(Hincl : incl (P14 :: nil) (list_inter (P5 :: P14 :: nil) (P7 :: P10 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P5 :: P7 :: P10 :: P14 :: nil) (P5 :: P14 :: P7 :: P10 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P5 :: P14 :: P7 :: P10 :: P14 :: nil) ((P5 :: P14 :: nil) ++ (P7 :: P10 :: P14 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP5P7P10P14mtmp;try rewrite HT2 in HP5P7P10P14mtmp.
	assert(HT := rule_2 (P5 :: P14 :: nil) (P7 :: P10 :: P14 :: nil) (P14 :: nil) 3 1 2 HP5P7P10P14mtmp HP14mtmp HP7P10P14Mtmp Hincl);apply HT.
}
try clear HP5P7P10P14M1. try clear HP5P7P10P14M2. try clear HP5P7P10P14M3. try clear HP5P7P10P14M4. try clear HP5P7P10P14M5. try clear HP5P7P10P14M6. try clear HP5P7P10P14M7. try clear HP5P7P10P14m7. try clear HP5P7P10P14m6. try clear HP5P7P10P14m5. try clear HP5P7P10P14m4. try clear HP5P7P10P14m3. try clear HP5P7P10P14m2. try clear HP5P7P10P14m1. 

assert(HP5P14M : rk(P5 :: P14 ::  nil) <= 2) by (solve_hyps_max HP5P14eq HP5P14M2).
assert(HP5P14m : rk(P5 :: P14 ::  nil) >= 1) by (solve_hyps_min HP5P14eq HP5P14m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P5P14 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P5P14M : rk(P2 :: P5 :: P14 ::  nil) <= 3) by (solve_hyps_max HP2P5P14eq HP2P5P14M3).
assert(HP2P5P14m : rk(P2 :: P5 :: P14 ::  nil) >= 1) by (solve_hyps_min HP2P5P14eq HP2P5P14m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P3P5P14 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 :: P5 :: P14 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P3P5P14 requis par la preuve de (?)P2P3P5P14 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P3P5P14 requis par la preuve de (?)P2P3P5P14 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P2P3P5P14 requis par la preuve de (?)P2P3P5P14 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP2P3P5P14M3 : rk(P2 :: P3 :: P5 :: P14 :: nil) <= 3).
{
	try assert(HP3eq : rk(P3 :: nil) = 1) by (apply LP3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3Mtmp : rk(P3 :: nil) <= 1) by (solve_hyps_max HP3eq HP3M1).
	try assert(HP2P5P14eq : rk(P2 :: P5 :: P14 :: nil) = 2) by (apply LP2P5P14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P5P14Mtmp : rk(P2 :: P5 :: P14 :: nil) <= 2) by (solve_hyps_max HP2P5P14eq HP2P5P14M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P3 :: nil) (P2 :: P5 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P3 :: P5 :: P14 :: nil) (P3 :: P2 :: P5 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P3 :: P2 :: P5 :: P14 :: nil) ((P3 :: nil) ++ (P2 :: P5 :: P14 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P3 :: nil) (P2 :: P5 :: P14 :: nil) (nil) 1 2 0 HP3Mtmp HP2P5P14Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P3P5P14m2 : rk(P2 :: P3 :: P5 :: P14 :: nil) >= 2).
{
	try assert(HP2P3eq : rk(P2 :: P3 :: nil) = 2) by (apply LP2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3mtmp : rk(P2 :: P3 :: nil) >= 2) by (solve_hyps_min HP2P3eq HP2P3m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P3 :: nil) (P2 :: P3 :: P5 :: P14 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P3 :: nil) (P2 :: P3 :: P5 :: P14 :: nil) 2 2 HP2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P3P5P14m3 : rk(P2 :: P3 :: P5 :: P14 :: nil) >= 3).
{
	try assert(HP2P3P5eq : rk(P2 :: P3 :: P5 :: nil) = 3) by (apply LP2P3P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3P5mtmp : rk(P2 :: P3 :: P5 :: nil) >= 3) by (solve_hyps_min HP2P3P5eq HP2P3P5m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P2 :: P3 :: P5 :: nil) (P2 :: P3 :: P5 :: P14 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P3 :: P5 :: nil) (P2 :: P3 :: P5 :: P14 :: nil) 3 3 HP2P3P5mtmp Hcomp Hincl);apply HT.
}


assert(HP2P3P5P14M : rk(P2 :: P3 :: P5 :: P14 ::  nil) <= 4) by (solve_hyps_max HP2P3P5P14eq HP2P3P5P14M4).
assert(HP2P3P5P14m : rk(P2 :: P3 :: P5 :: P14 ::  nil) >= 1) by (solve_hyps_min HP2P3P5P14eq HP2P3P5P14m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP12P14 *)
(* dans constructLemma(), requis par LP2P5P12P14 *)
(* dans la couche 0 *)
Lemma LP2P3P5P12P14 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 :: P5 :: P12 :: P14 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P2P3P5P12P14 requis par la preuve de (?)P2P3P5P12P14 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P2P3P5P12P14 requis par la preuve de (?)P2P3P5P12P14 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P2P3P5P12P14 requis par la preuve de (?)P2P3P5P12P14 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P2P3P5P12P14 requis par la preuve de (?)P2P3P5P12P14 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P3P5P12P14m2 : rk(P2 :: P3 :: P5 :: P12 :: P14 :: nil) >= 2).
{
	try assert(HP2P3eq : rk(P2 :: P3 :: nil) = 2) by (apply LP2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3mtmp : rk(P2 :: P3 :: nil) >= 2) by (solve_hyps_min HP2P3eq HP2P3m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P3 :: nil) (P2 :: P3 :: P5 :: P12 :: P14 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P3 :: nil) (P2 :: P3 :: P5 :: P12 :: P14 :: nil) 2 2 HP2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P3P5P12P14m3 : rk(P2 :: P3 :: P5 :: P12 :: P14 :: nil) >= 3).
{
	try assert(HP2P3P5eq : rk(P2 :: P3 :: P5 :: nil) = 3) by (apply LP2P3P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3P5mtmp : rk(P2 :: P3 :: P5 :: nil) >= 3) by (solve_hyps_min HP2P3P5eq HP2P3P5m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P2 :: P3 :: P5 :: nil) (P2 :: P3 :: P5 :: P12 :: P14 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P3 :: P5 :: nil) (P2 :: P3 :: P5 :: P12 :: P14 :: nil) 3 3 HP2P3P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP2P3P5P12P14M4 : rk(P2 :: P3 :: P5 :: P12 :: P14 :: nil) <= 4).
{
	try assert(HP12eq : rk(P12 :: nil) = 1) by (apply LP12 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP12Mtmp : rk(P12 :: nil) <= 1) by (solve_hyps_max HP12eq HP12M1).
	try assert(HP2P3P5P14eq : rk(P2 :: P3 :: P5 :: P14 :: nil) = 3) by (apply LP2P3P5P14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3P5P14Mtmp : rk(P2 :: P3 :: P5 :: P14 :: nil) <= 3) by (solve_hyps_max HP2P3P5P14eq HP2P3P5P14M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P12 :: nil) (P2 :: P3 :: P5 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P3 :: P5 :: P12 :: P14 :: nil) (P12 :: P2 :: P3 :: P5 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P12 :: P2 :: P3 :: P5 :: P14 :: nil) ((P12 :: nil) ++ (P2 :: P3 :: P5 :: P14 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P12 :: nil) (P2 :: P3 :: P5 :: P14 :: nil) (nil) 1 3 0 HP12Mtmp HP2P3P5P14Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}
try clear HP2P3P5P14M1. try clear HP2P3P5P14M2. try clear HP2P3P5P14M3. try clear HP2P3P5P14M4. try clear HP2P3P5P14M5. try clear HP2P3P5P14M6. try clear HP2P3P5P14M7. try clear HP2P3P5P14m7. try clear HP2P3P5P14m6. try clear HP2P3P5P14m5. try clear HP2P3P5P14m4. try clear HP2P3P5P14m3. try clear HP2P3P5P14m2. try clear HP2P3P5P14m1. 

(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 5 4 et 4*)
assert(HP2P3P5P12P14M3 : rk(P2 :: P3 :: P5 :: P12 :: P14 :: nil) <= 3).
{
	assert(HP2P3P12Mtmp : rk(P2 :: P3 :: P12 :: nil) <= 2) by (solve_hyps_max HP2P3P12eq HP2P3P12M2).
	try assert(HP2P5P14eq : rk(P2 :: P5 :: P14 :: nil) = 2) by (apply LP2P5P14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P5P14Mtmp : rk(P2 :: P5 :: P14 :: nil) <= 2) by (solve_hyps_max HP2P5P14eq HP2P5P14M2).
	try assert(HP2eq : rk(P2 :: nil) = 1) by (apply LP2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2mtmp : rk(P2 :: nil) >= 1) by (solve_hyps_min HP2eq HP2m1).
	assert(Hincl : incl (P2 :: nil) (list_inter (P2 :: P3 :: P12 :: nil) (P2 :: P5 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P3 :: P5 :: P12 :: P14 :: nil) (P2 :: P3 :: P12 :: P2 :: P5 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P3 :: P12 :: P2 :: P5 :: P14 :: nil) ((P2 :: P3 :: P12 :: nil) ++ (P2 :: P5 :: P14 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P2 :: P3 :: P12 :: nil) (P2 :: P5 :: P14 :: nil) (P2 :: nil) 2 2 1 HP2P3P12Mtmp HP2P5P14Mtmp HP2mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP2P3P5P12P14M : rk(P2 :: P3 :: P5 :: P12 :: P14 ::  nil) <= 5) by (solve_hyps_max HP2P3P5P12P14eq HP2P3P5P12P14M5).
assert(HP2P3P5P12P14m : rk(P2 :: P3 :: P5 :: P12 :: P14 ::  nil) >= 1) by (solve_hyps_min HP2P3P5P12P14eq HP2P3P5P12P14m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P5P12P14 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P5 :: P12 :: P14 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P5P12P14 requis par la preuve de (?)P2P5P12P14 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P2P5P12P14 requis par la preuve de (?)P2P5P12P14 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P2P5P12P14 requis par la preuve de (?)P2P5P12P14 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P5P12P14m2 : rk(P2 :: P5 :: P12 :: P14 :: nil) >= 2).
{
	try assert(HP2P5eq : rk(P2 :: P5 :: nil) = 2) by (apply LP2P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P5mtmp : rk(P2 :: P5 :: nil) >= 2) by (solve_hyps_min HP2P5eq HP2P5m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P5 :: nil) (P2 :: P5 :: P12 :: P14 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P5 :: nil) (P2 :: P5 :: P12 :: P14 :: nil) 2 2 HP2P5mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP2P5P12P14M3 : rk(P2 :: P5 :: P12 :: P14 :: nil) <= 3).
{
	try assert(HP12eq : rk(P12 :: nil) = 1) by (apply LP12 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP12Mtmp : rk(P12 :: nil) <= 1) by (solve_hyps_max HP12eq HP12M1).
	try assert(HP2P5P14eq : rk(P2 :: P5 :: P14 :: nil) = 2) by (apply LP2P5P14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P5P14Mtmp : rk(P2 :: P5 :: P14 :: nil) <= 2) by (solve_hyps_max HP2P5P14eq HP2P5P14M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P12 :: nil) (P2 :: P5 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P5 :: P12 :: P14 :: nil) (P12 :: P2 :: P5 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P12 :: P2 :: P5 :: P14 :: nil) ((P12 :: nil) ++ (P2 :: P5 :: P14 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P12 :: nil) (P2 :: P5 :: P14 :: nil) (nil) 1 2 0 HP12Mtmp HP2P5P14Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 5*)
(* ensembles concernés AUB : P2 :: P3 :: P5 :: P12 :: P14 ::  AiB : P2 :: P12 ::  A : P2 :: P3 :: P12 ::  *)
assert(HP2P5P12P14m3 : rk(P2 :: P5 :: P12 :: P14 :: nil) >= 3).
{
	assert(HP2P3P12Mtmp : rk(P2 :: P3 :: P12 :: nil) <= 2) by (solve_hyps_max HP2P3P12eq HP2P3P12M2).
	try assert(HP2P3P5P12P14eq : rk(P2 :: P3 :: P5 :: P12 :: P14 :: nil) = 3) by (apply LP2P3P5P12P14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3P5P12P14mtmp : rk(P2 :: P3 :: P5 :: P12 :: P14 :: nil) >= 3) by (solve_hyps_min HP2P3P5P12P14eq HP2P3P5P12P14m3).
	try assert(HP2P12eq : rk(P2 :: P12 :: nil) = 2) by (apply LP2P12 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P12mtmp : rk(P2 :: P12 :: nil) >= 2) by (solve_hyps_min HP2P12eq HP2P12m2).
	assert(Hincl : incl (P2 :: P12 :: nil) (list_inter (P2 :: P3 :: P12 :: nil) (P2 :: P5 :: P12 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P3 :: P5 :: P12 :: P14 :: nil) (P2 :: P3 :: P12 :: P2 :: P5 :: P12 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P3 :: P12 :: P2 :: P5 :: P12 :: P14 :: nil) ((P2 :: P3 :: P12 :: nil) ++ (P2 :: P5 :: P12 :: P14 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP2P3P5P12P14mtmp;try rewrite HT2 in HP2P3P5P12P14mtmp.
	assert(HT := rule_4 (P2 :: P3 :: P12 :: nil) (P2 :: P5 :: P12 :: P14 :: nil) (P2 :: P12 :: nil) 3 2 2 HP2P3P5P12P14mtmp HP2P12mtmp HP2P3P12Mtmp Hincl); apply HT.
}
try clear HP2P3P5P12P14M1. try clear HP2P3P5P12P14M2. try clear HP2P3P5P12P14M3. try clear HP2P3P5P12P14M4. try clear HP2P3P5P12P14M5. try clear HP2P3P5P12P14M6. try clear HP2P3P5P12P14M7. try clear HP2P3P5P12P14m7. try clear HP2P3P5P12P14m6. try clear HP2P3P5P12P14m5. try clear HP2P3P5P12P14m4. try clear HP2P3P5P12P14m3. try clear HP2P3P5P12P14m2. try clear HP2P3P5P12P14m1. 

assert(HP2P5P12P14M : rk(P2 :: P5 :: P12 :: P14 ::  nil) <= 4) by (solve_hyps_max HP2P5P12P14eq HP2P5P12P14M4).
assert(HP2P5P12P14m : rk(P2 :: P5 :: P12 :: P14 ::  nil) >= 1) by (solve_hyps_min HP2P5P12P14eq HP2P5P12P14m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP12P14 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P12 :: P14 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 2 : pour P12P14 requis par la preuve de (?)P12P14 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P2 :: P5 :: P12 :: P14 ::  AiB : P14 ::  A : P2 :: P5 :: P14 ::  *)
assert(HP12P14m2 : rk(P12 :: P14 :: nil) >= 2).
{
	try assert(HP2P5P14eq : rk(P2 :: P5 :: P14 :: nil) = 2) by (apply LP2P5P14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P5P14Mtmp : rk(P2 :: P5 :: P14 :: nil) <= 2) by (solve_hyps_max HP2P5P14eq HP2P5P14M2).
	try assert(HP2P5P12P14eq : rk(P2 :: P5 :: P12 :: P14 :: nil) = 3) by (apply LP2P5P12P14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P5P12P14mtmp : rk(P2 :: P5 :: P12 :: P14 :: nil) >= 3) by (solve_hyps_min HP2P5P12P14eq HP2P5P12P14m3).
	try assert(HP14eq : rk(P14 :: nil) = 1) by (apply LP14 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP14mtmp : rk(P14 :: nil) >= 1) by (solve_hyps_min HP14eq HP14m1).
	assert(Hincl : incl (P14 :: nil) (list_inter (P2 :: P5 :: P14 :: nil) (P12 :: P14 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P5 :: P12 :: P14 :: nil) (P2 :: P5 :: P14 :: P12 :: P14 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P5 :: P14 :: P12 :: P14 :: nil) ((P2 :: P5 :: P14 :: nil) ++ (P12 :: P14 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP2P5P12P14mtmp;try rewrite HT2 in HP2P5P12P14mtmp.
	assert(HT := rule_4 (P2 :: P5 :: P14 :: nil) (P12 :: P14 :: nil) (P14 :: nil) 3 1 2 HP2P5P12P14mtmp HP14mtmp HP2P5P14Mtmp Hincl); apply HT.
}
try clear HP2P5P12P14M1. try clear HP2P5P12P14M2. try clear HP2P5P12P14M3. try clear HP2P5P12P14M4. try clear HP2P5P12P14M5. try clear HP2P5P12P14M6. try clear HP2P5P12P14M7. try clear HP2P5P12P14m7. try clear HP2P5P12P14m6. try clear HP2P5P12P14m5. try clear HP2P5P12P14m4. try clear HP2P5P12P14m3. try clear HP2P5P12P14m2. try clear HP2P5P12P14m1. 

assert(HP12P14M : rk(P12 :: P14 ::  nil) <= 2) by (solve_hyps_max HP12P14eq HP12P14M2).
assert(HP12P14m : rk(P12 :: P14 ::  nil) >= 1) by (solve_hyps_min HP12P14eq HP12P14m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP15 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P15 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP15M : rk(P15 ::  nil) <= 1) by (solve_hyps_max HP15eq HP15M1).
assert(HP15m : rk(P15 ::  nil) >= 1) by (solve_hyps_min HP15eq HP15m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP2P15 *)
(* dans la couche 0 *)
Lemma LP2P7P11P15 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P7 :: P11 :: P15 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P7P11P15 requis par la preuve de (?)P2P7P11P15 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P7P11P15 requis par la preuve de (?)P2P7P11P15 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 2 : pour P7P11P15 requis par la preuve de (?)P2P7P11P15 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P2P7P11P15 requis par la preuve de (?)P2P7P11P15 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP2P7P11P15M3 : rk(P2 :: P7 :: P11 :: P15 :: nil) <= 3).
{
	try assert(HP2eq : rk(P2 :: nil) = 1) by (apply LP2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2Mtmp : rk(P2 :: nil) <= 1) by (solve_hyps_max HP2eq HP2M1).
	assert(HP7P11P15Mtmp : rk(P7 :: P11 :: P15 :: nil) <= 2) by (solve_hyps_max HP7P11P15eq HP7P11P15M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P2 :: nil) (P7 :: P11 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P7 :: P11 :: P15 :: nil) (P2 :: P7 :: P11 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P7 :: P11 :: P15 :: nil) ((P2 :: nil) ++ (P7 :: P11 :: P15 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P2 :: nil) (P7 :: P11 :: P15 :: nil) (nil) 1 2 0 HP2Mtmp HP7P11P15Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P7P11P15m2 : rk(P2 :: P7 :: P11 :: P15 :: nil) >= 2).
{
	try assert(HP2P7eq : rk(P2 :: P7 :: nil) = 2) by (apply LP2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7mtmp : rk(P2 :: P7 :: nil) >= 2) by (solve_hyps_min HP2P7eq HP2P7m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P7 :: nil) (P2 :: P7 :: P11 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P7 :: nil) (P2 :: P7 :: P11 :: P15 :: nil) 2 2 HP2P7mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P7P11P15m3 : rk(P2 :: P7 :: P11 :: P15 :: nil) >= 3).
{
	try assert(HP2P7P11eq : rk(P2 :: P7 :: P11 :: nil) = 3) by (apply LP2P7P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7P11mtmp : rk(P2 :: P7 :: P11 :: nil) >= 3) by (solve_hyps_min HP2P7P11eq HP2P7P11m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P2 :: P7 :: P11 :: nil) (P2 :: P7 :: P11 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P7 :: P11 :: nil) (P2 :: P7 :: P11 :: P15 :: nil) 3 3 HP2P7P11mtmp Hcomp Hincl);apply HT.
}


assert(HP2P7P11P15M : rk(P2 :: P7 :: P11 :: P15 ::  nil) <= 4) by (solve_hyps_max HP2P7P11P15eq HP2P7P11P15M4).
assert(HP2P7P11P15m : rk(P2 :: P7 :: P11 :: P15 ::  nil) >= 1) by (solve_hyps_min HP2P7P11P15eq HP2P7P11P15m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P15 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P15 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 2 : pour P2P15 requis par la preuve de (?)P2P15 pour la règle 2  *)
(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 5*)
assert(HP2P15m2 : rk(P2 :: P15 :: nil) >= 2).
{
	assert(HP7P11P15Mtmp : rk(P7 :: P11 :: P15 :: nil) <= 2) by (solve_hyps_max HP7P11P15eq HP7P11P15M2).
	try assert(HP2P7P11P15eq : rk(P2 :: P7 :: P11 :: P15 :: nil) = 3) by (apply LP2P7P11P15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P7P11P15mtmp : rk(P2 :: P7 :: P11 :: P15 :: nil) >= 3) by (solve_hyps_min HP2P7P11P15eq HP2P7P11P15m3).
	try assert(HP15eq : rk(P15 :: nil) = 1) by (apply LP15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP15mtmp : rk(P15 :: nil) >= 1) by (solve_hyps_min HP15eq HP15m1).
	assert(Hincl : incl (P15 :: nil) (list_inter (P2 :: P15 :: nil) (P7 :: P11 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P7 :: P11 :: P15 :: nil) (P2 :: P15 :: P7 :: P11 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P15 :: P7 :: P11 :: P15 :: nil) ((P2 :: P15 :: nil) ++ (P7 :: P11 :: P15 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP2P7P11P15mtmp;try rewrite HT2 in HP2P7P11P15mtmp.
	assert(HT := rule_2 (P2 :: P15 :: nil) (P7 :: P11 :: P15 :: nil) (P15 :: nil) 3 1 2 HP2P7P11P15mtmp HP15mtmp HP7P11P15Mtmp Hincl);apply HT.
}
try clear HP2P7P11P15M1. try clear HP2P7P11P15M2. try clear HP2P7P11P15M3. try clear HP2P7P11P15M4. try clear HP2P7P11P15M5. try clear HP2P7P11P15M6. try clear HP2P7P11P15M7. try clear HP2P7P11P15m7. try clear HP2P7P11P15m6. try clear HP2P7P11P15m5. try clear HP2P7P11P15m4. try clear HP2P7P11P15m3. try clear HP2P7P11P15m2. try clear HP2P7P11P15m1. 

assert(HP2P15M : rk(P2 :: P15 ::  nil) <= 2) by (solve_hyps_max HP2P15eq HP2P15M2).
assert(HP2P15m : rk(P2 :: P15 ::  nil) >= 1) by (solve_hyps_min HP2P15eq HP2P15m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P2P3P4P5P15 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P4 :: P5 :: P15 ::  nil) = 5.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P2P3P4P5P15 requis par la preuve de (?)P1P2P3P4P5P15 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P3P4P5P15 requis par la preuve de (?)P1P2P3P4P5P15 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P4P5P15 requis par la preuve de (?)P1P2P3P4P5P15 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P4P5P15 requis par la preuve de (?)P1P2P3P4P5P15 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P5P15m2 : rk(P1 :: P2 :: P3 :: P4 :: P5 :: P15 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P4 :: P5 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P4 :: P5 :: P15 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P5P15m3 : rk(P1 :: P2 :: P3 :: P4 :: P5 :: P15 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P4 :: P5 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P4 :: P5 :: P15 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P5P15m4 : rk(P1 :: P2 :: P3 :: P4 :: P5 :: P15 :: nil) >= 4).
{
	try assert(HP1P2P3P4eq : rk(P1 :: P2 :: P3 :: P4 :: nil) = 4) by (apply LP1P2P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P4mtmp : rk(P1 :: P2 :: P3 :: P4 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4eq HP1P2P3P4m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P4 :: nil) (P1 :: P2 :: P3 :: P4 :: P5 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P4 :: nil) (P1 :: P2 :: P3 :: P4 :: P5 :: P15 :: nil) 4 4 HP1P2P3P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P5P15m5 : rk(P1 :: P2 :: P3 :: P4 :: P5 :: P15 :: nil) >= 5).
{
	try assert(HP1P2P3P4P5eq : rk(P1 :: P2 :: P3 :: P4 :: P5 :: nil) = 5) by (apply LP1P2P3P4P5 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P4P5mtmp : rk(P1 :: P2 :: P3 :: P4 :: P5 :: nil) >= 5) by (solve_hyps_min HP1P2P3P4P5eq HP1P2P3P4P5m5).
	assert(Hcomp : 5 <= 5) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P4 :: P5 :: nil) (P1 :: P2 :: P3 :: P4 :: P5 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P4 :: P5 :: nil) (P1 :: P2 :: P3 :: P4 :: P5 :: P15 :: nil) 5 5 HP1P2P3P4P5mtmp Hcomp Hincl);apply HT.
}


assert(HP1P2P3P4P5P15M : rk(P1 :: P2 :: P3 :: P4 :: P5 :: P15 ::  nil) <= 6) by (solve_hyps_max HP1P2P3P4P5P15eq HP1P2P3P4P5P15M6).
assert(HP1P2P3P4P5P15m : rk(P1 :: P2 :: P3 :: P4 :: P5 :: P15 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P4P5P15eq HP1P2P3P4P5P15m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP6P15 *)
(* dans constructLemma(), requis par LP6P7P11P15 *)
(* dans la couche 0 *)
Lemma LP1P6P7P11P15 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P6 :: P7 :: P11 :: P15 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P6P7P11P15 requis par la preuve de (?)P1P6P7P11P15 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P2P6P7P11P15 requis par la preuve de (?)P1P6P7P11P15 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P6P7P11P15 requis par la preuve de (?)P1P2P6P7P11P15 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P6P7P11P15 requis par la preuve de (?)P6P7P11P15 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP6P7P11P15M3 : rk(P6 :: P7 :: P11 :: P15 :: nil) <= 3).
{
	try assert(HP6eq : rk(P6 :: nil) = 1) by (apply LP6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP6Mtmp : rk(P6 :: nil) <= 1) by (solve_hyps_max HP6eq HP6M1).
	assert(HP7P11P15Mtmp : rk(P7 :: P11 :: P15 :: nil) <= 2) by (solve_hyps_max HP7P11P15eq HP7P11P15M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P6 :: nil) (P7 :: P11 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P6 :: P7 :: P11 :: P15 :: nil) (P6 :: P7 :: P11 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P6 :: P7 :: P11 :: P15 :: nil) ((P6 :: nil) ++ (P7 :: P11 :: P15 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P6 :: nil) (P7 :: P11 :: P15 :: nil) (nil) 1 2 0 HP6Mtmp HP7P11P15Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P6P7P11P15 requis par la preuve de (?)P1P2P6P7P11P15 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P6P7P11P15 requis par la preuve de (?)P1P2P6P7P11P15 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P6P7P11P15 requis par la preuve de (?)P1P2P6P7P11P15 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P6P7P11P15m2 : rk(P1 :: P2 :: P6 :: P7 :: P11 :: P15 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: P15 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P6P7P11P15m3 : rk(P1 :: P2 :: P6 :: P7 :: P11 :: P15 :: nil) >= 3).
{
	try assert(HP1P2P6eq : rk(P1 :: P2 :: P6 :: nil) = 3) by (apply LP1P2P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P6mtmp : rk(P1 :: P2 :: P6 :: nil) >= 3) by (solve_hyps_min HP1P2P6eq HP1P2P6m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P6 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P6 :: nil) (P1 :: P2 :: P6 :: P7 :: P11 :: P15 :: nil) 3 3 HP1P2P6mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 4*)
assert(HP1P2P6P7P11P15M4 : rk(P1 :: P2 :: P6 :: P7 :: P11 :: P15 :: nil) <= 4).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	assert(HP6P7P11P15Mtmp : rk(P6 :: P7 :: P11 :: P15 :: nil) <= 3) by (solve_hyps_max HP6P7P11P15eq HP6P7P11P15M3).
	try assert(HP7eq : rk(P7 :: nil) = 1) by (apply LP7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP7mtmp : rk(P7 :: nil) >= 1) by (solve_hyps_min HP7eq HP7m1).
	assert(Hincl : incl (P7 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P6 :: P7 :: P11 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P6 :: P7 :: P11 :: P15 :: nil) (P1 :: P2 :: P7 :: P6 :: P7 :: P11 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P6 :: P7 :: P11 :: P15 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P6 :: P7 :: P11 :: P15 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P2 :: P7 :: nil) (P6 :: P7 :: P11 :: P15 :: nil) (P7 :: nil) 2 3 1 HP1P2P7Mtmp HP6P7P11P15Mtmp HP7mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P6P7P11P15 requis par la preuve de (?)P1P6P7P11P15 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P6P7P11P15 requis par la preuve de (?)P1P6P7P11P15 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P7P11P15 requis par la preuve de (?)P1P6P7P11P15 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P7P11P15 requis par la preuve de (?)P1P7P11P15 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P7P11P15M3 : rk(P1 :: P7 :: P11 :: P15 :: nil) <= 3).
{
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1Mtmp : rk(P1 :: nil) <= 1) by (solve_hyps_max HP1eq HP1M1).
	assert(HP7P11P15Mtmp : rk(P7 :: P11 :: P15 :: nil) <= 2) by (solve_hyps_max HP7P11P15eq HP7P11P15M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: nil) (P7 :: P11 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P7 :: P11 :: P15 :: nil) (P1 :: P7 :: P11 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P7 :: P11 :: P15 :: nil) ((P1 :: nil) ++ (P7 :: P11 :: P15 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: nil) (P7 :: P11 :: P15 :: nil) (nil) 1 2 0 HP1Mtmp HP7P11P15Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P6P7P11P15 requis par la preuve de (?)P1P6P7P11P15 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P6P7P11P15M4 : rk(P1 :: P6 :: P7 :: P11 :: P15 :: nil) <= 4).
{
	try assert(HP6eq : rk(P6 :: nil) = 1) by (apply LP6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP6Mtmp : rk(P6 :: nil) <= 1) by (solve_hyps_max HP6eq HP6M1).
	assert(HP1P7P11P15Mtmp : rk(P1 :: P7 :: P11 :: P15 :: nil) <= 3) by (solve_hyps_max HP1P7P11P15eq HP1P7P11P15M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P6 :: nil) (P1 :: P7 :: P11 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P6 :: P7 :: P11 :: P15 :: nil) (P6 :: P1 :: P7 :: P11 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P6 :: P1 :: P7 :: P11 :: P15 :: nil) ((P6 :: nil) ++ (P1 :: P7 :: P11 :: P15 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P6 :: nil) (P1 :: P7 :: P11 :: P15 :: nil) (nil) 1 3 0 HP6Mtmp HP1P7P11P15Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}
try clear HP1P7P11P15M1. try clear HP1P7P11P15M2. try clear HP1P7P11P15M3. try clear HP1P7P11P15M4. try clear HP1P7P11P15M5. try clear HP1P7P11P15M6. try clear HP1P7P11P15M7. try clear HP1P7P11P15m7. try clear HP1P7P11P15m6. try clear HP1P7P11P15m5. try clear HP1P7P11P15m4. try clear HP1P7P11P15m3. try clear HP1P7P11P15m2. try clear HP1P7P11P15m1. 

(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P6P7P11P15m2 : rk(P1 :: P6 :: P7 :: P11 :: P15 :: nil) >= 2).
{
	try assert(HP1P6eq : rk(P1 :: P6 :: nil) = 2) by (apply LP1P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6mtmp : rk(P1 :: P6 :: nil) >= 2) by (solve_hyps_min HP1P6eq HP1P6m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P6 :: nil) (P1 :: P6 :: P7 :: P11 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P6 :: nil) (P1 :: P6 :: P7 :: P11 :: P15 :: nil) 2 2 HP1P6mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 5 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P6 :: P7 :: P11 :: P15 ::  AiB : P1 :: P7 ::  A : P1 :: P2 :: P7 ::  *)
assert(HP1P6P7P11P15m3 : rk(P1 :: P6 :: P7 :: P11 :: P15 :: nil) >= 3).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	assert(HP1P2P6P7P11P15mtmp : rk(P1 :: P2 :: P6 :: P7 :: P11 :: P15 :: nil) >= 3) by (solve_hyps_min HP1P2P6P7P11P15eq HP1P2P6P7P11P15m3).
	try assert(HP1P7eq : rk(P1 :: P7 :: nil) = 2) by (apply LP1P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P7mtmp : rk(P1 :: P7 :: nil) >= 2) by (solve_hyps_min HP1P7eq HP1P7m2).
	assert(Hincl : incl (P1 :: P7 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P1 :: P6 :: P7 :: P11 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P6 :: P7 :: P11 :: P15 :: nil) (P1 :: P2 :: P7 :: P1 :: P6 :: P7 :: P11 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P1 :: P6 :: P7 :: P11 :: P15 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P1 :: P6 :: P7 :: P11 :: P15 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P6P7P11P15mtmp;try rewrite HT2 in HP1P2P6P7P11P15mtmp.
	assert(HT := rule_4 (P1 :: P2 :: P7 :: nil) (P1 :: P6 :: P7 :: P11 :: P15 :: nil) (P1 :: P7 :: nil) 3 2 2 HP1P2P6P7P11P15mtmp HP1P7mtmp HP1P2P7Mtmp Hincl); apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 4*)
assert(HP1P6P7P11P15M3 : rk(P1 :: P6 :: P7 :: P11 :: P15 :: nil) <= 3).
{
	try assert(HP1P6P11eq : rk(P1 :: P6 :: P11 :: nil) = 2) by (apply LP1P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P11Mtmp : rk(P1 :: P6 :: P11 :: nil) <= 2) by (solve_hyps_max HP1P6P11eq HP1P6P11M2).
	assert(HP7P11P15Mtmp : rk(P7 :: P11 :: P15 :: nil) <= 2) by (solve_hyps_max HP7P11P15eq HP7P11P15M2).
	try assert(HP11eq : rk(P11 :: nil) = 1) by (apply LP11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP11mtmp : rk(P11 :: nil) >= 1) by (solve_hyps_min HP11eq HP11m1).
	assert(Hincl : incl (P11 :: nil) (list_inter (P1 :: P6 :: P11 :: nil) (P7 :: P11 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P6 :: P7 :: P11 :: P15 :: nil) (P1 :: P6 :: P11 :: P7 :: P11 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P6 :: P11 :: P7 :: P11 :: P15 :: nil) ((P1 :: P6 :: P11 :: nil) ++ (P7 :: P11 :: P15 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P6 :: P11 :: nil) (P7 :: P11 :: P15 :: nil) (P11 :: nil) 2 2 1 HP1P6P11Mtmp HP7P11P15Mtmp HP11mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P6P7P11P15M : rk(P1 :: P6 :: P7 :: P11 :: P15 ::  nil) <= 5) by (solve_hyps_max HP1P6P7P11P15eq HP1P6P7P11P15M5).
assert(HP1P6P7P11P15m : rk(P1 :: P6 :: P7 :: P11 :: P15 ::  nil) >= 1) by (solve_hyps_min HP1P6P7P11P15eq HP1P6P7P11P15m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP6P7P11P15 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P6 :: P7 :: P11 :: P15 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P6P7P11P15 requis par la preuve de (?)P6P7P11P15 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 5 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P6 :: P7 :: P11 :: P15 ::  AiB : P7 ::  A : P1 :: P2 :: P7 ::  *)
assert(HP6P7P11P15m2 : rk(P6 :: P7 :: P11 :: P15 :: nil) >= 2).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	assert(HP1P2P6P7P11P15mtmp : rk(P1 :: P2 :: P6 :: P7 :: P11 :: P15 :: nil) >= 3) by (solve_hyps_min HP1P2P6P7P11P15eq HP1P2P6P7P11P15m3).
	try assert(HP7eq : rk(P7 :: nil) = 1) by (apply LP7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP7mtmp : rk(P7 :: nil) >= 1) by (solve_hyps_min HP7eq HP7m1).
	assert(Hincl : incl (P7 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P6 :: P7 :: P11 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P6 :: P7 :: P11 :: P15 :: nil) (P1 :: P2 :: P7 :: P6 :: P7 :: P11 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P6 :: P7 :: P11 :: P15 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P6 :: P7 :: P11 :: P15 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P6P7P11P15mtmp;try rewrite HT2 in HP1P2P6P7P11P15mtmp.
	assert(HT := rule_4 (P1 :: P2 :: P7 :: nil) (P6 :: P7 :: P11 :: P15 :: nil) (P7 :: nil) 3 1 2 HP1P2P6P7P11P15mtmp HP7mtmp HP1P2P7Mtmp Hincl); apply HT.
}
try clear HP1P2P6P7P11P15M1. try clear HP1P2P6P7P11P15M2. try clear HP1P2P6P7P11P15M3. try clear HP1P2P6P7P11P15M4. try clear HP1P2P6P7P11P15M5. try clear HP1P2P6P7P11P15M6. try clear HP1P2P6P7P11P15M7. try clear HP1P2P6P7P11P15m7. try clear HP1P2P6P7P11P15m6. try clear HP1P2P6P7P11P15m5. try clear HP1P2P6P7P11P15m4. try clear HP1P2P6P7P11P15m3. try clear HP1P2P6P7P11P15m2. try clear HP1P2P6P7P11P15m1. 

(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P6 :: P7 :: P11 :: P15 ::  AiB : P6 :: P11 ::  A : P1 :: P6 :: P11 ::  *)
assert(HP6P7P11P15m3 : rk(P6 :: P7 :: P11 :: P15 :: nil) >= 3).
{
	try assert(HP1P6P11eq : rk(P1 :: P6 :: P11 :: nil) = 2) by (apply LP1P6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P11Mtmp : rk(P1 :: P6 :: P11 :: nil) <= 2) by (solve_hyps_max HP1P6P11eq HP1P6P11M2).
	try assert(HP1P6P7P11P15eq : rk(P1 :: P6 :: P7 :: P11 :: P15 :: nil) = 3) by (apply LP1P6P7P11P15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P6P7P11P15mtmp : rk(P1 :: P6 :: P7 :: P11 :: P15 :: nil) >= 3) by (solve_hyps_min HP1P6P7P11P15eq HP1P6P7P11P15m3).
	try assert(HP6P11eq : rk(P6 :: P11 :: nil) = 2) by (apply LP6P11 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP6P11mtmp : rk(P6 :: P11 :: nil) >= 2) by (solve_hyps_min HP6P11eq HP6P11m2).
	assert(Hincl : incl (P6 :: P11 :: nil) (list_inter (P1 :: P6 :: P11 :: nil) (P6 :: P7 :: P11 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P6 :: P7 :: P11 :: P15 :: nil) (P1 :: P6 :: P11 :: P6 :: P7 :: P11 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P6 :: P11 :: P6 :: P7 :: P11 :: P15 :: nil) ((P1 :: P6 :: P11 :: nil) ++ (P6 :: P7 :: P11 :: P15 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P6P7P11P15mtmp;try rewrite HT2 in HP1P6P7P11P15mtmp.
	assert(HT := rule_4 (P1 :: P6 :: P11 :: nil) (P6 :: P7 :: P11 :: P15 :: nil) (P6 :: P11 :: nil) 3 2 2 HP1P6P7P11P15mtmp HP6P11mtmp HP1P6P11Mtmp Hincl); apply HT.
}
try clear HP1P6P7P11P15M1. try clear HP1P6P7P11P15M2. try clear HP1P6P7P11P15M3. try clear HP1P6P7P11P15M4. try clear HP1P6P7P11P15M5. try clear HP1P6P7P11P15M6. try clear HP1P6P7P11P15M7. try clear HP1P6P7P11P15m7. try clear HP1P6P7P11P15m6. try clear HP1P6P7P11P15m5. try clear HP1P6P7P11P15m4. try clear HP1P6P7P11P15m3. try clear HP1P6P7P11P15m2. try clear HP1P6P7P11P15m1. 

assert(HP6P7P11P15M : rk(P6 :: P7 :: P11 :: P15 ::  nil) <= 4) by (solve_hyps_max HP6P7P11P15eq HP6P7P11P15M4).
assert(HP6P7P11P15m : rk(P6 :: P7 :: P11 :: P15 ::  nil) >= 1) by (solve_hyps_min HP6P7P11P15eq HP6P7P11P15m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP6P15 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P6 :: P15 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 2 : pour P6P15 requis par la preuve de (?)P6P15 pour la règle 2  *)
(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 5*)
assert(HP6P15m2 : rk(P6 :: P15 :: nil) >= 2).
{
	assert(HP7P11P15Mtmp : rk(P7 :: P11 :: P15 :: nil) <= 2) by (solve_hyps_max HP7P11P15eq HP7P11P15M2).
	try assert(HP6P7P11P15eq : rk(P6 :: P7 :: P11 :: P15 :: nil) = 3) by (apply LP6P7P11P15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP6P7P11P15mtmp : rk(P6 :: P7 :: P11 :: P15 :: nil) >= 3) by (solve_hyps_min HP6P7P11P15eq HP6P7P11P15m3).
	try assert(HP15eq : rk(P15 :: nil) = 1) by (apply LP15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP15mtmp : rk(P15 :: nil) >= 1) by (solve_hyps_min HP15eq HP15m1).
	assert(Hincl : incl (P15 :: nil) (list_inter (P6 :: P15 :: nil) (P7 :: P11 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P6 :: P7 :: P11 :: P15 :: nil) (P6 :: P15 :: P7 :: P11 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P6 :: P15 :: P7 :: P11 :: P15 :: nil) ((P6 :: P15 :: nil) ++ (P7 :: P11 :: P15 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP6P7P11P15mtmp;try rewrite HT2 in HP6P7P11P15mtmp.
	assert(HT := rule_2 (P6 :: P15 :: nil) (P7 :: P11 :: P15 :: nil) (P15 :: nil) 3 1 2 HP6P7P11P15mtmp HP15mtmp HP7P11P15Mtmp Hincl);apply HT.
}
try clear HP6P7P11P15M1. try clear HP6P7P11P15M2. try clear HP6P7P11P15M3. try clear HP6P7P11P15M4. try clear HP6P7P11P15M5. try clear HP6P7P11P15M6. try clear HP6P7P11P15M7. try clear HP6P7P11P15m7. try clear HP6P7P11P15m6. try clear HP6P7P11P15m5. try clear HP6P7P11P15m4. try clear HP6P7P11P15m3. try clear HP6P7P11P15m2. try clear HP6P7P11P15m1. 

assert(HP6P15M : rk(P6 :: P15 ::  nil) <= 2) by (solve_hyps_max HP6P15eq HP6P15M2).
assert(HP6P15m : rk(P6 :: P15 ::  nil) >= 1) by (solve_hyps_min HP6P15eq HP6P15m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P6P15 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P6 :: P15 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP2P6P15M : rk(P2 :: P6 :: P15 ::  nil) <= 3) by (solve_hyps_max HP2P6P15eq HP2P6P15M3).
assert(HP2P6P15m : rk(P2 :: P6 :: P15 ::  nil) >= 1) by (solve_hyps_min HP2P6P15eq HP2P6P15m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P3P6P15 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 :: P6 :: P15 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P3P6P15 requis par la preuve de (?)P2P3P6P15 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P3P6P15 requis par la preuve de (?)P2P3P6P15 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P2P3P6P15 requis par la preuve de (?)P2P3P6P15 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP2P3P6P15M3 : rk(P2 :: P3 :: P6 :: P15 :: nil) <= 3).
{
	try assert(HP3eq : rk(P3 :: nil) = 1) by (apply LP3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3Mtmp : rk(P3 :: nil) <= 1) by (solve_hyps_max HP3eq HP3M1).
	try assert(HP2P6P15eq : rk(P2 :: P6 :: P15 :: nil) = 2) by (apply LP2P6P15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P6P15Mtmp : rk(P2 :: P6 :: P15 :: nil) <= 2) by (solve_hyps_max HP2P6P15eq HP2P6P15M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P3 :: nil) (P2 :: P6 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P3 :: P6 :: P15 :: nil) (P3 :: P2 :: P6 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P3 :: P2 :: P6 :: P15 :: nil) ((P3 :: nil) ++ (P2 :: P6 :: P15 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P3 :: nil) (P2 :: P6 :: P15 :: nil) (nil) 1 2 0 HP3Mtmp HP2P6P15Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P3P6P15m2 : rk(P2 :: P3 :: P6 :: P15 :: nil) >= 2).
{
	try assert(HP2P3eq : rk(P2 :: P3 :: nil) = 2) by (apply LP2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3mtmp : rk(P2 :: P3 :: nil) >= 2) by (solve_hyps_min HP2P3eq HP2P3m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P3 :: nil) (P2 :: P3 :: P6 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P3 :: nil) (P2 :: P3 :: P6 :: P15 :: nil) 2 2 HP2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P3P6P15m3 : rk(P2 :: P3 :: P6 :: P15 :: nil) >= 3).
{
	try assert(HP2P3P6eq : rk(P2 :: P3 :: P6 :: nil) = 3) by (apply LP2P3P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3P6mtmp : rk(P2 :: P3 :: P6 :: nil) >= 3) by (solve_hyps_min HP2P3P6eq HP2P3P6m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P2 :: P3 :: P6 :: nil) (P2 :: P3 :: P6 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P3 :: P6 :: nil) (P2 :: P3 :: P6 :: P15 :: nil) 3 3 HP2P3P6mtmp Hcomp Hincl);apply HT.
}


assert(HP2P3P6P15M : rk(P2 :: P3 :: P6 :: P15 ::  nil) <= 4) by (solve_hyps_max HP2P3P6P15eq HP2P3P6P15M4).
assert(HP2P3P6P15m : rk(P2 :: P3 :: P6 :: P15 ::  nil) >= 1) by (solve_hyps_min HP2P3P6P15eq HP2P3P6P15m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP12P15 *)
(* dans constructLemma(), requis par LP2P6P12P15 *)
(* dans la couche 0 *)
Lemma LP2P3P6P12P15 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 :: P6 :: P12 :: P15 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P2P3P6P12P15 requis par la preuve de (?)P2P3P6P12P15 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P2P3P6P12P15 requis par la preuve de (?)P2P3P6P12P15 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P2P3P6P12P15 requis par la preuve de (?)P2P3P6P12P15 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P2P3P6P12P15 requis par la preuve de (?)P2P3P6P12P15 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P3P6P12P15m2 : rk(P2 :: P3 :: P6 :: P12 :: P15 :: nil) >= 2).
{
	try assert(HP2P3eq : rk(P2 :: P3 :: nil) = 2) by (apply LP2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3mtmp : rk(P2 :: P3 :: nil) >= 2) by (solve_hyps_min HP2P3eq HP2P3m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P3 :: nil) (P2 :: P3 :: P6 :: P12 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P3 :: nil) (P2 :: P3 :: P6 :: P12 :: P15 :: nil) 2 2 HP2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P3P6P12P15m3 : rk(P2 :: P3 :: P6 :: P12 :: P15 :: nil) >= 3).
{
	try assert(HP2P3P6eq : rk(P2 :: P3 :: P6 :: nil) = 3) by (apply LP2P3P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3P6mtmp : rk(P2 :: P3 :: P6 :: nil) >= 3) by (solve_hyps_min HP2P3P6eq HP2P3P6m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P2 :: P3 :: P6 :: nil) (P2 :: P3 :: P6 :: P12 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P3 :: P6 :: nil) (P2 :: P3 :: P6 :: P12 :: P15 :: nil) 3 3 HP2P3P6mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP2P3P6P12P15M4 : rk(P2 :: P3 :: P6 :: P12 :: P15 :: nil) <= 4).
{
	try assert(HP12eq : rk(P12 :: nil) = 1) by (apply LP12 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP12Mtmp : rk(P12 :: nil) <= 1) by (solve_hyps_max HP12eq HP12M1).
	try assert(HP2P3P6P15eq : rk(P2 :: P3 :: P6 :: P15 :: nil) = 3) by (apply LP2P3P6P15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3P6P15Mtmp : rk(P2 :: P3 :: P6 :: P15 :: nil) <= 3) by (solve_hyps_max HP2P3P6P15eq HP2P3P6P15M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P12 :: nil) (P2 :: P3 :: P6 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P3 :: P6 :: P12 :: P15 :: nil) (P12 :: P2 :: P3 :: P6 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P12 :: P2 :: P3 :: P6 :: P15 :: nil) ((P12 :: nil) ++ (P2 :: P3 :: P6 :: P15 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P12 :: nil) (P2 :: P3 :: P6 :: P15 :: nil) (nil) 1 3 0 HP12Mtmp HP2P3P6P15Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}
try clear HP2P3P6P15M1. try clear HP2P3P6P15M2. try clear HP2P3P6P15M3. try clear HP2P3P6P15M4. try clear HP2P3P6P15M5. try clear HP2P3P6P15M6. try clear HP2P3P6P15M7. try clear HP2P3P6P15m7. try clear HP2P3P6P15m6. try clear HP2P3P6P15m5. try clear HP2P3P6P15m4. try clear HP2P3P6P15m3. try clear HP2P3P6P15m2. try clear HP2P3P6P15m1. 

(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 5 4 et 4*)
assert(HP2P3P6P12P15M3 : rk(P2 :: P3 :: P6 :: P12 :: P15 :: nil) <= 3).
{
	assert(HP2P3P12Mtmp : rk(P2 :: P3 :: P12 :: nil) <= 2) by (solve_hyps_max HP2P3P12eq HP2P3P12M2).
	try assert(HP2P6P15eq : rk(P2 :: P6 :: P15 :: nil) = 2) by (apply LP2P6P15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P6P15Mtmp : rk(P2 :: P6 :: P15 :: nil) <= 2) by (solve_hyps_max HP2P6P15eq HP2P6P15M2).
	try assert(HP2eq : rk(P2 :: nil) = 1) by (apply LP2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2mtmp : rk(P2 :: nil) >= 1) by (solve_hyps_min HP2eq HP2m1).
	assert(Hincl : incl (P2 :: nil) (list_inter (P2 :: P3 :: P12 :: nil) (P2 :: P6 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P3 :: P6 :: P12 :: P15 :: nil) (P2 :: P3 :: P12 :: P2 :: P6 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P3 :: P12 :: P2 :: P6 :: P15 :: nil) ((P2 :: P3 :: P12 :: nil) ++ (P2 :: P6 :: P15 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P2 :: P3 :: P12 :: nil) (P2 :: P6 :: P15 :: nil) (P2 :: nil) 2 2 1 HP2P3P12Mtmp HP2P6P15Mtmp HP2mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP2P3P6P12P15M : rk(P2 :: P3 :: P6 :: P12 :: P15 ::  nil) <= 5) by (solve_hyps_max HP2P3P6P12P15eq HP2P3P6P12P15M5).
assert(HP2P3P6P12P15m : rk(P2 :: P3 :: P6 :: P12 :: P15 ::  nil) >= 1) by (solve_hyps_min HP2P3P6P12P15eq HP2P3P6P12P15m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P6P12P15 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P6 :: P12 :: P15 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P6P12P15 requis par la preuve de (?)P2P6P12P15 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P2P6P12P15 requis par la preuve de (?)P2P6P12P15 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P2P6P12P15 requis par la preuve de (?)P2P6P12P15 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P6P12P15m2 : rk(P2 :: P6 :: P12 :: P15 :: nil) >= 2).
{
	try assert(HP2P6eq : rk(P2 :: P6 :: nil) = 2) by (apply LP2P6 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P6mtmp : rk(P2 :: P6 :: nil) >= 2) by (solve_hyps_min HP2P6eq HP2P6m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P6 :: nil) (P2 :: P6 :: P12 :: P15 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P6 :: nil) (P2 :: P6 :: P12 :: P15 :: nil) 2 2 HP2P6mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP2P6P12P15M3 : rk(P2 :: P6 :: P12 :: P15 :: nil) <= 3).
{
	try assert(HP12eq : rk(P12 :: nil) = 1) by (apply LP12 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP12Mtmp : rk(P12 :: nil) <= 1) by (solve_hyps_max HP12eq HP12M1).
	try assert(HP2P6P15eq : rk(P2 :: P6 :: P15 :: nil) = 2) by (apply LP2P6P15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P6P15Mtmp : rk(P2 :: P6 :: P15 :: nil) <= 2) by (solve_hyps_max HP2P6P15eq HP2P6P15M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P12 :: nil) (P2 :: P6 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P6 :: P12 :: P15 :: nil) (P12 :: P2 :: P6 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P12 :: P2 :: P6 :: P15 :: nil) ((P12 :: nil) ++ (P2 :: P6 :: P15 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P12 :: nil) (P2 :: P6 :: P15 :: nil) (nil) 1 2 0 HP12Mtmp HP2P6P15Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 5*)
(* ensembles concernés AUB : P2 :: P3 :: P6 :: P12 :: P15 ::  AiB : P2 :: P12 ::  A : P2 :: P3 :: P12 ::  *)
assert(HP2P6P12P15m3 : rk(P2 :: P6 :: P12 :: P15 :: nil) >= 3).
{
	assert(HP2P3P12Mtmp : rk(P2 :: P3 :: P12 :: nil) <= 2) by (solve_hyps_max HP2P3P12eq HP2P3P12M2).
	try assert(HP2P3P6P12P15eq : rk(P2 :: P3 :: P6 :: P12 :: P15 :: nil) = 3) by (apply LP2P3P6P12P15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3P6P12P15mtmp : rk(P2 :: P3 :: P6 :: P12 :: P15 :: nil) >= 3) by (solve_hyps_min HP2P3P6P12P15eq HP2P3P6P12P15m3).
	try assert(HP2P12eq : rk(P2 :: P12 :: nil) = 2) by (apply LP2P12 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P12mtmp : rk(P2 :: P12 :: nil) >= 2) by (solve_hyps_min HP2P12eq HP2P12m2).
	assert(Hincl : incl (P2 :: P12 :: nil) (list_inter (P2 :: P3 :: P12 :: nil) (P2 :: P6 :: P12 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P3 :: P6 :: P12 :: P15 :: nil) (P2 :: P3 :: P12 :: P2 :: P6 :: P12 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P3 :: P12 :: P2 :: P6 :: P12 :: P15 :: nil) ((P2 :: P3 :: P12 :: nil) ++ (P2 :: P6 :: P12 :: P15 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP2P3P6P12P15mtmp;try rewrite HT2 in HP2P3P6P12P15mtmp.
	assert(HT := rule_4 (P2 :: P3 :: P12 :: nil) (P2 :: P6 :: P12 :: P15 :: nil) (P2 :: P12 :: nil) 3 2 2 HP2P3P6P12P15mtmp HP2P12mtmp HP2P3P12Mtmp Hincl); apply HT.
}
try clear HP2P3P6P12P15M1. try clear HP2P3P6P12P15M2. try clear HP2P3P6P12P15M3. try clear HP2P3P6P12P15M4. try clear HP2P3P6P12P15M5. try clear HP2P3P6P12P15M6. try clear HP2P3P6P12P15M7. try clear HP2P3P6P12P15m7. try clear HP2P3P6P12P15m6. try clear HP2P3P6P12P15m5. try clear HP2P3P6P12P15m4. try clear HP2P3P6P12P15m3. try clear HP2P3P6P12P15m2. try clear HP2P3P6P12P15m1. 

assert(HP2P6P12P15M : rk(P2 :: P6 :: P12 :: P15 ::  nil) <= 4) by (solve_hyps_max HP2P6P12P15eq HP2P6P12P15M4).
assert(HP2P6P12P15m : rk(P2 :: P6 :: P12 :: P15 ::  nil) >= 1) by (solve_hyps_min HP2P6P12P15eq HP2P6P12P15m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP12P15 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P12 :: P15 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 2 : pour P12P15 requis par la preuve de (?)P12P15 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P2 :: P6 :: P12 :: P15 ::  AiB : P15 ::  A : P2 :: P6 :: P15 ::  *)
assert(HP12P15m2 : rk(P12 :: P15 :: nil) >= 2).
{
	try assert(HP2P6P15eq : rk(P2 :: P6 :: P15 :: nil) = 2) by (apply LP2P6P15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P6P15Mtmp : rk(P2 :: P6 :: P15 :: nil) <= 2) by (solve_hyps_max HP2P6P15eq HP2P6P15M2).
	try assert(HP2P6P12P15eq : rk(P2 :: P6 :: P12 :: P15 :: nil) = 3) by (apply LP2P6P12P15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P6P12P15mtmp : rk(P2 :: P6 :: P12 :: P15 :: nil) >= 3) by (solve_hyps_min HP2P6P12P15eq HP2P6P12P15m3).
	try assert(HP15eq : rk(P15 :: nil) = 1) by (apply LP15 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP15mtmp : rk(P15 :: nil) >= 1) by (solve_hyps_min HP15eq HP15m1).
	assert(Hincl : incl (P15 :: nil) (list_inter (P2 :: P6 :: P15 :: nil) (P12 :: P15 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P6 :: P12 :: P15 :: nil) (P2 :: P6 :: P15 :: P12 :: P15 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P6 :: P15 :: P12 :: P15 :: nil) ((P2 :: P6 :: P15 :: nil) ++ (P12 :: P15 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP2P6P12P15mtmp;try rewrite HT2 in HP2P6P12P15mtmp.
	assert(HT := rule_4 (P2 :: P6 :: P15 :: nil) (P12 :: P15 :: nil) (P15 :: nil) 3 1 2 HP2P6P12P15mtmp HP15mtmp HP2P6P15Mtmp Hincl); apply HT.
}
try clear HP2P6P12P15M1. try clear HP2P6P12P15M2. try clear HP2P6P12P15M3. try clear HP2P6P12P15M4. try clear HP2P6P12P15M5. try clear HP2P6P12P15M6. try clear HP2P6P12P15M7. try clear HP2P6P12P15m7. try clear HP2P6P12P15m6. try clear HP2P6P12P15m5. try clear HP2P6P12P15m4. try clear HP2P6P12P15m3. try clear HP2P6P12P15m2. try clear HP2P6P12P15m1. 

assert(HP12P15M : rk(P12 :: P15 ::  nil) <= 2) by (solve_hyps_max HP12P15eq HP12P15M2).
assert(HP12P15m : rk(P12 :: P15 ::  nil) >= 1) by (solve_hyps_min HP12P15eq HP12P15m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P16 ::  nil) = 1.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP16M : rk(P16 ::  nil) <= 1) by (solve_hyps_max HP16eq HP16M1).
assert(HP16m : rk(P16 ::  nil) >= 1) by (solve_hyps_min HP16eq HP16m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP4P16 *)
(* dans constructLemma(), requis par LP4P8P9P16 *)
(* dans constructLemma(), requis par LP1P4P8P9P16 *)
(* dans la couche 0 *)
Lemma LP8P9P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P8 :: P9 :: P16 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

assert(HP8P9P16M : rk(P8 :: P9 :: P16 ::  nil) <= 3) by (solve_hyps_max HP8P9P16eq HP8P9P16M3).
assert(HP8P9P16m : rk(P8 :: P9 :: P16 ::  nil) >= 1) by (solve_hyps_min HP8P9P16eq HP8P9P16m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P4P8P9P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P4 :: P8 :: P9 :: P16 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P4P8P9P16 requis par la preuve de (?)P1P4P8P9P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P3P4P8P9P16 requis par la preuve de (?)P1P4P8P9P16 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P4P8P9P16 requis par la preuve de (?)P1P3P4P8P9P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P4P8P9P16 requis par la preuve de (?)P4P8P9P16 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP4P8P9P16M3 : rk(P4 :: P8 :: P9 :: P16 :: nil) <= 3).
{
	try assert(HP4eq : rk(P4 :: nil) = 1) by (apply LP4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP4Mtmp : rk(P4 :: nil) <= 1) by (solve_hyps_max HP4eq HP4M1).
	try assert(HP8P9P16eq : rk(P8 :: P9 :: P16 :: nil) = 2) by (apply LP8P9P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP8P9P16Mtmp : rk(P8 :: P9 :: P16 :: nil) <= 2) by (solve_hyps_max HP8P9P16eq HP8P9P16M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P4 :: nil) (P8 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P4 :: P8 :: P9 :: P16 :: nil) (P4 :: P8 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P4 :: P8 :: P9 :: P16 :: nil) ((P4 :: nil) ++ (P8 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P4 :: nil) (P8 :: P9 :: P16 :: nil) (nil) 1 2 0 HP4Mtmp HP8P9P16Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P3P4P8P9P16 requis par la preuve de (?)P1P3P4P8P9P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P3P4P8P9P16 requis par la preuve de (?)P1P3P4P8P9P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P3P4P8P9P16 requis par la preuve de (?)P1P3P4P8P9P16 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P3P4P8P9P16m2 : rk(P1 :: P3 :: P4 :: P8 :: P9 :: P16 :: nil) >= 2).
{
	try assert(HP1P3eq : rk(P1 :: P3 :: nil) = 2) by (apply LP1P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P3mtmp : rk(P1 :: P3 :: nil) >= 2) by (solve_hyps_min HP1P3eq HP1P3m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P3 :: nil) (P1 :: P3 :: P4 :: P8 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P3 :: nil) (P1 :: P3 :: P4 :: P8 :: P9 :: P16 :: nil) 2 2 HP1P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P3P4P8P9P16m3 : rk(P1 :: P3 :: P4 :: P8 :: P9 :: P16 :: nil) >= 3).
{
	try assert(HP1P3P4eq : rk(P1 :: P3 :: P4 :: nil) = 3) by (apply LP1P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P3P4mtmp : rk(P1 :: P3 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P3P4eq HP1P3P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P3 :: P4 :: nil) (P1 :: P3 :: P4 :: P8 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P3 :: P4 :: nil) (P1 :: P3 :: P4 :: P8 :: P9 :: P16 :: nil) 3 3 HP1P3P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 5 5 et 4*)
assert(HP1P3P4P8P9P16M4 : rk(P1 :: P3 :: P4 :: P8 :: P9 :: P16 :: nil) <= 4).
{
	assert(HP1P3P8Mtmp : rk(P1 :: P3 :: P8 :: nil) <= 2) by (solve_hyps_max HP1P3P8eq HP1P3P8M2).
	assert(HP4P8P9P16Mtmp : rk(P4 :: P8 :: P9 :: P16 :: nil) <= 3) by (solve_hyps_max HP4P8P9P16eq HP4P8P9P16M3).
	try assert(HP8eq : rk(P8 :: nil) = 1) by (apply LP8 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP8mtmp : rk(P8 :: nil) >= 1) by (solve_hyps_min HP8eq HP8m1).
	assert(Hincl : incl (P8 :: nil) (list_inter (P1 :: P3 :: P8 :: nil) (P4 :: P8 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P3 :: P4 :: P8 :: P9 :: P16 :: nil) (P1 :: P3 :: P8 :: P4 :: P8 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P3 :: P8 :: P4 :: P8 :: P9 :: P16 :: nil) ((P1 :: P3 :: P8 :: nil) ++ (P4 :: P8 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P3 :: P8 :: nil) (P4 :: P8 :: P9 :: P16 :: nil) (P8 :: nil) 2 3 1 HP1P3P8Mtmp HP4P8P9P16Mtmp HP8mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P1P4P8P9P16 requis par la preuve de (?)P1P4P8P9P16 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P4P8P9P16 requis par la preuve de (?)P1P4P8P9P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P8P9P16 requis par la preuve de (?)P1P4P8P9P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P8P9P16 requis par la preuve de (?)P1P8P9P16 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P8P9P16M3 : rk(P1 :: P8 :: P9 :: P16 :: nil) <= 3).
{
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1Mtmp : rk(P1 :: nil) <= 1) by (solve_hyps_max HP1eq HP1M1).
	try assert(HP8P9P16eq : rk(P8 :: P9 :: P16 :: nil) = 2) by (apply LP8P9P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP8P9P16Mtmp : rk(P8 :: P9 :: P16 :: nil) <= 2) by (solve_hyps_max HP8P9P16eq HP8P9P16M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: nil) (P8 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P8 :: P9 :: P16 :: nil) (P1 :: P8 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P8 :: P9 :: P16 :: nil) ((P1 :: nil) ++ (P8 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: nil) (P8 :: P9 :: P16 :: nil) (nil) 1 2 0 HP1Mtmp HP8P9P16Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P4P8P9P16 requis par la preuve de (?)P1P4P8P9P16 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P4P8P9P16M4 : rk(P1 :: P4 :: P8 :: P9 :: P16 :: nil) <= 4).
{
	try assert(HP4eq : rk(P4 :: nil) = 1) by (apply LP4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP4Mtmp : rk(P4 :: nil) <= 1) by (solve_hyps_max HP4eq HP4M1).
	assert(HP1P8P9P16Mtmp : rk(P1 :: P8 :: P9 :: P16 :: nil) <= 3) by (solve_hyps_max HP1P8P9P16eq HP1P8P9P16M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P4 :: nil) (P1 :: P8 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P4 :: P8 :: P9 :: P16 :: nil) (P4 :: P1 :: P8 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P4 :: P1 :: P8 :: P9 :: P16 :: nil) ((P4 :: nil) ++ (P1 :: P8 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P4 :: nil) (P1 :: P8 :: P9 :: P16 :: nil) (nil) 1 3 0 HP4Mtmp HP1P8P9P16Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}
try clear HP1P8P9P16M1. try clear HP1P8P9P16M2. try clear HP1P8P9P16M3. try clear HP1P8P9P16M4. try clear HP1P8P9P16M5. try clear HP1P8P9P16M6. try clear HP1P8P9P16M7. try clear HP1P8P9P16m7. try clear HP1P8P9P16m6. try clear HP1P8P9P16m5. try clear HP1P8P9P16m4. try clear HP1P8P9P16m3. try clear HP1P8P9P16m2. try clear HP1P8P9P16m1. 

(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P4P8P9P16m2 : rk(P1 :: P4 :: P8 :: P9 :: P16 :: nil) >= 2).
{
	try assert(HP1P4eq : rk(P1 :: P4 :: nil) = 2) by (apply LP1P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4mtmp : rk(P1 :: P4 :: nil) >= 2) by (solve_hyps_min HP1P4eq HP1P4m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P4 :: nil) (P1 :: P4 :: P8 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P4 :: nil) (P1 :: P4 :: P8 :: P9 :: P16 :: nil) 2 2 HP1P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 5 4 et 5*)
(* ensembles concernés AUB : P1 :: P3 :: P4 :: P8 :: P9 :: P16 ::  AiB : P1 :: P8 ::  A : P1 :: P3 :: P8 ::  *)
assert(HP1P4P8P9P16m3 : rk(P1 :: P4 :: P8 :: P9 :: P16 :: nil) >= 3).
{
	assert(HP1P3P8Mtmp : rk(P1 :: P3 :: P8 :: nil) <= 2) by (solve_hyps_max HP1P3P8eq HP1P3P8M2).
	assert(HP1P3P4P8P9P16mtmp : rk(P1 :: P3 :: P4 :: P8 :: P9 :: P16 :: nil) >= 3) by (solve_hyps_min HP1P3P4P8P9P16eq HP1P3P4P8P9P16m3).
	try assert(HP1P8eq : rk(P1 :: P8 :: nil) = 2) by (apply LP1P8 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P8mtmp : rk(P1 :: P8 :: nil) >= 2) by (solve_hyps_min HP1P8eq HP1P8m2).
	assert(Hincl : incl (P1 :: P8 :: nil) (list_inter (P1 :: P3 :: P8 :: nil) (P1 :: P4 :: P8 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P3 :: P4 :: P8 :: P9 :: P16 :: nil) (P1 :: P3 :: P8 :: P1 :: P4 :: P8 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P3 :: P8 :: P1 :: P4 :: P8 :: P9 :: P16 :: nil) ((P1 :: P3 :: P8 :: nil) ++ (P1 :: P4 :: P8 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P3P4P8P9P16mtmp;try rewrite HT2 in HP1P3P4P8P9P16mtmp.
	assert(HT := rule_4 (P1 :: P3 :: P8 :: nil) (P1 :: P4 :: P8 :: P9 :: P16 :: nil) (P1 :: P8 :: nil) 3 2 2 HP1P3P4P8P9P16mtmp HP1P8mtmp HP1P3P8Mtmp Hincl); apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 4*)
assert(HP1P4P8P9P16M3 : rk(P1 :: P4 :: P8 :: P9 :: P16 :: nil) <= 3).
{
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	try assert(HP8P9P16eq : rk(P8 :: P9 :: P16 :: nil) = 2) by (apply LP8P9P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP8P9P16Mtmp : rk(P8 :: P9 :: P16 :: nil) <= 2) by (solve_hyps_max HP8P9P16eq HP8P9P16M2).
	try assert(HP9eq : rk(P9 :: nil) = 1) by (apply LP9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP9mtmp : rk(P9 :: nil) >= 1) by (solve_hyps_min HP9eq HP9m1).
	assert(Hincl : incl (P9 :: nil) (list_inter (P1 :: P4 :: P9 :: nil) (P8 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P4 :: P8 :: P9 :: P16 :: nil) (P1 :: P4 :: P9 :: P8 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P4 :: P9 :: P8 :: P9 :: P16 :: nil) ((P1 :: P4 :: P9 :: nil) ++ (P8 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P4 :: P9 :: nil) (P8 :: P9 :: P16 :: nil) (P9 :: nil) 2 2 1 HP1P4P9Mtmp HP8P9P16Mtmp HP9mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P4P8P9P16M : rk(P1 :: P4 :: P8 :: P9 :: P16 ::  nil) <= 5) by (solve_hyps_max HP1P4P8P9P16eq HP1P4P8P9P16M5).
assert(HP1P4P8P9P16m : rk(P1 :: P4 :: P8 :: P9 :: P16 ::  nil) >= 1) by (solve_hyps_min HP1P4P8P9P16eq HP1P4P8P9P16m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP4P8P9P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P4 :: P8 :: P9 :: P16 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P4P8P9P16 requis par la preuve de (?)P4P8P9P16 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 5 4 et 5*)
(* ensembles concernés AUB : P1 :: P3 :: P4 :: P8 :: P9 :: P16 ::  AiB : P8 ::  A : P1 :: P3 :: P8 ::  *)
assert(HP4P8P9P16m2 : rk(P4 :: P8 :: P9 :: P16 :: nil) >= 2).
{
	assert(HP1P3P8Mtmp : rk(P1 :: P3 :: P8 :: nil) <= 2) by (solve_hyps_max HP1P3P8eq HP1P3P8M2).
	assert(HP1P3P4P8P9P16mtmp : rk(P1 :: P3 :: P4 :: P8 :: P9 :: P16 :: nil) >= 3) by (solve_hyps_min HP1P3P4P8P9P16eq HP1P3P4P8P9P16m3).
	try assert(HP8eq : rk(P8 :: nil) = 1) by (apply LP8 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP8mtmp : rk(P8 :: nil) >= 1) by (solve_hyps_min HP8eq HP8m1).
	assert(Hincl : incl (P8 :: nil) (list_inter (P1 :: P3 :: P8 :: nil) (P4 :: P8 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P3 :: P4 :: P8 :: P9 :: P16 :: nil) (P1 :: P3 :: P8 :: P4 :: P8 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P3 :: P8 :: P4 :: P8 :: P9 :: P16 :: nil) ((P1 :: P3 :: P8 :: nil) ++ (P4 :: P8 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P3P4P8P9P16mtmp;try rewrite HT2 in HP1P3P4P8P9P16mtmp.
	assert(HT := rule_4 (P1 :: P3 :: P8 :: nil) (P4 :: P8 :: P9 :: P16 :: nil) (P8 :: nil) 3 1 2 HP1P3P4P8P9P16mtmp HP8mtmp HP1P3P8Mtmp Hincl); apply HT.
}
try clear HP1P3P4P8P9P16M1. try clear HP1P3P4P8P9P16M2. try clear HP1P3P4P8P9P16M3. try clear HP1P3P4P8P9P16M4. try clear HP1P3P4P8P9P16M5. try clear HP1P3P4P8P9P16M6. try clear HP1P3P4P8P9P16M7. try clear HP1P3P4P8P9P16m7. try clear HP1P3P4P8P9P16m6. try clear HP1P3P4P8P9P16m5. try clear HP1P3P4P8P9P16m4. try clear HP1P3P4P8P9P16m3. try clear HP1P3P4P8P9P16m2. try clear HP1P3P4P8P9P16m1. 

(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P4 :: P8 :: P9 :: P16 ::  AiB : P4 :: P9 ::  A : P1 :: P4 :: P9 ::  *)
assert(HP4P8P9P16m3 : rk(P4 :: P8 :: P9 :: P16 :: nil) >= 3).
{
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	try assert(HP1P4P8P9P16eq : rk(P1 :: P4 :: P8 :: P9 :: P16 :: nil) = 3) by (apply LP1P4P8P9P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P8P9P16mtmp : rk(P1 :: P4 :: P8 :: P9 :: P16 :: nil) >= 3) by (solve_hyps_min HP1P4P8P9P16eq HP1P4P8P9P16m3).
	try assert(HP4P9eq : rk(P4 :: P9 :: nil) = 2) by (apply LP4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP4P9mtmp : rk(P4 :: P9 :: nil) >= 2) by (solve_hyps_min HP4P9eq HP4P9m2).
	assert(Hincl : incl (P4 :: P9 :: nil) (list_inter (P1 :: P4 :: P9 :: nil) (P4 :: P8 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P4 :: P8 :: P9 :: P16 :: nil) (P1 :: P4 :: P9 :: P4 :: P8 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P4 :: P9 :: P4 :: P8 :: P9 :: P16 :: nil) ((P1 :: P4 :: P9 :: nil) ++ (P4 :: P8 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P4P8P9P16mtmp;try rewrite HT2 in HP1P4P8P9P16mtmp.
	assert(HT := rule_4 (P1 :: P4 :: P9 :: nil) (P4 :: P8 :: P9 :: P16 :: nil) (P4 :: P9 :: nil) 3 2 2 HP1P4P8P9P16mtmp HP4P9mtmp HP1P4P9Mtmp Hincl); apply HT.
}
try clear HP1P4P8P9P16M1. try clear HP1P4P8P9P16M2. try clear HP1P4P8P9P16M3. try clear HP1P4P8P9P16M4. try clear HP1P4P8P9P16M5. try clear HP1P4P8P9P16M6. try clear HP1P4P8P9P16M7. try clear HP1P4P8P9P16m7. try clear HP1P4P8P9P16m6. try clear HP1P4P8P9P16m5. try clear HP1P4P8P9P16m4. try clear HP1P4P8P9P16m3. try clear HP1P4P8P9P16m2. try clear HP1P4P8P9P16m1. 

assert(HP4P8P9P16M : rk(P4 :: P8 :: P9 :: P16 ::  nil) <= 4) by (solve_hyps_max HP4P8P9P16eq HP4P8P9P16M4).
assert(HP4P8P9P16m : rk(P4 :: P8 :: P9 :: P16 ::  nil) >= 1) by (solve_hyps_min HP4P8P9P16eq HP4P8P9P16m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP4P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P4 :: P16 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 2 : pour P4P16 requis par la preuve de (?)P4P16 pour la règle 2  *)
(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 4*)
assert(HP4P16m2 : rk(P4 :: P16 :: nil) >= 2).
{
	try assert(HP8P9P16eq : rk(P8 :: P9 :: P16 :: nil) = 2) by (apply LP8P9P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP8P9P16Mtmp : rk(P8 :: P9 :: P16 :: nil) <= 2) by (solve_hyps_max HP8P9P16eq HP8P9P16M2).
	try assert(HP4P8P9P16eq : rk(P4 :: P8 :: P9 :: P16 :: nil) = 3) by (apply LP4P8P9P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP4P8P9P16mtmp : rk(P4 :: P8 :: P9 :: P16 :: nil) >= 3) by (solve_hyps_min HP4P8P9P16eq HP4P8P9P16m3).
	try assert(HP16eq : rk(P16 :: nil) = 1) by (apply LP16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP16mtmp : rk(P16 :: nil) >= 1) by (solve_hyps_min HP16eq HP16m1).
	assert(Hincl : incl (P16 :: nil) (list_inter (P4 :: P16 :: nil) (P8 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P4 :: P8 :: P9 :: P16 :: nil) (P4 :: P16 :: P8 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P4 :: P16 :: P8 :: P9 :: P16 :: nil) ((P4 :: P16 :: nil) ++ (P8 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP4P8P9P16mtmp;try rewrite HT2 in HP4P8P9P16mtmp.
	assert(HT := rule_2 (P4 :: P16 :: nil) (P8 :: P9 :: P16 :: nil) (P16 :: nil) 3 1 2 HP4P8P9P16mtmp HP16mtmp HP8P9P16Mtmp Hincl);apply HT.
}
try clear HP4P8P9P16M1. try clear HP4P8P9P16M2. try clear HP4P8P9P16M3. try clear HP4P8P9P16M4. try clear HP4P8P9P16M5. try clear HP4P8P9P16M6. try clear HP4P8P9P16M7. try clear HP4P8P9P16m7. try clear HP4P8P9P16m6. try clear HP4P8P9P16m5. try clear HP4P8P9P16m4. try clear HP4P8P9P16m3. try clear HP4P8P9P16m2. try clear HP4P8P9P16m1. 

assert(HP4P16M : rk(P4 :: P16 ::  nil) <= 2) by (solve_hyps_max HP4P16eq HP4P16M2).
assert(HP4P16m : rk(P4 :: P16 ::  nil) >= 1) by (solve_hyps_min HP4P16eq HP4P16m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP2P4P16 *)
(* dans la couche 0 *)
Lemma LP2P3P4P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P3 :: P4 :: P16 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P3P4P16 requis par la preuve de (?)P2P3P4P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P3P4P16 requis par la preuve de (?)P2P3P4P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 2 : pour P3P4P16 requis par la preuve de (?)P2P3P4P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P2P3P4P16 requis par la preuve de (?)P2P3P4P16 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP2P3P4P16M3 : rk(P2 :: P3 :: P4 :: P16 :: nil) <= 3).
{
	try assert(HP2eq : rk(P2 :: nil) = 1) by (apply LP2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2Mtmp : rk(P2 :: nil) <= 1) by (solve_hyps_max HP2eq HP2M1).
	assert(HP3P4P16Mtmp : rk(P3 :: P4 :: P16 :: nil) <= 2) by (solve_hyps_max HP3P4P16eq HP3P4P16M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P2 :: nil) (P3 :: P4 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P3 :: P4 :: P16 :: nil) (P2 :: P3 :: P4 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P3 :: P4 :: P16 :: nil) ((P2 :: nil) ++ (P3 :: P4 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P2 :: nil) (P3 :: P4 :: P16 :: nil) (nil) 1 2 0 HP2Mtmp HP3P4P16Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P3P4P16m2 : rk(P2 :: P3 :: P4 :: P16 :: nil) >= 2).
{
	try assert(HP2P3eq : rk(P2 :: P3 :: nil) = 2) by (apply LP2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3mtmp : rk(P2 :: P3 :: nil) >= 2) by (solve_hyps_min HP2P3eq HP2P3m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P3 :: nil) (P2 :: P3 :: P4 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P3 :: nil) (P2 :: P3 :: P4 :: P16 :: nil) 2 2 HP2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P3P4P16m3 : rk(P2 :: P3 :: P4 :: P16 :: nil) >= 3).
{
	try assert(HP2P3P4eq : rk(P2 :: P3 :: P4 :: nil) = 3) by (apply LP2P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3P4mtmp : rk(P2 :: P3 :: P4 :: nil) >= 3) by (solve_hyps_min HP2P3P4eq HP2P3P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P2 :: P3 :: P4 :: nil) (P2 :: P3 :: P4 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P3 :: P4 :: nil) (P2 :: P3 :: P4 :: P16 :: nil) 3 3 HP2P3P4mtmp Hcomp Hincl);apply HT.
}


assert(HP2P3P4P16M : rk(P2 :: P3 :: P4 :: P16 ::  nil) <= 4) by (solve_hyps_max HP2P3P4P16eq HP2P3P4P16M4).
assert(HP2P3P4P16m : rk(P2 :: P3 :: P4 :: P16 ::  nil) >= 1) by (solve_hyps_min HP2P3P4P16eq HP2P3P4P16m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP2P4P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P2 :: P4 :: P16 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P2P4P16 requis par la preuve de (?)P2P4P16 pour la règle 2  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P2P4P16 requis par la preuve de (?)P2P4P16 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP2P4P16m2 : rk(P2 :: P4 :: P16 :: nil) >= 2).
{
	try assert(HP2P4eq : rk(P2 :: P4 :: nil) = 2) by (apply LP2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P4mtmp : rk(P2 :: P4 :: nil) >= 2) by (solve_hyps_min HP2P4eq HP2P4m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P2 :: P4 :: nil) (P2 :: P4 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P2 :: P4 :: nil) (P2 :: P4 :: P16 :: nil) 2 2 HP2P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 2 code (7 ou 8 dans la thèse) conclusion A*)
(* marque des antécédents AUB AiB B: 4 4 et 5*)
assert(HP2P4P16m3 : rk(P2 :: P4 :: P16 :: nil) >= 3).
{
	assert(HP3P4P16Mtmp : rk(P3 :: P4 :: P16 :: nil) <= 2) by (solve_hyps_max HP3P4P16eq HP3P4P16M2).
	try assert(HP2P3P4P16eq : rk(P2 :: P3 :: P4 :: P16 :: nil) = 3) by (apply LP2P3P4P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP2P3P4P16mtmp : rk(P2 :: P3 :: P4 :: P16 :: nil) >= 3) by (solve_hyps_min HP2P3P4P16eq HP2P3P4P16m3).
	try assert(HP4P16eq : rk(P4 :: P16 :: nil) = 2) by (apply LP4P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP4P16mtmp : rk(P4 :: P16 :: nil) >= 2) by (solve_hyps_min HP4P16eq HP4P16m2).
	assert(Hincl : incl (P4 :: P16 :: nil) (list_inter (P2 :: P4 :: P16 :: nil) (P3 :: P4 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P2 :: P3 :: P4 :: P16 :: nil) (P2 :: P4 :: P16 :: P3 :: P4 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P2 :: P4 :: P16 :: P3 :: P4 :: P16 :: nil) ((P2 :: P4 :: P16 :: nil) ++ (P3 :: P4 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP2P3P4P16mtmp;try rewrite HT2 in HP2P3P4P16mtmp.
	assert(HT := rule_2 (P2 :: P4 :: P16 :: nil) (P3 :: P4 :: P16 :: nil) (P4 :: P16 :: nil) 3 2 2 HP2P3P4P16mtmp HP4P16mtmp HP3P4P16Mtmp Hincl);apply HT.
}
try clear HP4P16M1. try clear HP4P16M2. try clear HP4P16M3. try clear HP4P16M4. try clear HP4P16M5. try clear HP4P16M6. try clear HP4P16M7. try clear HP4P16m7. try clear HP4P16m6. try clear HP4P16m5. try clear HP4P16m4. try clear HP4P16m3. try clear HP4P16m2. try clear HP4P16m1. 

assert(HP2P4P16M : rk(P2 :: P4 :: P16 ::  nil) <= 3) by (solve_hyps_max HP2P4P16eq HP2P4P16M3).
assert(HP2P4P16m : rk(P2 :: P4 :: P16 ::  nil) >= 1) by (solve_hyps_min HP2P4P16eq HP2P4P16m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP1P3P4P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P3 :: P4 :: P16 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P1P3P4P16 requis par la preuve de (?)P1P3P4P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P1P3P4P16 requis par la preuve de (?)P1P3P4P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P1P3P4P16 requis par la preuve de (?)P1P3P4P16 pour la règle 1  *)
(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P3P4P16M3 : rk(P1 :: P3 :: P4 :: P16 :: nil) <= 3).
{
	try assert(HP1eq : rk(P1 :: nil) = 1) by (apply LP1 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1Mtmp : rk(P1 :: nil) <= 1) by (solve_hyps_max HP1eq HP1M1).
	assert(HP3P4P16Mtmp : rk(P3 :: P4 :: P16 :: nil) <= 2) by (solve_hyps_max HP3P4P16eq HP3P4P16M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: nil) (P3 :: P4 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P3 :: P4 :: P16 :: nil) (P1 :: P3 :: P4 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P3 :: P4 :: P16 :: nil) ((P1 :: nil) ++ (P3 :: P4 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: nil) (P3 :: P4 :: P16 :: nil) (nil) 1 2 0 HP1Mtmp HP3P4P16Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P3P4P16m2 : rk(P1 :: P3 :: P4 :: P16 :: nil) >= 2).
{
	try assert(HP1P3eq : rk(P1 :: P3 :: nil) = 2) by (apply LP1P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P3mtmp : rk(P1 :: P3 :: nil) >= 2) by (solve_hyps_min HP1P3eq HP1P3m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P3 :: nil) (P1 :: P3 :: P4 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P3 :: nil) (P1 :: P3 :: P4 :: P16 :: nil) 2 2 HP1P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P3P4P16m3 : rk(P1 :: P3 :: P4 :: P16 :: nil) >= 3).
{
	try assert(HP1P3P4eq : rk(P1 :: P3 :: P4 :: nil) = 3) by (apply LP1P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P3P4mtmp : rk(P1 :: P3 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P3P4eq HP1P3P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P3 :: P4 :: nil) (P1 :: P3 :: P4 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P3 :: P4 :: nil) (P1 :: P3 :: P4 :: P16 :: nil) 3 3 HP1P3P4mtmp Hcomp Hincl);apply HT.
}


assert(HP1P3P4P16M : rk(P1 :: P3 :: P4 :: P16 ::  nil) <= 4) by (solve_hyps_max HP1P3P4P16eq HP1P3P4P16M4).
assert(HP1P3P4P16m : rk(P1 :: P3 :: P4 :: P16 ::  nil) >= 1) by (solve_hyps_min HP1P3P4P16eq HP1P3P4P16m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP3P4P7P16 *)
(* dans la couche 0 *)
Lemma LP1P2P3P4P7P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P2 :: P3 :: P4 :: P7 :: P16 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P2P3P4P7P16 requis par la preuve de (?)P1P2P3P4P7P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P3P4P7P16 requis par la preuve de (?)P1P2P3P4P7P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P4P7P16 requis par la preuve de (?)P1P2P3P4P7P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P4P7P16 requis par la preuve de (?)P1P2P3P4P7P16 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P7P16m2 : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P7P16m3 : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P7P16m4 : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil) >= 4).
{
	try assert(HP1P2P3P4eq : rk(P1 :: P2 :: P3 :: P4 :: nil) = 4) by (apply LP1P2P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P4mtmp : rk(P1 :: P2 :: P3 :: P4 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4eq HP1P2P3P4m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P4 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P4 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil) 4 4 HP1P2P3P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P2P3P4P7P16M4 : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil) <= 4).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	assert(HP3P4P16Mtmp : rk(P3 :: P4 :: P16 :: nil) <= 2) by (solve_hyps_max HP3P4P16eq HP3P4P16M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: P2 :: P7 :: nil) (P3 :: P4 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil) (P1 :: P2 :: P7 :: P3 :: P4 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P3 :: P4 :: P16 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P3 :: P4 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P2 :: P7 :: nil) (P3 :: P4 :: P16 :: nil) (nil) 2 2 0 HP1P2P7Mtmp HP3P4P16Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P2P3P4P7P16M : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P16 ::  nil) <= 6) by (solve_hyps_max HP1P2P3P4P7P16eq HP1P2P3P4P7P16M6).
assert(HP1P2P3P4P7P16m : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P16 ::  nil) >= 1) by (solve_hyps_min HP1P2P3P4P7P16eq HP1P2P3P4P7P16m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP3P4P7P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P3 :: P4 :: P7 :: P16 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P3P4P7P16 requis par la preuve de (?)P3P4P7P16 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P3P4P7P16 requis par la preuve de (?)P3P4P7P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P3P4P7P16 requis par la preuve de (?)P3P4P7P16 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP3P4P7P16m2 : rk(P3 :: P4 :: P7 :: P16 :: nil) >= 2).
{
	try assert(HP3P4eq : rk(P3 :: P4 :: nil) = 2) by (apply LP3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3P4mtmp : rk(P3 :: P4 :: nil) >= 2) by (solve_hyps_min HP3P4eq HP3P4m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P3 :: P4 :: nil) (P3 :: P4 :: P7 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P3 :: P4 :: nil) (P3 :: P4 :: P7 :: P16 :: nil) 2 2 HP3P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP3P4P7P16M3 : rk(P3 :: P4 :: P7 :: P16 :: nil) <= 3).
{
	try assert(HP7eq : rk(P7 :: nil) = 1) by (apply LP7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP7Mtmp : rk(P7 :: nil) <= 1) by (solve_hyps_max HP7eq HP7M1).
	assert(HP3P4P16Mtmp : rk(P3 :: P4 :: P16 :: nil) <= 2) by (solve_hyps_max HP3P4P16eq HP3P4P16M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P7 :: nil) (P3 :: P4 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P3 :: P4 :: P7 :: P16 :: nil) (P7 :: P3 :: P4 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P7 :: P3 :: P4 :: P16 :: nil) ((P7 :: nil) ++ (P3 :: P4 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P7 :: nil) (P3 :: P4 :: P16 :: nil) (nil) 1 2 0 HP7Mtmp HP3P4P16Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P3 :: P4 :: P7 :: P16 ::  AiB : P7 ::  A : P1 :: P2 :: P7 ::  *)
assert(HP3P4P7P16m3 : rk(P3 :: P4 :: P7 :: P16 :: nil) >= 3).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	try assert(HP1P2P3P4P7P16eq : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil) = 4) by (apply LP1P2P3P4P7P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P4P7P16mtmp : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4P7P16eq HP1P2P3P4P7P16m4).
	try assert(HP7eq : rk(P7 :: nil) = 1) by (apply LP7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP7mtmp : rk(P7 :: nil) >= 1) by (solve_hyps_min HP7eq HP7m1).
	assert(Hincl : incl (P7 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P3 :: P4 :: P7 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P4 :: P7 :: P16 :: nil) (P1 :: P2 :: P7 :: P3 :: P4 :: P7 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P3 :: P4 :: P7 :: P16 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P3 :: P4 :: P7 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P4P7P16mtmp;try rewrite HT2 in HP1P2P3P4P7P16mtmp.
	assert(HT := rule_4 (P1 :: P2 :: P7 :: nil) (P3 :: P4 :: P7 :: P16 :: nil) (P7 :: nil) 4 1 2 HP1P2P3P4P7P16mtmp HP7mtmp HP1P2P7Mtmp Hincl); apply HT.
}
try clear HP1P2P3P4P7P16M1. try clear HP1P2P3P4P7P16M2. try clear HP1P2P3P4P7P16M3. try clear HP1P2P3P4P7P16M4. try clear HP1P2P3P4P7P16M5. try clear HP1P2P3P4P7P16M6. try clear HP1P2P3P4P7P16M7. try clear HP1P2P3P4P7P16m7. try clear HP1P2P3P4P7P16m6. try clear HP1P2P3P4P7P16m5. try clear HP1P2P3P4P7P16m4. try clear HP1P2P3P4P7P16m3. try clear HP1P2P3P4P7P16m2. try clear HP1P2P3P4P7P16m1. 

assert(HP3P4P7P16M : rk(P3 :: P4 :: P7 :: P16 ::  nil) <= 4) by (solve_hyps_max HP3P4P7P16eq HP3P4P7P16M4).
assert(HP3P4P7P16m : rk(P3 :: P4 :: P7 :: P16 ::  nil) >= 1) by (solve_hyps_min HP3P4P7P16eq HP3P4P7P16m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP9P16 *)
(* dans constructLemma(), requis par LP3P4P9P16 *)
(* dans la couche 0 *)
Lemma LP1P3P4P9P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P3 :: P4 :: P9 :: P16 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P3P4P9P16 requis par la preuve de (?)P1P3P4P9P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P3P4P9P16 requis par la preuve de (?)P1P3P4P9P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P3P4P9P16 requis par la preuve de (?)P1P3P4P9P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P3P4P9P16 requis par la preuve de (?)P1P3P4P9P16 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P3P4P9P16m2 : rk(P1 :: P3 :: P4 :: P9 :: P16 :: nil) >= 2).
{
	try assert(HP1P3eq : rk(P1 :: P3 :: nil) = 2) by (apply LP1P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P3mtmp : rk(P1 :: P3 :: nil) >= 2) by (solve_hyps_min HP1P3eq HP1P3m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P3 :: nil) (P1 :: P3 :: P4 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P3 :: nil) (P1 :: P3 :: P4 :: P9 :: P16 :: nil) 2 2 HP1P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P3P4P9P16m3 : rk(P1 :: P3 :: P4 :: P9 :: P16 :: nil) >= 3).
{
	try assert(HP1P3P4eq : rk(P1 :: P3 :: P4 :: nil) = 3) by (apply LP1P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P3P4mtmp : rk(P1 :: P3 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P3P4eq HP1P3P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P3 :: P4 :: nil) (P1 :: P3 :: P4 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P3 :: P4 :: nil) (P1 :: P3 :: P4 :: P9 :: P16 :: nil) 3 3 HP1P3P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP1P3P4P9P16M4 : rk(P1 :: P3 :: P4 :: P9 :: P16 :: nil) <= 4).
{
	try assert(HP9eq : rk(P9 :: nil) = 1) by (apply LP9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP9Mtmp : rk(P9 :: nil) <= 1) by (solve_hyps_max HP9eq HP9M1).
	try assert(HP1P3P4P16eq : rk(P1 :: P3 :: P4 :: P16 :: nil) = 3) by (apply LP1P3P4P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P3P4P16Mtmp : rk(P1 :: P3 :: P4 :: P16 :: nil) <= 3) by (solve_hyps_max HP1P3P4P16eq HP1P3P4P16M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P9 :: nil) (P1 :: P3 :: P4 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P3 :: P4 :: P9 :: P16 :: nil) (P9 :: P1 :: P3 :: P4 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P9 :: P1 :: P3 :: P4 :: P16 :: nil) ((P9 :: nil) ++ (P1 :: P3 :: P4 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P9 :: nil) (P1 :: P3 :: P4 :: P16 :: nil) (nil) 1 3 0 HP9Mtmp HP1P3P4P16Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}
try clear HP1P3P4P16M1. try clear HP1P3P4P16M2. try clear HP1P3P4P16M3. try clear HP1P3P4P16M4. try clear HP1P3P4P16M5. try clear HP1P3P4P16M6. try clear HP1P3P4P16M7. try clear HP1P3P4P16m7. try clear HP1P3P4P16m6. try clear HP1P3P4P16m5. try clear HP1P3P4P16m4. try clear HP1P3P4P16m3. try clear HP1P3P4P16m2. try clear HP1P3P4P16m1. 

(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 4*)
assert(HP1P3P4P9P16M3 : rk(P1 :: P3 :: P4 :: P9 :: P16 :: nil) <= 3).
{
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	assert(HP3P4P16Mtmp : rk(P3 :: P4 :: P16 :: nil) <= 2) by (solve_hyps_max HP3P4P16eq HP3P4P16M2).
	try assert(HP4eq : rk(P4 :: nil) = 1) by (apply LP4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP4mtmp : rk(P4 :: nil) >= 1) by (solve_hyps_min HP4eq HP4m1).
	assert(Hincl : incl (P4 :: nil) (list_inter (P1 :: P4 :: P9 :: nil) (P3 :: P4 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P3 :: P4 :: P9 :: P16 :: nil) (P1 :: P4 :: P9 :: P3 :: P4 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P4 :: P9 :: P3 :: P4 :: P16 :: nil) ((P1 :: P4 :: P9 :: nil) ++ (P3 :: P4 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P4 :: P9 :: nil) (P3 :: P4 :: P16 :: nil) (P4 :: nil) 2 2 1 HP1P4P9Mtmp HP3P4P16Mtmp HP4mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P3P4P9P16M : rk(P1 :: P3 :: P4 :: P9 :: P16 ::  nil) <= 5) by (solve_hyps_max HP1P3P4P9P16eq HP1P3P4P9P16M5).
assert(HP1P3P4P9P16m : rk(P1 :: P3 :: P4 :: P9 :: P16 ::  nil) >= 1) by (solve_hyps_min HP1P3P4P9P16eq HP1P3P4P9P16m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP3P4P9P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P3 :: P4 :: P9 :: P16 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P3P4P9P16 requis par la preuve de (?)P3P4P9P16 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 2 , 4 : pour P3P4P9P16 requis par la preuve de (?)P3P4P9P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 1 , 4 : pour P3P4P9P16 requis par la preuve de (?)P3P4P9P16 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP3P4P9P16m2 : rk(P3 :: P4 :: P9 :: P16 :: nil) >= 2).
{
	try assert(HP3P4eq : rk(P3 :: P4 :: nil) = 2) by (apply LP3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3P4mtmp : rk(P3 :: P4 :: nil) >= 2) by (solve_hyps_min HP3P4eq HP3P4m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P3 :: P4 :: nil) (P3 :: P4 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P3 :: P4 :: nil) (P3 :: P4 :: P9 :: P16 :: nil) 2 2 HP3P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP3P4P9P16M3 : rk(P3 :: P4 :: P9 :: P16 :: nil) <= 3).
{
	try assert(HP9eq : rk(P9 :: nil) = 1) by (apply LP9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP9Mtmp : rk(P9 :: nil) <= 1) by (solve_hyps_max HP9eq HP9M1).
	assert(HP3P4P16Mtmp : rk(P3 :: P4 :: P16 :: nil) <= 2) by (solve_hyps_max HP3P4P16eq HP3P4P16M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P9 :: nil) (P3 :: P4 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P3 :: P4 :: P9 :: P16 :: nil) (P9 :: P3 :: P4 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P9 :: P3 :: P4 :: P16 :: nil) ((P9 :: nil) ++ (P3 :: P4 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P9 :: nil) (P3 :: P4 :: P16 :: nil) (nil) 1 2 0 HP9Mtmp HP3P4P16Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P3 :: P4 :: P9 :: P16 ::  AiB : P4 :: P9 ::  A : P1 :: P4 :: P9 ::  *)
assert(HP3P4P9P16m3 : rk(P3 :: P4 :: P9 :: P16 :: nil) >= 3).
{
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	try assert(HP1P3P4P9P16eq : rk(P1 :: P3 :: P4 :: P9 :: P16 :: nil) = 3) by (apply LP1P3P4P9P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P3P4P9P16mtmp : rk(P1 :: P3 :: P4 :: P9 :: P16 :: nil) >= 3) by (solve_hyps_min HP1P3P4P9P16eq HP1P3P4P9P16m3).
	try assert(HP4P9eq : rk(P4 :: P9 :: nil) = 2) by (apply LP4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP4P9mtmp : rk(P4 :: P9 :: nil) >= 2) by (solve_hyps_min HP4P9eq HP4P9m2).
	assert(Hincl : incl (P4 :: P9 :: nil) (list_inter (P1 :: P4 :: P9 :: nil) (P3 :: P4 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P3 :: P4 :: P9 :: P16 :: nil) (P1 :: P4 :: P9 :: P3 :: P4 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P4 :: P9 :: P3 :: P4 :: P9 :: P16 :: nil) ((P1 :: P4 :: P9 :: nil) ++ (P3 :: P4 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P3P4P9P16mtmp;try rewrite HT2 in HP1P3P4P9P16mtmp.
	assert(HT := rule_4 (P1 :: P4 :: P9 :: nil) (P3 :: P4 :: P9 :: P16 :: nil) (P4 :: P9 :: nil) 3 2 2 HP1P3P4P9P16mtmp HP4P9mtmp HP1P4P9Mtmp Hincl); apply HT.
}
try clear HP1P3P4P9P16M1. try clear HP1P3P4P9P16M2. try clear HP1P3P4P9P16M3. try clear HP1P3P4P9P16M4. try clear HP1P3P4P9P16M5. try clear HP1P3P4P9P16M6. try clear HP1P3P4P9P16M7. try clear HP1P3P4P9P16m7. try clear HP1P3P4P9P16m6. try clear HP1P3P4P9P16m5. try clear HP1P3P4P9P16m4. try clear HP1P3P4P9P16m3. try clear HP1P3P4P9P16m2. try clear HP1P3P4P9P16m1. 

assert(HP3P4P9P16M : rk(P3 :: P4 :: P9 :: P16 ::  nil) <= 4) by (solve_hyps_max HP3P4P9P16eq HP3P4P9P16M4).
assert(HP3P4P9P16m : rk(P3 :: P4 :: P9 :: P16 ::  nil) >= 1) by (solve_hyps_min HP3P4P9P16eq HP3P4P9P16m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP9P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P9 :: P16 ::  nil) = 2.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 1 , 2 : pour P9P16 requis par la preuve de (?)P9P16 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 5*)
(* ensembles concernés AUB : P3 :: P4 :: P9 :: P16 ::  AiB : P16 ::  A : P3 :: P4 :: P16 ::  *)
assert(HP9P16m2 : rk(P9 :: P16 :: nil) >= 2).
{
	assert(HP3P4P16Mtmp : rk(P3 :: P4 :: P16 :: nil) <= 2) by (solve_hyps_max HP3P4P16eq HP3P4P16M2).
	try assert(HP3P4P9P16eq : rk(P3 :: P4 :: P9 :: P16 :: nil) = 3) by (apply LP3P4P9P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3P4P9P16mtmp : rk(P3 :: P4 :: P9 :: P16 :: nil) >= 3) by (solve_hyps_min HP3P4P9P16eq HP3P4P9P16m3).
	try assert(HP16eq : rk(P16 :: nil) = 1) by (apply LP16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP16mtmp : rk(P16 :: nil) >= 1) by (solve_hyps_min HP16eq HP16m1).
	assert(Hincl : incl (P16 :: nil) (list_inter (P3 :: P4 :: P16 :: nil) (P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P3 :: P4 :: P9 :: P16 :: nil) (P3 :: P4 :: P16 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P3 :: P4 :: P16 :: P9 :: P16 :: nil) ((P3 :: P4 :: P16 :: nil) ++ (P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP3P4P9P16mtmp;try rewrite HT2 in HP3P4P9P16mtmp.
	assert(HT := rule_4 (P3 :: P4 :: P16 :: nil) (P9 :: P16 :: nil) (P16 :: nil) 3 1 2 HP3P4P9P16mtmp HP16mtmp HP3P4P16Mtmp Hincl); apply HT.
}
try clear HP3P4P9P16M1. try clear HP3P4P9P16M2. try clear HP3P4P9P16M3. try clear HP3P4P9P16M4. try clear HP3P4P9P16M5. try clear HP3P4P9P16M6. try clear HP3P4P9P16M7. try clear HP3P4P9P16m7. try clear HP3P4P9P16m6. try clear HP3P4P9P16m5. try clear HP3P4P9P16m4. try clear HP3P4P9P16m3. try clear HP3P4P9P16m2. try clear HP3P4P9P16m1. 

assert(HP9P16M : rk(P9 :: P16 ::  nil) <= 2) by (solve_hyps_max HP9P16eq HP9P16M2).
assert(HP9P16m : rk(P9 :: P16 ::  nil) >= 1) by (solve_hyps_min HP9P16eq HP9P16m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP7P9P16 *)
(* dans constructLemma(), requis par LP3P4P7P9P16 *)
(* dans la couche 0 *)
Lemma LP1P3P4P7P9P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P1 :: P3 :: P4 :: P7 :: P9 :: P16 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P3P4P7P9P16 requis par la preuve de (?)P1P3P4P7P9P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 4 , 5 : pour P1P2P3P4P7P9P16 requis par la preuve de (?)P1P3P4P7P9P16 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P3P4P7P9P16 requis par la preuve de (?)P1P2P3P4P7P9P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P3P4P7P9P16 requis par la preuve de (?)P1P2P3P4P7P9P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P3P4P7P9P16 requis par la preuve de (?)P1P2P3P4P7P9P16 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P7P9P16m2 : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P7P9P16m3 : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 3).
{
	try assert(HP1P2P3eq : rk(P1 :: P2 :: P3 :: nil) = 3) by (apply LP1P2P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3mtmp : rk(P1 :: P2 :: P3 :: nil) >= 3) by (solve_hyps_min HP1P2P3eq HP1P2P3m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) 3 3 HP1P2P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P3P4P7P9P16m4 : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 4).
{
	try assert(HP1P2P3P4eq : rk(P1 :: P2 :: P3 :: P4 :: nil) = 4) by (apply LP1P2P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P3P4mtmp : rk(P1 :: P2 :: P3 :: P4 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4eq HP1P2P3P4m4).
	assert(Hcomp : 4 <= 4) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P3 :: P4 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P3 :: P4 :: nil) (P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) 4 4 HP1P2P3P4mtmp Hcomp Hincl);apply HT.
}


(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P3P4P7P9P16 requis par la preuve de (?)P1P3P4P7P9P16 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P3P4P7P9P16 requis par la preuve de (?)P1P3P4P7P9P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P3P4P7P9P16 requis par la preuve de (?)P1P3P4P7P9P16 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P3P4P7P9P16m2 : rk(P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 2).
{
	try assert(HP1P3eq : rk(P1 :: P3 :: nil) = 2) by (apply LP1P3 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P3mtmp : rk(P1 :: P3 :: nil) >= 2) by (solve_hyps_min HP1P3eq HP1P3m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P3 :: nil) (P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P3 :: nil) (P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) 2 2 HP1P3mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P3P4P7P9P16m3 : rk(P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 3).
{
	try assert(HP1P3P4eq : rk(P1 :: P3 :: P4 :: nil) = 3) by (apply LP1P3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P3P4mtmp : rk(P1 :: P3 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P3P4eq HP1P3P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P3 :: P4 :: nil) (P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P3 :: P4 :: nil) (P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) 3 3 HP1P3P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 5 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 ::  AiB : P1 :: P7 ::  A : P1 :: P2 :: P7 ::  *)
assert(HP1P3P4P7P9P16m4 : rk(P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 4).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	assert(HP1P2P3P4P7P9P16mtmp : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4P7P9P16eq HP1P2P3P4P7P9P16m4).
	try assert(HP1P7eq : rk(P1 :: P7 :: nil) = 2) by (apply LP1P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P7mtmp : rk(P1 :: P7 :: nil) >= 2) by (solve_hyps_min HP1P7eq HP1P7m2).
	assert(Hincl : incl (P1 :: P7 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) (P1 :: P2 :: P7 :: P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P4P7P9P16mtmp;try rewrite HT2 in HP1P2P3P4P7P9P16mtmp.
	assert(HT := rule_4 (P1 :: P2 :: P7 :: nil) (P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) (P1 :: P7 :: nil) 4 2 2 HP1P2P3P4P7P9P16mtmp HP1P7mtmp HP1P2P7Mtmp Hincl); apply HT.
}


(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 4*)
assert(HP1P3P4P7P9P16M4 : rk(P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) <= 4).
{
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	try assert(HP3P4P7P16eq : rk(P3 :: P4 :: P7 :: P16 :: nil) = 3) by (apply LP3P4P7P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3P4P7P16Mtmp : rk(P3 :: P4 :: P7 :: P16 :: nil) <= 3) by (solve_hyps_max HP3P4P7P16eq HP3P4P7P16M3).
	try assert(HP4eq : rk(P4 :: nil) = 1) by (apply LP4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP4mtmp : rk(P4 :: nil) >= 1) by (solve_hyps_min HP4eq HP4m1).
	assert(Hincl : incl (P4 :: nil) (list_inter (P1 :: P4 :: P9 :: nil) (P3 :: P4 :: P7 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) (P1 :: P4 :: P9 :: P3 :: P4 :: P7 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P4 :: P9 :: P3 :: P4 :: P7 :: P16 :: nil) ((P1 :: P4 :: P9 :: nil) ++ (P3 :: P4 :: P7 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P4 :: P9 :: nil) (P3 :: P4 :: P7 :: P16 :: nil) (P4 :: nil) 2 3 1 HP1P4P9Mtmp HP3P4P7P16Mtmp HP4mtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}


assert(HP1P3P4P7P9P16M : rk(P1 :: P3 :: P4 :: P7 :: P9 :: P16 ::  nil) <= 6) by (solve_hyps_max HP1P3P4P7P9P16eq HP1P3P4P7P9P16M6).
assert(HP1P3P4P7P9P16m : rk(P1 :: P3 :: P4 :: P7 :: P9 :: P16 ::  nil) >= 1) by (solve_hyps_min HP1P3P4P7P9P16eq HP1P3P4P7P9P16m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP3P4P7P9P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P3 :: P4 :: P7 :: P9 :: P16 ::  nil) = 4.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P3P4P7P9P16 requis par la preuve de (?)P3P4P7P9P16 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P3P4P7P9P16 requis par la preuve de (?)P3P4P7P9P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P3P4P7P9P16 requis par la preuve de (?)P3P4P7P9P16 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P3P4P7P9P16 requis par la preuve de (?)P3P4P7P9P16 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP3P4P7P9P16m2 : rk(P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 2).
{
	try assert(HP3P4eq : rk(P3 :: P4 :: nil) = 2) by (apply LP3P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3P4mtmp : rk(P3 :: P4 :: nil) >= 2) by (solve_hyps_min HP3P4eq HP3P4m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P3 :: P4 :: nil) (P3 :: P4 :: P7 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P3 :: P4 :: nil) (P3 :: P4 :: P7 :: P9 :: P16 :: nil) 2 2 HP3P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 5 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 ::  AiB : P7 ::  A : P1 :: P2 :: P7 ::  *)
assert(HP3P4P7P9P16m3 : rk(P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 3).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	assert(HP1P2P3P4P7P9P16mtmp : rk(P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 4) by (solve_hyps_min HP1P2P3P4P7P9P16eq HP1P2P3P4P7P9P16m4).
	try assert(HP7eq : rk(P7 :: nil) = 1) by (apply LP7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP7mtmp : rk(P7 :: nil) >= 1) by (solve_hyps_min HP7eq HP7m1).
	assert(Hincl : incl (P7 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P3 :: P4 :: P7 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) (P1 :: P2 :: P7 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P3 :: P4 :: P7 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P3P4P7P9P16mtmp;try rewrite HT2 in HP1P2P3P4P7P9P16mtmp.
	assert(HT := rule_4 (P1 :: P2 :: P7 :: nil) (P3 :: P4 :: P7 :: P9 :: P16 :: nil) (P7 :: nil) 4 1 2 HP1P2P3P4P7P9P16mtmp HP7mtmp HP1P2P7Mtmp Hincl); apply HT.
}
try clear HP1P2P3P4P7P9P16M1. try clear HP1P2P3P4P7P9P16M2. try clear HP1P2P3P4P7P9P16M3. try clear HP1P2P3P4P7P9P16M4. try clear HP1P2P3P4P7P9P16M5. try clear HP1P2P3P4P7P9P16M6. try clear HP1P2P3P4P7P9P16M7. try clear HP1P2P3P4P7P9P16m7. try clear HP1P2P3P4P7P9P16m6. try clear HP1P2P3P4P7P9P16m5. try clear HP1P2P3P4P7P9P16m4. try clear HP1P2P3P4P7P9P16m3. try clear HP1P2P3P4P7P9P16m2. try clear HP1P2P3P4P7P9P16m1. 

(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 4 et 5*)
assert(HP3P4P7P9P16M4 : rk(P3 :: P4 :: P7 :: P9 :: P16 :: nil) <= 4).
{
	try assert(HP9eq : rk(P9 :: nil) = 1) by (apply LP9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP9Mtmp : rk(P9 :: nil) <= 1) by (solve_hyps_max HP9eq HP9M1).
	try assert(HP3P4P7P16eq : rk(P3 :: P4 :: P7 :: P16 :: nil) = 3) by (apply LP3P4P7P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3P4P7P16Mtmp : rk(P3 :: P4 :: P7 :: P16 :: nil) <= 3) by (solve_hyps_max HP3P4P7P16eq HP3P4P7P16M3).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P9 :: nil) (P3 :: P4 :: P7 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P3 :: P4 :: P7 :: P9 :: P16 :: nil) (P9 :: P3 :: P4 :: P7 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P9 :: P3 :: P4 :: P7 :: P16 :: nil) ((P9 :: nil) ++ (P3 :: P4 :: P7 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P9 :: nil) (P3 :: P4 :: P7 :: P16 :: nil) (nil) 1 3 0 HP9Mtmp HP3P4P7P16Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}
try clear HP3P4P7P16M1. try clear HP3P4P7P16M2. try clear HP3P4P7P16M3. try clear HP3P4P7P16M4. try clear HP3P4P7P16M5. try clear HP3P4P7P16M6. try clear HP3P4P7P16M7. try clear HP3P4P7P16m7. try clear HP3P4P7P16m6. try clear HP3P4P7P16m5. try clear HP3P4P7P16m4. try clear HP3P4P7P16m3. try clear HP3P4P7P16m2. try clear HP3P4P7P16m1. 

(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 4*)
(* ensembles concernés AUB : P1 :: P3 :: P4 :: P7 :: P9 :: P16 ::  AiB : P4 :: P9 ::  A : P1 :: P4 :: P9 ::  *)
assert(HP3P4P7P9P16m4 : rk(P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 4).
{
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	try assert(HP1P3P4P7P9P16eq : rk(P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) = 4) by (apply LP1P3P4P7P9P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P3P4P7P9P16mtmp : rk(P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 4) by (solve_hyps_min HP1P3P4P7P9P16eq HP1P3P4P7P9P16m4).
	try assert(HP4P9eq : rk(P4 :: P9 :: nil) = 2) by (apply LP4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP4P9mtmp : rk(P4 :: P9 :: nil) >= 2) by (solve_hyps_min HP4P9eq HP4P9m2).
	assert(Hincl : incl (P4 :: P9 :: nil) (list_inter (P1 :: P4 :: P9 :: nil) (P3 :: P4 :: P7 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) (P1 :: P4 :: P9 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P4 :: P9 :: P3 :: P4 :: P7 :: P9 :: P16 :: nil) ((P1 :: P4 :: P9 :: nil) ++ (P3 :: P4 :: P7 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P3P4P7P9P16mtmp;try rewrite HT2 in HP1P3P4P7P9P16mtmp.
	assert(HT := rule_4 (P1 :: P4 :: P9 :: nil) (P3 :: P4 :: P7 :: P9 :: P16 :: nil) (P4 :: P9 :: nil) 4 2 2 HP1P3P4P7P9P16mtmp HP4P9mtmp HP1P4P9Mtmp Hincl); apply HT.
}
try clear HP1P3P4P7P9P16M1. try clear HP1P3P4P7P9P16M2. try clear HP1P3P4P7P9P16M3. try clear HP1P3P4P7P9P16M4. try clear HP1P3P4P7P9P16M5. try clear HP1P3P4P7P9P16M6. try clear HP1P3P4P7P9P16M7. try clear HP1P3P4P7P9P16m7. try clear HP1P3P4P7P9P16m6. try clear HP1P3P4P7P9P16m5. try clear HP1P3P4P7P9P16m4. try clear HP1P3P4P7P9P16m3. try clear HP1P3P4P7P9P16m2. try clear HP1P3P4P7P9P16m1. 

assert(HP3P4P7P9P16M : rk(P3 :: P4 :: P7 :: P9 :: P16 ::  nil) <= 5) by (solve_hyps_max HP3P4P7P9P16eq HP3P4P7P9P16M5).
assert(HP3P4P7P9P16m : rk(P3 :: P4 :: P7 :: P9 :: P16 ::  nil) >= 1) by (solve_hyps_min HP3P4P7P9P16eq HP3P4P7P9P16m1).
intuition.
Qed.

(* dans la couche 0 *)
Lemma LP7P9P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> rk(P7 :: P9 :: P16 ::  nil) = 3.
Proof.

intros P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 
HP1P2eq HP1P3eq HP2P3eq HP1P4eq HP2P4eq HP3P4eq HP2P3P4eq HP1P2P3P4eq HP1P5eq HP2P5eq
HP3P5eq HP2P3P5eq HP1P2P3P5eq HP4P5eq HP2P4P5eq HP1P2P4P5eq HP3P4P5eq HP1P3P4P5eq HP2P3P4P5eq HP1P2P3P4P5eq
HP1P6eq HP2P6eq HP3P6eq HP2P3P6eq HP1P2P3P6eq HP4P6eq HP2P4P6eq HP1P2P4P6eq HP3P4P6eq HP1P3P4P6eq
HP2P3P4P6eq HP1P2P3P4P6eq HP5P6eq HP2P5P6eq HP1P2P5P6eq HP3P5P6eq HP1P3P5P6eq HP2P3P5P6eq HP1P2P3P5P6eq HP4P5P6eq
HP1P4P5P6eq HP2P4P5P6eq HP1P2P4P5P6eq HP3P4P5P6eq HP1P3P4P5P6eq HP2P3P4P5P6eq HP1P7eq HP2P7eq HP1P2P7eq HP1P8eq
HP3P8eq HP1P3P8eq HP7P8eq HP1P9eq HP4P9eq HP1P4P9eq HP7P9eq HP8P9eq HP7P8P9eq HP1P7P8P9eq
HP1P10eq HP5P10eq HP1P5P10eq HP7P10eq HP8P10eq HP7P8P10eq HP1P7P8P10eq HP9P10eq HP7P9P10eq HP1P7P9P10eq
HP8P9P10eq HP1P8P9P10eq HP7P8P9P10eq HP1P7P8P9P10eq HP1P11eq HP6P11eq HP1P6P11eq HP7P11eq HP8P11eq HP7P8P11eq
HP1P7P8P11eq HP9P11eq HP7P9P11eq HP1P7P9P11eq HP8P9P11eq HP1P8P9P11eq HP7P8P9P11eq HP1P7P8P9P11eq HP10P11eq HP7P10P11eq
HP1P7P10P11eq HP8P10P11eq HP1P8P10P11eq HP7P8P10P11eq HP1P7P8P10P11eq HP9P10P11eq HP1P9P10P11eq HP7P9P10P11eq HP1P7P9P10P11eq HP8P9P10P11eq
HP1P8P9P10P11eq HP7P8P9P10P11eq HP2P3P12eq HP7P8P12eq HP2P4P13eq HP7P9P13eq HP2P5P14eq HP7P10P14eq HP2P6P15eq HP7P11P15eq
HP3P4P16eq HP8P9P16eq HP3P5P17eq HP8P10P17eq HP3P6P18eq HP8P11P18eq HP4P5P19eq HP9P10P19eq HP4P6P20eq HP9P11P20eq
HP5P6P21eq HP10P11P21eq .

(* dans constructProofaux(), preuve de rg = 2 , 3 : pour P7P9P16 requis par la preuve de (?)P7P9P16 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 3 , 4 : pour P1P4P7P9P16 requis par la preuve de (?)P7P9P16 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 1 , 2 : pour P7P16 requis par la preuve de (?)P1P4P7P9P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P4P7P9P16 requis par la preuve de (?)P1P4P7P9P16 pour la règle 1  *)
(* dans constructProofaux(), preuve de rg = 3 , 5 : pour P1P2P4P7P9P16 requis par la preuve de (?)P1P4P7P9P16 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P2P4P7P9P16 requis par la preuve de (?)P1P2P4P7P9P16 pour la règle 5  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P2P4P7P9P16 requis par la preuve de (?)P1P2P4P7P9P16 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P7P9P16m2 : rk(P1 :: P2 :: P4 :: P7 :: P9 :: P16 :: nil) >= 2).
{
	try assert(HP1P2eq : rk(P1 :: P2 :: nil) = 2) by (apply LP1P2 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2mtmp : rk(P1 :: P2 :: nil) >= 2) by (solve_hyps_min HP1P2eq HP1P2m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: P16 :: nil) 2 2 HP1P2mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P2P4P7P9P16m3 : rk(P1 :: P2 :: P4 :: P7 :: P9 :: P16 :: nil) >= 3).
{
	try assert(HP1P2P4eq : rk(P1 :: P2 :: P4 :: nil) = 3) by (apply LP1P2P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P4mtmp : rk(P1 :: P2 :: P4 :: nil) >= 3) by (solve_hyps_min HP1P2P4eq HP1P2P4m3).
	assert(Hcomp : 3 <= 3) by (repeat constructor).
	assert(Hincl : incl (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P2 :: P4 :: nil) (P1 :: P2 :: P4 :: P7 :: P9 :: P16 :: nil) 3 3 HP1P2P4mtmp Hcomp Hincl);apply HT.
}


(* dans constructProofaux(), preuve de rg = 2 , 5 : pour P1P4P7P9P16 requis par la preuve de (?)P1P4P7P9P16 pour la règle 4  *)
(* dans constructProofaux(), preuve de rg = 1 , 5 : pour P1P4P7P9P16 requis par la preuve de (?)P1P4P7P9P16 pour la règle 5  *)
(* Application de la règle 5 code (1 ou 2 dans la thèse) *)
(* marque de l'antécédent : 4 *)
assert(HP1P4P7P9P16m2 : rk(P1 :: P4 :: P7 :: P9 :: P16 :: nil) >= 2).
{
	try assert(HP1P4eq : rk(P1 :: P4 :: nil) = 2) by (apply LP1P4 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4mtmp : rk(P1 :: P4 :: nil) >= 2) by (solve_hyps_min HP1P4eq HP1P4m2).
	assert(Hcomp : 2 <= 2) by (repeat constructor).
	assert(Hincl : incl (P1 :: P4 :: nil) (P1 :: P4 :: P7 :: P9 :: P16 :: nil)) by (repeat clear_all_rk;my_inO).
	assert(HT := rule_5 (P1 :: P4 :: nil) (P1 :: P4 :: P7 :: P9 :: P16 :: nil) 2 2 HP1P4mtmp Hcomp Hincl);apply HT.
}


(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 5 4 et 4*)
(* ensembles concernés AUB : P1 :: P2 :: P4 :: P7 :: P9 :: P16 ::  AiB : P1 :: P7 ::  A : P1 :: P2 :: P7 ::  *)
assert(HP1P4P7P9P16m3 : rk(P1 :: P4 :: P7 :: P9 :: P16 :: nil) >= 3).
{
	try assert(HP1P2P7eq : rk(P1 :: P2 :: P7 :: nil) = 2) by (apply LP1P2P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P2P7Mtmp : rk(P1 :: P2 :: P7 :: nil) <= 2) by (solve_hyps_max HP1P2P7eq HP1P2P7M2).
	assert(HP1P2P4P7P9P16mtmp : rk(P1 :: P2 :: P4 :: P7 :: P9 :: P16 :: nil) >= 3) by (solve_hyps_min HP1P2P4P7P9P16eq HP1P2P4P7P9P16m3).
	try assert(HP1P7eq : rk(P1 :: P7 :: nil) = 2) by (apply LP1P7 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P7mtmp : rk(P1 :: P7 :: nil) >= 2) by (solve_hyps_min HP1P7eq HP1P7m2).
	assert(Hincl : incl (P1 :: P7 :: nil) (list_inter (P1 :: P2 :: P7 :: nil) (P1 :: P4 :: P7 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P2 :: P4 :: P7 :: P9 :: P16 :: nil) (P1 :: P2 :: P7 :: P1 :: P4 :: P7 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P2 :: P7 :: P1 :: P4 :: P7 :: P9 :: P16 :: nil) ((P1 :: P2 :: P7 :: nil) ++ (P1 :: P4 :: P7 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P2P4P7P9P16mtmp;try rewrite HT2 in HP1P2P4P7P9P16mtmp.
	assert(HT := rule_4 (P1 :: P2 :: P7 :: nil) (P1 :: P4 :: P7 :: P9 :: P16 :: nil) (P1 :: P7 :: nil) 3 2 2 HP1P2P4P7P9P16mtmp HP1P7mtmp HP1P2P7Mtmp Hincl); apply HT.
}
try clear HP1P2P4P7P9P16M1. try clear HP1P2P4P7P9P16M2. try clear HP1P2P4P7P9P16M3. try clear HP1P2P4P7P9P16M4. try clear HP1P2P4P7P9P16M5. try clear HP1P2P4P7P9P16M6. try clear HP1P2P4P7P9P16M7. try clear HP1P2P4P7P9P16m7. try clear HP1P2P4P7P9P16m6. try clear HP1P2P4P7P9P16m5. try clear HP1P2P4P7P9P16m4. try clear HP1P2P4P7P9P16m3. try clear HP1P2P4P7P9P16m2. try clear HP1P2P4P7P9P16m1. 

(* Application de la règle 1 code (5 dans la thèse) conclusion AUB *)
(* marque des antécédents A B AiB : 4 5 et 5*)
assert(HP1P4P7P9P16M4 : rk(P1 :: P4 :: P7 :: P9 :: P16 :: nil) <= 4).
{
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	assert(HP7P16Mtmp : rk(P7 :: P16 :: nil) <= 2) by (solve_hyps_max HP7P16eq HP7P16M2).
	assert(Hmtmp : rk(nil) >= 0) by (solve_hyps_min Hnuleq Hm).
	assert(Hincl : incl (nil) (list_inter (P1 :: P4 :: P9 :: nil) (P7 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P4 :: P7 :: P9 :: P16 :: nil) (P1 :: P4 :: P9 :: P7 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P4 :: P9 :: P7 :: P16 :: nil) ((P1 :: P4 :: P9 :: nil) ++ (P7 :: P16 :: nil))) by (clear_all_rk;my_inO).
	assert(HT := rule_1 (P1 :: P4 :: P9 :: nil) (P7 :: P16 :: nil) (nil) 2 2 0 HP1P4P9Mtmp HP7P16Mtmp Hmtmp Hincl);
	rewrite <-HT2 in HT;try rewrite <-HT1 in HT;apply HT.
}
try clear HP7P16M1. try clear HP7P16M2. try clear HP7P16M3. try clear HP7P16M4. try clear HP7P16M5. try clear HP7P16M6. try clear HP7P16M7. try clear HP7P16m7. try clear HP7P16m6. try clear HP7P16m5. try clear HP7P16m4. try clear HP7P16m3. try clear HP7P16m2. try clear HP7P16m1. 

(* dans constructProofaux(), preuve de rg = 1 , 3 : pour P7P9P16 requis par la preuve de (?)P7P9P16 pour la règle 4  *)
(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 5 4 et 4*)
(* ensembles concernés AUB : P1 :: P4 :: P7 :: P9 :: P16 ::  AiB : P9 ::  A : P1 :: P4 :: P9 ::  *)
assert(HP7P9P16m2 : rk(P7 :: P9 :: P16 :: nil) >= 2).
{
	try assert(HP1P4P9eq : rk(P1 :: P4 :: P9 :: nil) = 2) by (apply LP1P4P9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP1P4P9Mtmp : rk(P1 :: P4 :: P9 :: nil) <= 2) by (solve_hyps_max HP1P4P9eq HP1P4P9M2).
	assert(HP1P4P7P9P16mtmp : rk(P1 :: P4 :: P7 :: P9 :: P16 :: nil) >= 3) by (solve_hyps_min HP1P4P7P9P16eq HP1P4P7P9P16m3).
	try assert(HP9eq : rk(P9 :: nil) = 1) by (apply LP9 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP9mtmp : rk(P9 :: nil) >= 1) by (solve_hyps_min HP9eq HP9m1).
	assert(Hincl : incl (P9 :: nil) (list_inter (P1 :: P4 :: P9 :: nil) (P7 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P1 :: P4 :: P7 :: P9 :: P16 :: nil) (P1 :: P4 :: P9 :: P7 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P1 :: P4 :: P9 :: P7 :: P9 :: P16 :: nil) ((P1 :: P4 :: P9 :: nil) ++ (P7 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP1P4P7P9P16mtmp;try rewrite HT2 in HP1P4P7P9P16mtmp.
	assert(HT := rule_4 (P1 :: P4 :: P9 :: nil) (P7 :: P9 :: P16 :: nil) (P9 :: nil) 3 1 2 HP1P4P7P9P16mtmp HP9mtmp HP1P4P9Mtmp Hincl); apply HT.
}
try clear HP1P4P7P9P16M1. try clear HP1P4P7P9P16M2. try clear HP1P4P7P9P16M3. try clear HP1P4P7P9P16M4. try clear HP1P4P7P9P16M5. try clear HP1P4P7P9P16M6. try clear HP1P4P7P9P16M7. try clear HP1P4P7P9P16m7. try clear HP1P4P7P9P16m6. try clear HP1P4P7P9P16m5. try clear HP1P4P7P9P16m4. try clear HP1P4P7P9P16m3. try clear HP1P4P7P9P16m2. try clear HP1P4P7P9P16m1. 

(* Application de la règle 4 code (7 ou 8 dans la thèse) *)
(* marque des antécédents AUB AiB A: 4 4 et 5*)
(* ensembles concernés AUB : P3 :: P4 :: P7 :: P9 :: P16 ::  AiB : P16 ::  A : P3 :: P4 :: P16 ::  *)
assert(HP7P9P16m3 : rk(P7 :: P9 :: P16 :: nil) >= 3).
{
	assert(HP3P4P16Mtmp : rk(P3 :: P4 :: P16 :: nil) <= 2) by (solve_hyps_max HP3P4P16eq HP3P4P16M2).
	try assert(HP3P4P7P9P16eq : rk(P3 :: P4 :: P7 :: P9 :: P16 :: nil) = 4) by (apply LP3P4P7P9P16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP3P4P7P9P16mtmp : rk(P3 :: P4 :: P7 :: P9 :: P16 :: nil) >= 4) by (solve_hyps_min HP3P4P7P9P16eq HP3P4P7P9P16m4).
	try assert(HP16eq : rk(P16 :: nil) = 1) by (apply LP16 with (P1 := P1) (P2 := P2) (P3 := P3) (P4 := P4) (P5 := P5) (P6 := P6) (P7 := P7) (P8 := P8) (P9 := P9) (P10 := P10) (P11 := P11) (P12 := P12) (P13 := P13) (P14 := P14) (P15 := P15) (P16 := P16) (P17 := P17) (P18 := P18) (P19 := P19) (P20 := P20) (P21 := P21) ;try assumption).
	assert(HP16mtmp : rk(P16 :: nil) >= 1) by (solve_hyps_min HP16eq HP16m1).
	assert(Hincl : incl (P16 :: nil) (list_inter (P3 :: P4 :: P16 :: nil) (P7 :: P9 :: P16 :: nil))) by (repeat clear_all_rk;my_inO).
	assert(HT1 : equivlist (P3 :: P4 :: P7 :: P9 :: P16 :: nil) (P3 :: P4 :: P16 :: P7 :: P9 :: P16 :: nil)) by (clear_all_rk;my_inO).
	assert(HT2 : equivlist (P3 :: P4 :: P16 :: P7 :: P9 :: P16 :: nil) ((P3 :: P4 :: P16 :: nil) ++ (P7 :: P9 :: P16 :: nil))) by (clear_all_rk;my_inO).
	try rewrite HT1 in HP3P4P7P9P16mtmp;try rewrite HT2 in HP3P4P7P9P16mtmp.
	assert(HT := rule_4 (P3 :: P4 :: P16 :: nil) (P7 :: P9 :: P16 :: nil) (P16 :: nil) 4 1 2 HP3P4P7P9P16mtmp HP16mtmp HP3P4P16Mtmp Hincl); apply HT.
}
try clear HP3P4P7P9P16M1. try clear HP3P4P7P9P16M2. try clear HP3P4P7P9P16M3. try clear HP3P4P7P9P16M4. try clear HP3P4P7P9P16M5. try clear HP3P4P7P9P16M6. try clear HP3P4P7P9P16M7. try clear HP3P4P7P9P16m7. try clear HP3P4P7P9P16m6. try clear HP3P4P7P9P16m5. try clear HP3P4P7P9P16m4. try clear HP3P4P7P9P16m3. try clear HP3P4P7P9P16m2. try clear HP3P4P7P9P16m1. 

assert(HP7P9P16M : rk(P7 :: P9 :: P16 ::  nil) <= 3) by (solve_hyps_max HP7P9P16eq HP7P9P16M3).
assert(HP7P9P16m : rk(P7 :: P9 :: P16 ::  nil) >= 1) by (solve_hyps_min HP7P9P16eq HP7P9P16m1).
intuition.
Qed.

(* dans constructLemma(), requis par LP2P7P9P16 *)
(* dans constructLemma(), requis par LP2P7P8P9P16 *)
(* dans constructLemma(), requis par LP1P2P7P8P9P16 *)
(* dans constructLemma(), requis par LP1P2P4P7P8P9P16 *)
(* dans la couche 0 *)
Lemma LP1P2P7P8P9P16 : forall P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 P20 P21 ,
rk(P1 :: P2 ::  nil) = 2 -> rk(P1 :: P3 ::  nil) = 2 -> rk(P2 :: P3 ::  nil) = 2 ->
rk(P1 :: P4 ::  nil) = 2 -> rk(P2 :: P4 ::  nil) = 2 -> rk(P3 :: P4 ::  nil) = 2 ->
rk(P2 :: P3 :: P4 ::  nil) = 3 -> rk(P1 :: P2 :: P3 :: P4 ::  nil) = 4 -> rk(P1 :: P5 ::  nil) = 2 ->
rk(P2 :: P5 ::  nil) = 2 -> rk(P3 :: P5 ::  nil) = 2 -> rk(P2 :: P3 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P5 ::  nil) = 4 -> rk(P4 :: P5 ::  nil) = 2 -> rk(P2 :: P4 :: P5 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P5 ::  nil) = 4 -> rk(P3 :: P4 :: P5 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P5 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P5 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P5 ::  nil) = 5 -> rk(P1 :: P6 ::  nil) = 2 ->
rk(P2 :: P6 ::  nil) = 2 -> rk(P3 :: P6 ::  nil) = 2 -> rk(P2 :: P3 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P3 :: P6 ::  nil) = 4 -> rk(P4 :: P6 ::  nil) = 2 -> rk(P2 :: P4 :: P6 ::  nil) = 3 ->
rk(P1 :: P2 :: P4 :: P6 ::  nil) = 4 -> rk(P3 :: P4 :: P6 ::  nil) = 3 -> rk(P1 :: P3 :: P4 :: P6 ::  nil) = 4 ->
rk(P2 :: P3 :: P4 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P4 :: P6 ::  nil) = 5 -> rk(P5 :: P6 ::  nil) = 2 ->
rk(P2 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P2 :: P5 :: P6 ::  nil) = 4 -> rk(P3 :: P5 :: P6 ::  nil) = 3 ->
rk(P1 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P3 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P2 :: P3 :: P5 :: P6 ::  nil) = 5 ->
rk(P4 :: P5 :: P6 ::  nil) = 3 -> rk(P1 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P2 :: P4 :: P5 :: P6 ::  nil) = 4 ->
rk(P1 :: P2 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P3 :: P4 :: P5 :: P6 ::  nil) = 4 -> rk(P1 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 ->
rk(P2 :: P3 :: P4 :: P5 :: P6 ::  nil) = 5 -> rk(P1 :: P7 ::  nil) = 2 -> rk(P2 :: P7 ::  nil) = 2 ->
rk(P1 :: P2 :: P7 ::  nil) = 2 -> rk(P1 :: P8 ::  nil) = 2 -> rk(P3 :: P8 ::  nil) = 2 ->
rk(P1 :: P3 :: P8 ::  nil) = 2 -> rk(P7 :: P8 ::  nil) = 2 -> rk(P1 :: P9 ::  nil) = 2 ->
rk(P4 :: P9 ::  nil) = 2 -> rk(P1 :: P4 :: P9 ::  nil) = 2 -> rk(P7 :: P9 ::  nil) = 2 ->
rk(P8 :: P9 ::  nil) = 2 -> rk(P7 :: P8 :: P9 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P9 ::  nil) = 4 ->
rk(P1 :: P10 ::  nil) = 2 -> rk(P5 :: P10 ::  nil) = 2 -> rk(P1 :: P5 :: P10 ::  nil) = 2 ->
rk(P7 :: P10 ::  nil) = 2 -> rk(P8 :: P10 ::  nil) = 2 -> rk(P7 :: P8 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P8 :: P10 ::  nil) = 4 -> rk(P9 :: P10 ::  nil) = 2 -> rk(P7 :: P9 :: P10 ::  nil) = 3 ->
rk(P1 :: P7 :: P9 :: P10 ::  nil) = 4 -> rk(P8 :: P9 :: P10 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P10 ::  nil) = 4 ->
rk(P7 :: P8 :: P9 :: P10 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P9 :: P10 ::  nil) = 5 -> rk(P1 :: P11 ::  nil) = 2 ->
rk(P6 :: P11 ::  nil) = 2 -> rk(P1 :: P6 :: P11 ::  nil) = 2 -> rk(P7 :: P11 ::  nil) = 2 ->
rk(P8 :: P11 ::  nil) = 2 -> rk(P7 :: P8 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P8 :: P11 ::  nil) = 4 ->
rk(P9 :: P11 ::  nil) = 2 -> rk(P7 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P7 :: P9 :: P11 ::  nil) = 4 ->
rk(P8 :: P9 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P9 :: P11 ::  nil) = 4 -> rk(P7 :: P8 :: P9 :: P11 ::  nil) = 4 ->
rk(P1 :: P7 :: P8 :: P9 :: P11 ::  nil) = 5 -> rk(P10 :: P11 ::  nil) = 2 -> rk(P7 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P7 :: P10 :: P11 ::  nil) = 4 -> rk(P8 :: P10 :: P11 ::  nil) = 3 -> rk(P1 :: P8 :: P10 :: P11 ::  nil) = 4 ->
rk(P7 :: P8 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P8 :: P10 :: P11 ::  nil) = 5 -> rk(P9 :: P10 :: P11 ::  nil) = 3 ->
rk(P1 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P7 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P7 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P8 :: P9 :: P10 :: P11 ::  nil) = 4 -> rk(P1 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 -> rk(P7 :: P8 :: P9 :: P10 :: P11 ::  nil) = 5 ->
rk(P2 :: P3 :: P12 ::  nil) = 2 -> rk(P7 :: P8 :: P12 ::  nil) = 2 -> rk(P2 :: P4 :: P13 ::  nil) = 2 ->
rk(P7 :: P9 :: P13 ::  nil) = 2 -> rk(P2 :: P5 :: P14 ::  nil) = 2 -> rk(P7 :: P10 :: P14 ::  nil) = 2 ->
rk(P2 :: P6 :: P15 ::  nil) = 2 -> rk(P7 :: P11 :: P15 ::  nil) = 2 -> rk(P3 :: P4 :: P16 ::  nil) = 2 ->
rk(P8 :: P9 :: P16 ::  nil) = 2 -> rk(P3 :: P5 :: P17 ::  nil) = 2 -> rk(P8 :: P10 :: P17 ::  nil) = 2 ->
rk(P3 :: P6 :: P18 ::  nil) = 2 -> rk(P8 :: P11 :: P18 ::  nil) = 2 -> rk(P4 :: P5 :: P19 ::  nil) = 2 ->
rk(P9 :: P10 :: P19 ::  nil) = 2 -> rk(P4 :: P6 :: P20 ::  nil) = 2 -> rk(P9 :: P11 :: P20 ::  nil) = 2 ->
rk(P5 :: P6 :: P21 ::  nil) = 2 -> rk(P10 :: P11 :: P21 ::  nil) = 2 -> 